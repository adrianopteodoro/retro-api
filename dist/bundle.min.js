/*! For license information please see bundle.min.js.LICENSE.txt */
(()=>{"use strict";var e={d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Js:()=>_t,$W:()=>ut,ui:()=>pt,VL:()=>Et});const t="retroApiConfig";class s{get version(){return this._cfg.version??"0"}set version(e){this._cfg.version=e,this.writeConfiguration()}get API_KEY(){return this._cfg.identification.RAApi_key}set API_KEY(e){this._cfg.identification.RAApi_key=e,this.writeConfiguration()}get USER_NAME(){return this._cfg.identification.RAApi_login}set USER_NAME(e){this._cfg.identification.RAApi_login=e,this.writeConfiguration()}get identConfirmed(){return this._cfg.identification.identConfirmed??!1}set identConfirmed(e){this._cfg.identification.identConfirmed=e,this.writeConfiguration()}get DISCORD_WEBHOOK(){return this._cfg.discordWebhook}set DISCORD_WEBHOOK(e){this._cfg.discordWebhook=e,this.writeConfiguration()}get userImageSrc(){return this._cfg.identification.userImageSrc||""}set userImageSrc(e){this._cfg.identification.userImageSrc=e,this.ui.buttons&&(ui.buttons.userImage.src=e),this.writeConfiguration()}get startOnLoad(){return this._cfg.settings.startOnLoad}set startOnLoad(e){this._cfg.settings.startOnLoad=e,this.writeConfiguration()}get targetUser(){return this._cfg.settings.targetUser||this.USER_NAME}set targetUser(e){this._cfg.settings.targetUser=e,this.writeConfiguration(),this.identConfirmed&&(ui.settings.getLastGameID(),ui.awards.updateAwards())}get gameID(){return this._cfg.settings.gameID}set gameID(e){this._cfg.settings.gameID=e,this.writeConfiguration()}get updateDelay(){const e=this._cfg.settings.updateDelay;return e<5?5:e}get updateDelayInMiliSecs(){return 1e3*this._cfg.settings.updateDelay}set updateDelay(e){let t=parseInt(e)>0?e:10;this._cfg.settings.updateDelay=t,this.writeConfiguration()}get bgVisibility(){return this._cfg.settings.bgVisibility??!0}set bgVisibility(e){this._cfg.settings.bgVisibility=e,this.writeConfiguration()}get targetMoveToTop(){return this._cfg.settings.targetMoveToTop}set targetMoveToTop(e){this._cfg.settings.targetMoveToTop=e,this.writeConfiguration()}get aotw(){const e=this._cfg.aotw;return!!(e&&function(e){const t=new Date,s=new Date;return s.setDate(t.getDate()-7),new Date(e)>s}(e.StartAt))&&this._cfg.aotw}set aotw(e){this._cfg.aotw=e,this.writeConfiguration()}get ui(){return this._cfg.ui}get gamesDB(){return this._cfg.gamesDB||(this._cfg.gamesDB={}),this._cfg.gamesDB}get cheevosDB(){return this._cfg.cheevosDB||(this._cfg.cheevosDB={}),this._cfg.cheevosDB}get mainColor(){return this._cfg.settings.mainColor??i.default.mainColor}get secondaryColor(){return this._cfg.settings.secondaryColor??i.default.secondaryColor}get accentColor(){return this._cfg.settings.accentColor??i.default.accentColor}get fontColor(){return this._cfg.settings.fontColor??i.default.fontColor}get selectionColor(){return this._cfg.settings.selectionColor??i.default.selectionColor}set mainColor(e){this._cfg.settings.mainColor=e,this.writeConfiguration()}set secondaryColor(e){this._cfg.settings.secondaryColor=e,this.writeConfiguration()}set accentColor(e){this._cfg.settings.accentColor=e,this.writeConfiguration()}set fontColor(e){this._cfg.settings.fontColor=e,this.writeConfiguration()}set selectionColor(e){this._cfg.settings.selectionColor=e,this.writeConfiguration()}get colorsPreset(){return this._cfg.settings.preset||"default"}set colorsPreset(e){this._cfg.settings.preset=e,this.writeConfiguration()}constructor(){this.readConfiguration(),this.fixConfig()}fixConfig=()=>{try{this.ui.update_section?.playTime&&(this._cfg.playTime={...this._cfg.playTime,...this.ui.update_section?.playTime}),Object.getOwnPropertyNames(this._cfg.playTime??{}).forEach((e=>{this.gamesDB[e]={...this.gamesDB[e],TimePlayed:this._cfg.playTime[e]}})),delete this._cfg.playTime,delete this.ui.update_section?.playTime,this.ui.game_section?.contextMenuPropertiesItems&&(this.ui.game_section.contextMenuPropertiesItems.forEach((e=>{let t=e.id.replace(/context_show-/gi,"");t="show"+t.charAt(0).toUpperCase()+t.slice(1);const s=!!e.checked;this.saveUIProperty({sectionID:"game_section",property:t,value:s})})),delete this.ui.game_section?.contextMenuPropertiesItems,delete this.ui.game_section?.contextMenuItems,delete this.ui.game_section?.gameInfoElements);const e=this.ui.note_section?.game_notes||{};Object.keys(e).forEach((t=>{this.gamesDB[t]={...this.gamesDB[t],notes:e[t]??""},delete this.ui.note_section.game_notes[t]}));let t={filterName:this._cfg.settings?.filterTargetBy??"all",state:this._cfg?.settings?.reverseFilterTarget?-1:1};"all"!==t.filterName&&(this.ui.target_section.filters={[t.filterName]:t}),delete this._cfg.settings.filterTargetBy,delete this._cfg.settings.reverseFilterTarget,t={filterName:this.ui.achievements_section?.filterBy??"all",state:this.ui.achievements_section?.reverseFilter?-1:1},"all"!==t.filterName&&(this.ui.achievements_section.filters={[t.filterName]:t}),delete this.ui.achievements_section?.filterBy,delete this.ui.achievements_section?.reverseFilter,t={filterName:this.ui["achievements_section-1"]?.filterBy??"all",state:this.ui["achievements_section-1"]?.reverseFilter?-1:1},"all"!==t.filterName&&(this.ui["achievements_section-1"].filters={[t.filterName]:t}),delete this.ui["achievements_section-1"]?.filterBy,delete this.ui["achievements_section-1"]?.reverseFilter,this.writeConfiguration()}catch{console.error("fix config")}};getColors(e){if(this.colorsPreset=e,"custom"===e)return{mainColor:this.mainColor,secondaryColor:this.secondaryColor,accentColor:this.accentColor,fontColor:this.fontColor,selectionColor:this.selectionColor};const t=i[e]||i.default;return t.selectionColor||(t.selectionColor=function(e,t=1){3===(e=e.replace(/^#/,"")).length&&(e=e.split("").map((e=>e+e)).join(""));const s=parseInt(e,16);return`rgba(${s>>16&255}, ${s>>8&255}, ${255&s}, ${t})`}(t.accentColor,.1)),t}setNewPosition({id:e,xPos:t,yPos:s,width:i,height:n,hidden:a}){this._cfg.ui.hasOwnProperty(e)||(this._cfg.ui[e]={id:e,x:t,y:s,width:i,height:n,hidden:a}),t&&(this._cfg.ui[e].x=t),s&&(this._cfg.ui[e].y=s),i&&(this._cfg.ui[e].width=i+"px"),n&&(this._cfg.ui[e].height=n+"px"),void 0!==a&&(this._cfg.ui[e].hidden=a),this.writeConfiguration()}readConfiguration(){let e=JSON.parse(localStorage.getItem(t));e||(e={identification:{RAApi_key:"",RAApi_login:""},settings:{updateDelay:5,sort:"default",gameID:1,ACHIV_MAX_SIZE:150,ACHIV_MIN_SIZE:30},ui:{}}),this._cfg=e,localStorage.setItem(t,JSON.stringify(this._cfg)),this.writeConfiguration()}saveUIProperty({sectionID:e,property:t,value:s}){e&&t&&(this.ui[e][t]=s,this.writeConfiguration())}saveSettingProperty(e,t){e&&(this._cfg.settings[e]=t,this.writeConfiguration())}getUIProperty({sectionID:e,property:t}){if(e&&t)return this.ui[e]?this.ui[e][t]:void 0}getSettingProperty(e){if(e)return this._cfg.settings[e]}delayedWrite;writeConfiguration(){clearTimeout(this.delayedWrite),this.delayedWrite=setTimeout((()=>{localStorage.setItem(t,JSON.stringify(this._cfg))}),1e3)}}const i={default:{mainColor:"#171A21",secondaryColor:"#202329",accentColor:"#3663D8",fontColor:"#d6d6d6"},white:{mainColor:"#FFFFFF",secondaryColor:"#F0F0F0",accentColor:"#007ACC",fontColor:"#000000"},black:{mainColor:"#050505",secondaryColor:"#202329",accentColor:"#0a7ff5",fontColor:"#ffffff",selectionColor:"rgba(10, 127, 245, 0.1)"},contrastGreen:{mainColor:"#000000",secondaryColor:"#1a1a1a",accentColor:"#FFD700",fontColor:"#00FF00"},blue:{mainColor:"#070F2B",secondaryColor:"#1B1A55",accentColor:"#535C91",fontColor:"#eeeeee"},retro:{mainColor:"#1D2B53",secondaryColor:"#333A73",accentColor:"#387ADF",fontColor:"#cdcdcd"},vintage:{mainColor:"#222831",secondaryColor:"#31363F",accentColor:"#76ABAE",fontColor:"#eeeeee"},lightblue:{mainColor:"#A0E9FF",secondaryColor:"#89CFF3",accentColor:"#00A9FF",fontColor:"#000000"},synthwave:{mainColor:"#5D0E41",secondaryColor:"#A0153E",accentColor:"#FF204E",fontColor:"#dedede"},brown:{mainColor:"#481E14",secondaryColor:"#9B3922",accentColor:"#B35C1E",fontColor:"#eeeeee"}},n={gameCard:"./elements/gameCard.elem",panel:"./elements/side-panel.elem",status:"./elements/status.elem",games:"./elements/games.elem",note:"./elements/note.elem",statusV2:"./elements/statusV2.elem"};const a={1:"Compilation",2:"Strategy",3:"Casino",4:"Music",5:"Action",6:"Platformer",7:"Puzzle",8:"Quiz",9:"Shooter",10:"Vehicle Simulation",11:"Construction and Management Simulation",12:"Fighting",13:"Sports",14:"Role-Playing",15:"Racing",16:"Beat 'em Up",17:"Adventure",18:"Education",19:"Life Simulation",20:"Board Game",21:"Stealth",22:"Pinball",23:"Flight Simulator",24:"Visual Novel",25:"Horror",26:"Sandbox",27:"Party",28:"MMO"};function o(e,t=!1){if(!isFinite(e))return"";const s=e<0;e=Math.abs(e);let i=Math.floor(e/3600),n=Math.floor(e%3600/60),a=e%60;i=i.toString().padStart(2,"0"),n=n.toString().padStart(2,"0"),a=a.toString().padStart(2,"0");const o=`${s?"-":""}${i>0?i+":":""}${n}:${a}`;return t?0==i?o:`${s?"-":""}${i}<i class="time__blinked-dots">:</i>${n}`:o}function r(e,t){const s={day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",hour12:!1,...t};!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");const i=new Date(e);if(isNaN(i.getTime()))return"";return i.toLocaleDateString("uk-UA",s)}function c(e){return new Date(e).toLocaleDateString()}const l={11:"rank x",10:"rank sss",9:"rank ss",8:"rank s",7:"rank a",6:"rank b",5:"rank c",4:"rank d"},h=(Object.fromEntries(Object.entries(l).map((([e,t])=>[e,`mastery: ${t}`]))),{1:"Mega Drive",2:"Nintendo 64",3:"SNES",4:"Game Boy",5:"GBA",6:"GBC",7:"NES",8:"PC Engine",9:"Sega CD",10:"32X",11:"Master System",12:"PlayStation",13:"Atari Lynx",14:"Neo Geo Pocket",15:"Game Gear",16:"Game Cube",17:"Atari Jaguar",18:"Nintendo DS",21:"PS2",23:"Magnavox Odyssey 2",24:"Pokemon Mini",25:"Atari 2600",27:"Arcade",28:"Virtual Boy",29:"MSX",33:"SG-1000",37:"Amstrad CPC",38:"Apple II",39:"Saturn",40:"Dreamcast",41:"PSP",43:"3DO",44:"ColecoVision",45:"Intellivision",46:"Vectrex",47:"PC-8000/8800",49:"PC-FX",51:"Atari 7800",53:"WonderSwan",56:"Neo Geo CD",57:"Fairchild Channel F",63:"Watara Supervision",69:"Mega Duck",71:"Arduboy",72:"WASM-4",73:"Arcadia 2001",74:"Interton VC 4000",75:"Elektor TV Games Computer",76:"PC Engine CD/TurboGrafx-CD",77:"Atari Jaguar CD",78:"Nintendo DSi",80:"Uzebox",101:"Events",102:"Standalone"}),d={1:{Name:"Genesis/Mega Drive",IconURL:"https://static.retroachievements.org/assets/images/system/md.png"},2:{Name:"Nintendo 64",IconURL:"https://static.retroachievements.org/assets/images/system/n64.png"},3:{Name:"SNES/Super Famicom",IconURL:"https://static.retroachievements.org/assets/images/system/snes.png"},4:{Name:"Game Boy",IconURL:"https://static.retroachievements.org/assets/images/system/gb.png"},5:{Name:"Game Boy Advance",IconURL:"https://static.retroachievements.org/assets/images/system/gba.png"},6:{Name:"Game Boy Color",IconURL:"https://static.retroachievements.org/assets/images/system/gbc.png"},7:{Name:"NES/Famicom",IconURL:"https://static.retroachievements.org/assets/images/system/nes.png"},8:{Name:"PC Engine/TurboGrafx-16",IconURL:"https://static.retroachievements.org/assets/images/system/pce.png"},9:{Name:"Sega CD",IconURL:"https://static.retroachievements.org/assets/images/system/scd.png"},10:{Name:"32X",IconURL:"https://static.retroachievements.org/assets/images/system/32x.png"},11:{Name:"Master System",IconURL:"https://static.retroachievements.org/assets/images/system/sms.png"},12:{Name:"PlayStation",IconURL:"https://static.retroachievements.org/assets/images/system/ps1.png"},13:{Name:"Atari Lynx",IconURL:"https://static.retroachievements.org/assets/images/system/lynx.png"},14:{Name:"Neo Geo Pocket",IconURL:"https://static.retroachievements.org/assets/images/system/ngp.png"},15:{Name:"Game Gear",IconURL:"https://static.retroachievements.org/assets/images/system/gg.png"},16:{Name:"GameCube",IconURL:"https://static.retroachievements.org/assets/images/system/gc.png"},17:{Name:"Atari Jaguar",IconURL:"https://static.retroachievements.org/assets/images/system/jag.png"},18:{Name:"Nintendo DS",IconURL:"https://static.retroachievements.org/assets/images/system/ds.png"},19:{Name:"Wii",IconURL:"https://static.retroachievements.org/assets/images/system/wii.png"},20:{Name:"Wii U",IconURL:"https://static.retroachievements.org/assets/images/system/wiiu.png"},21:{Name:"PlayStation 2",IconURL:"https://static.retroachievements.org/assets/images/system/ps2.png"},22:{Name:"Xbox",IconURL:"https://static.retroachievements.org/assets/images/system/xbox.png"},23:{Name:"Magnavox Odyssey 2",IconURL:"https://static.retroachievements.org/assets/images/system/mo2.png"},24:{Name:"Pokemon Mini",IconURL:"https://static.retroachievements.org/assets/images/system/mini.png"},25:{Name:"Atari 2600",IconURL:"https://static.retroachievements.org/assets/images/system/2600.png"},26:{Name:"DOS",IconURL:"https://static.retroachievements.org/assets/images/system/dos.png"},27:{Name:"Arcade",IconURL:"https://static.retroachievements.org/assets/images/system/arc.png"},28:{Name:"Virtual Boy",IconURL:"https://static.retroachievements.org/assets/images/system/vb.png"},29:{Name:"MSX",IconURL:"https://static.retroachievements.org/assets/images/system/msx.png"},30:{Name:"Commodore 64",IconURL:"https://static.retroachievements.org/assets/images/system/c64.png"},31:{Name:"ZX81",IconURL:"https://static.retroachievements.org/assets/images/system/zx81.png"},32:{Name:"Oric",IconURL:"https://static.retroachievements.org/assets/images/system/oric.png"},33:{Name:"SG-1000",IconURL:"https://static.retroachievements.org/assets/images/system/sg1k.png"},34:{Name:"VIC-20",IconURL:"https://static.retroachievements.org/assets/images/system/vic-20.png"},35:{Name:"Amiga",IconURL:"https://static.retroachievements.org/assets/images/system/amiga.png"},36:{Name:"Atari ST",IconURL:"https://static.retroachievements.org/assets/images/system/ast.png"},37:{Name:"Amstrad CPC",IconURL:"https://static.retroachievements.org/assets/images/system/cpc.png"},38:{Name:"Apple II",IconURL:"https://static.retroachievements.org/assets/images/system/a2.png"},39:{Name:"Saturn",IconURL:"https://static.retroachievements.org/assets/images/system/sat.png"},40:{Name:"Dreamcast",IconURL:"https://static.retroachievements.org/assets/images/system/dc.png"},41:{Name:"PlayStation Portable",IconURL:"https://static.retroachievements.org/assets/images/system/psp.png"},42:{Name:"Philips CD-i",IconURL:"https://static.retroachievements.org/assets/images/system/cd-i.png"},43:{Name:"3DO Interactive Multiplayer",IconURL:"https://static.retroachievements.org/assets/images/system/3do.png"},44:{Name:"ColecoVision",IconURL:"https://static.retroachievements.org/assets/images/system/cv.png"},45:{Name:"Intellivision",IconURL:"https://static.retroachievements.org/assets/images/system/intv.png"},46:{Name:"Vectrex",IconURL:"https://static.retroachievements.org/assets/images/system/vect.png"},47:{Name:"PC-8000/8800",IconURL:"https://static.retroachievements.org/assets/images/system/8088.png"},48:{Name:"PC-9800",IconURL:"https://static.retroachievements.org/assets/images/system/9800.png"},49:{Name:"PC-FX",IconURL:"https://static.retroachievements.org/assets/images/system/pc-fx.png"},50:{Name:"Atari 5200",IconURL:"https://static.retroachievements.org/assets/images/system/5200.png"},51:{Name:"Atari 7800",IconURL:"https://static.retroachievements.org/assets/images/system/7800.png"},52:{Name:"Sharp X68000",IconURL:"https://static.retroachievements.org/assets/images/system/x68k.png"},53:{Name:"WonderSwan",IconURL:"https://static.retroachievements.org/assets/images/system/ws.png"},54:{Name:"Cassette Vision",IconURL:"https://static.retroachievements.org/assets/images/system/ecv.png"},55:{Name:"Super Cassette Vision",IconURL:"https://static.retroachievements.org/assets/images/system/escv.png"},56:{Name:"Neo Geo CD",IconURL:"https://static.retroachievements.org/assets/images/system/ngcd.png"},57:{Name:"Fairchild Channel F",IconURL:"https://static.retroachievements.org/assets/images/system/chf.png"},58:{Name:"FM Towns",IconURL:"https://static.retroachievements.org/assets/images/system/fm-towns.png"},59:{Name:"ZX Spectrum",IconURL:"https://static.retroachievements.org/assets/images/system/zxs.png"},60:{Name:"Game & Watch",IconURL:"https://static.retroachievements.org/assets/images/system/g&w.png"},61:{Name:"Nokia N-Gage",IconURL:"https://static.retroachievements.org/assets/images/system/n-gage.png"},62:{Name:"Nintendo 3DS",IconURL:"https://static.retroachievements.org/assets/images/system/3ds.png"},63:{Name:"Watara Supervision",IconURL:"https://static.retroachievements.org/assets/images/system/wsv.png"},64:{Name:"Sharp X1",IconURL:"https://static.retroachievements.org/assets/images/system/x1.png"},65:{Name:"TIC-80",IconURL:"https://static.retroachievements.org/assets/images/system/tic-80.png"},66:{Name:"Thomson TO8",IconURL:"https://static.retroachievements.org/assets/images/system/to8.png"},67:{Name:"PC-6000",IconURL:"https://static.retroachievements.org/assets/images/system/pc-6000.png"},68:{Name:"Sega Pico",IconURL:"https://static.retroachievements.org/assets/images/system/pico.png"},69:{Name:"Mega Duck",IconURL:"https://static.retroachievements.org/assets/images/system/duck.png"},70:{Name:"Zeebo",IconURL:"https://static.retroachievements.org/assets/images/system/zeebo.png"},71:{Name:"Arduboy",IconURL:"https://static.retroachievements.org/assets/images/system/ard.png"},72:{Name:"WASM-4",IconURL:"https://static.retroachievements.org/assets/images/system/wasm4.png"},73:{Name:"Arcadia 2001",IconURL:"https://static.retroachievements.org/assets/images/system/a2001.png"},74:{Name:"Interton VC 4000",IconURL:"https://static.retroachievements.org/assets/images/system/vc4000.png"},75:{Name:"Elektor TV Games Computer",IconURL:"https://static.retroachievements.org/assets/images/system/elek.png"},76:{Name:"PC Engine CD/TurboGrafx-CD",IconURL:"https://static.retroachievements.org/assets/images/system/pccd.png"},77:{Name:"Atari Jaguar CD",IconURL:"https://static.retroachievements.org/assets/images/system/jcd.png"},78:{Name:"Nintendo DSi",IconURL:"https://static.retroachievements.org/assets/images/system/dsi.png"},79:{Name:"TI-83",IconURL:"https://static.retroachievements.org/assets/images/system/ti-83.png"},80:{Name:"Uzebox",IconURL:"https://static.retroachievements.org/assets/images/system/uze.png"},81:{Name:"Famicom Disk System",IconURL:"https://static.retroachievements.org/assets/images/system/fds.png"},100:{Name:"Hubs",IconURL:"https://static.retroachievements.org/assets/images/system/hubs.png"},101:{Name:"Events",IconURL:"https://static.retroachievements.org/assets/images/system/events.png"},102:{Name:"Standalone",IconURL:"https://static.retroachievements.org/assets/images/system/exe.png"}},g=e=>`<p class="signed-icon" data-title="${ui.lang.cheevosCount}">${y.cheevos}${e}</p>`,m=e=>`<p class="signed-icon" data-title="${ui.lang.points}">${y.points}${e}</p>`,u=e=>`<p class="signed-icon" data-title="${ui.lang.retropoints}">${y.retropoints}${e}</p>`,p=(e,t)=>`<p class="signed-icon" data-title="${ui.lang.unlockedBy}">${y.rarity(e)}${t}</p>`,_=e=>`<p class="signed-icon" data-title="${ui.lang.trueRatio}">${y.retroRatio(e)}${e}</p>`,E=e=>`<p class="signed-icon" data-title="${ui.lang.date}">${y.date}${e}</p>`,v=e=>e?`<p class="signed-icon" data-title="${ui.lang.time}">${y.time}${e}</p>`:"",S=e=>`<p class="signed-icon" data-title="${ui.lang.gameRating}">${y.rating}${e}</p>`,A=e=>`<p  class="signed-icon" data-title="${e}">\n    ${y.platform(e)}${d[e].Name}</p>`,y={flag:'<i class="description-icon map-icon"></i>',time:"<i>⏰</i>",level:"<i>🚩</i>",points:"<i>💰</i>",retropoints:"<i>⚡️</i>",cheevos:"<i>⭐</i>",trueratio:"<i>💎</i>",players:"<i>👥</i>",date:"<i>📅</i>",rating:"<i>🔥</i>",rarity:e=>"<i>📈</i>",retroRatio:e=>"<i>💎</i>",cheevoType:e=>`<i class=" description-icon ${e??"none"}" data-title="[${e??"none"}]"></i> `,chat:'<i class="description-icon link_icon chat-icon"></i>',award:e=>e?`<i class="description-icon award-type__icon ${e}_icon"></i>`:"",favourite:'<i class="description-icon favourite_icon"></i>',apply:'<i class="description-icon link_icon apply-icon"></i>',search:'<i class="description-icon link_icon search-icon google_link"></i>',link:'<i class="description-icon link_icon ra-link_icon"></i>',platform:e=>`<img class="image-icon" src="${d[e].IconURL}">`};function f(e,t="gameTitle"){return e?.reduce(((e,s)=>{if(!s)return e;if(""==(s=s.toString()).trim())return e;const i=T[t](s);return e.push(i),e}),[]).join(" ")}const T={default:e=>`<i class="badge">${e.trim()}</i>`,infoBadge:e=>`<i class="badge badge_transparent">${e.trim()}</i>`,black:e=>`<i class="badge badge_black">${e.trim()}</i>`,gold:e=>`<i class="badge badge_gold">${e.trim()}</i>`,gameTitle:e=>`<i class="badge game-title_${e.toLowerCase().replace(/[\s\'\"\`]/g,"-")}">${e.trim()}</i>`,gameGenre:e=>`<i class="badge game-title_genre">${e.trim()}</i>`,cheevoLevel:(e,t)=>`<div \n        class="${t?"target-level-badge":""} badge badge_gold" \n        data-title="${ui.lang.level}">\n            ${y.flag}${e}\n        </div>`,difficultBadge:(e,t="")=>{if(""==e)return"";return`\n            <p class="badge difficult-badge__${e}">\n                ${t} ${l[e]}\n            </p>\n        `},hltbBadge:(e,t="")=>T.gold(`HLTB: ${e}`),buttonGenreBadge:(e,t)=>`\n        <p \n        class="target-genre-badge badge badge-bold badge_gold badge-button" \n        data-title="--[ ${e?.toUpperCase()} ]--"\n        data-genre="${e}" \n        onclick="${t}">\n            ${e} \n        </p>`},I=e=>T.gold(e);const b=({menuItems:e,sectionCode:t="",isSubmenu:s=!1})=>{const i=document.createElement("ul");return i.className=s?"context-menu_item-menu context-submenu":"achievement_context-menu context-menu hidden",e.forEach((e=>{const s=e.hasOwnProperty("elements");let n=document.createElement("li");n.className=`context-menu_item ${s&&"expandable"}`,s?(n.innerHTML+=e.label,n.appendChild(b({menuItems:e.elements,isSubmenu:!0,sectionCode:t}))):n.innerHTML+=R[e.type](e),i.appendChild(n)})),i.addEventListener("contextmenu",(e=>e.stopPropagation())),i.addEventListener("mousedown",(e=>e.stopPropagation())),pt.AUTOCLOSE_CONTEXTMENU||i.addEventListener("click",(e=>e.stopPropagation())),i.querySelectorAll(".context-menu_statebox")?.forEach((e=>e.addEventListener("click",O))),i},R={checkbox:({type:e,name:t,id:s,checked:i,event:n,label:a,sectionCode:o})=>`\n        <input \n            type="${e}" \n            name="${t}${o}" \n            id="${s}${o}" \n            ${n??""}\n            ${i?"checked":""} \n            ></input>\n        <label class="context-menu_${e}" for="${s}${o}">${a}</label>`,radio:e=>R.checkbox(e),statebox:({state:e,type:t,value:s,id:i,event:n,label:a,sectionCode:o})=>`\n        <div \n            class="context-menu_statebox" \n            data-state="${e??0}" \n            data-value="${s}" \n            data-event="${n}"\n            id="${i+o}"\n            <p class="statebox__label">${a}</p>\n        </div>\n    `,"input-number":({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="number" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,"text-input":({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="text" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,range:({prefix:e,event:t,minRange:s,maxRange:i,value:n,id:a,sectionCode:o})=>`\n        ${e}\n        <input \n            class="slider" \n            id="${a}-${o}"\n            type="range" \n            ${t??""} \n            min="${s}" \n            max="${i}" \n            value="${n}">`,button:({type:e,id:t,sectionCode:s,event:i,label:n})=>`\n            <button \n                class="context-menu_${e}" \n                id="${t}-${s}" \n                ${i??""} \n                type="button"\n            >\n                ${n??"NOLABEL"}\n            </button>`};function O(e){const t=e.target,s=+t.dataset.state,i=1===s?-1:s+1,n=t.dataset.value;t.dataset.state=i,t.dataset.event&&new Function("event","state","filterName",t.dataset.event)(e,i,n)}const C={award:"award",cheevo:"cheevo",game:"game",stats:"stats"},w=e=>new Promise((t=>setTimeout(t,e))),L=e=>`https://media.retroachievements.org/Badge/${e}.png`,D=e=>`https://media.retroachievements.org${e}`,N=e=>`https://retroachievements.org/game/${e}`,P=e=>`https://retroachievements.org/achievement/${e}`,H=Object.freeze({MASTERED:"mastered",COMPLETED:"completed",BEATEN:"beaten",BEATEN_SOFTCORE:"beaten-softcore"});let $=[];function k(e){e.forEach((e=>{$.push(e),1===$.length&&x()}))}async function x(){const{FS_NEW_CHEEVO:e,FS_NEW_AWARD:t,FS_DURATION_SEC:s}=pt.settings,{app:i}=pt,n=()=>T.default(pt.lang.casual),a=(e,t)=>{const{ImageIcon:s,FixedTitle:a}=e,{MASTERED:o,COMPLETED:r,BEATEN:c,BEATEN_SOFTCORE:l}=H,h={[o]:pt.lang.masteryUnlocked,[r]:`${pt.lang.masteryUnlocked} ${n()}`,[c]:pt.lang.gameBeaten,[l]:`${pt.lang.gameBeaten} ${n()}`};i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const d=document.createElement("div");return d.className="fs-alert__container",d.innerHTML=`\n            <div class="fs-alert__main-content">\n                <div class="fs-alert__border fs-alert__border-top"></div>\n                <div class="fs-alert__header">${h[t]}</div>\n                <div class="fs-alert__sub-border "></div>\n                <div class="fs-alert__image-container">\n                    <div class="fs-alert__light"></div>\n                    <img src="${D(s)}" alt="" class="fs-alert__image">\n                    <div class="fs-alert__blick"></div>\n                </div>\n                <div class="fs-alert__description">${a}</div>\n                <div class="fs-alert__border fs-alert__border-botton"></div>\n            </div>\n        `,d},o=({isHardcoreEarned:e,Title:t,BadgeName:s,Points:a,TrueRatio:o,rateEarned:r,rateEarnedHardcore:c,difficulty:l,Description:h})=>{i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const d=document.createElement("div");d.className="fs-alert__container";const g=e?pt.lang.achievementUnlocked:`${pt.lang.achievementUnlocked} ${n()}`;return d.innerHTML=`\n            <div class="fs-alert__main-content">\n                <div class="fs-alert__border fs-alert__border-top"></div>\n                <div class="fs-alert__header">${g}</div>\n                <div class="fs-alert__sub-border"></div>\n                <div class="fs-alert__image-container">\n                    <div class="fs-alert__light"></div>\n                    <img src="${L(s)}" alt="" class="fs-alert__image">\n                    <div class="fs-alert__blick"></div>\n                </div>\n                <div class="fs-alert__title">\n                    ${t}\n                </div>\n                <div class="fs-alert__border fs-alert__border-botton"></div>\n                <div class="fs-alert__description">\n                    ${h}\n                </div>\n            </div>\n        `,d};for(;$.length>0;){if(alert=$[0],alert.type===C.cheevo&&!e||alert.type===C.award&&!t){$.shift();continue}let n;switch(alert.type){case C.award:n=a(alert.value,alert.award);break;case C.cheevo:n=o(alert.value)}i.appendChild(n),await w(1e3*s).then((async()=>{n?.classList.add("hide-fs-alert"),await w(1e3)})).then((()=>{n?.remove(),$.shift()}))}}const M=16766720,G=12632256;async function W({message:e="",type:t,value:s,award:i,id:n}){const a=ut.DISCORD_WEBHOOK;if(!a)return;let r={};const c=Et.GAME_DATA;switch(t){case C.game:r=(e=>({header:`${ut.targetUser} has launched the game: \n${e.Title}`,description:`          \n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e.NumAwardedToUserHardcore} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints:  ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:65280,url:`https://retroachievements.org/game/${e.ID}`,image:`https://media.retroachievements.org${e.ImageIcon}`}))(c);break;case C.award:await w(2e3),r=((e,t)=>({header:`${ut.targetUser} has ${t.toUpperCase()} the game: \n${e.Title}`,description:`\n          Earned in: ${o(e.TimePlayed)}\n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e?.earnedStats?.hard.count} / ${e?.earnedStats?.soft.count} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints: ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:"beaten"==t||"mastered"==t?M:G,url:`https://retroachievements.org/game/${e.ID}`,image:`https://media.retroachievements.org${e.ImageIcon}`}))(c,i);break;case C.cheevo:r=((e,t)=>{const s=ut.aotw?.ID==t.ID,i=`${ut.targetUser} unlocked ${s?"'Achievement of the Week'":"cheevo"}${t.isHardcoreEarned?"":" (casual mode)"}: \n${t.Title}`,a=`\n        Game: [${e.Title}](https://retroachievements.org/game/${e.ID})\n        Unlocked in: ${o(e.TimePlayed)}\n        Description: ${t.Description}\n        Points: ${t.Points}\n        Retropoints:  ${t.TrueRatio}\n        `;return{header:i,description:a,color:t.isHardcoreEarned?M:G,url:`https://retroachievements.org/achievement/${n}`,image:t.prevSrc}})(c,s)}const l={username:"RETROCHEEVOS",avatar_url:"https://taras240.github.io/retro-api/assets/img/overlay_sets/mario_q/q.png",embeds:[{thumbnail:{url:r.image},title:r.header,url:r.url,color:r.color,description:r.description.replace(/\n[ \t]*/g,"\n"),footer:{text:"retrocheevos.vercel.app"},timestamp:(new Date).toISOString()}]};fetch(a,{body:JSON.stringify(l),headers:{"Content-Type":"application/json"},method:"POST"}).then((function(e){})).catch((function(e){console.log(e)}))}function U(e,t){const s=new Blob([e],{type:"text/csv;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.csv`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}const B={completion:async function(){const e=await _t.SAVED_COMPLETION_PROGRESS,t=e?.Results.map((e=>({Title:e.Title,ID:e.GameID,Platform:h[e.ConsoleID],Award:e.HighestAwardKind,AwardDate:e.HighestAwardDate&&new Date(e.HighestAwardDate).toLocaleString(),LastEarnedDate:e.MostRecentAwardedDate&&new Date(e.MostRecentAwardedDate).toLocaleString(),TotalAchievements:e.NumAchievements,EarnedAchievements:e.NumAwardedHardcore,EarnedAchievementsSoftcore:e.NumAwarded,PlayedTime:o(ut.gamesDB[e.GameID]?.TimePlayed),Notes:ut.gamesDB[e.GameID]?.notes?.replace(/;|\n/g," ")})));if(!t||0==t.length)return;const s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.Platform,e.Award,e.AwardDate,e.LastEarnedDate,e.TotalAchievements,e.EarnedAchievements,e.EarnedAchievementsSoftcore,e.PlayedTime,e.Notes]));U([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"completion")},wantToPlay:async function(){const e=await _t.getWantToPlayGamesList({count:500}),t=e?.map((e=>({Title:e.Title,ID:e.ID,ConsoleName:h[e.ConsoleID],AchievementsPublished:e.AchievementsPublished}))),s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.ConsoleName,e.AchievementsPublished]));U([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"wantToPlay")}};async function F(){const e=localStorage.getItem("retroApiConfig"),t=JSON.parse(e);t.apiWorker&&delete t.apiWorker.completionProgress,t.version=ui.VERSION,function(e,t){const s=new Blob([JSON.stringify(e)],{type:"text/json;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}(t,`RCSettings_v${t.version}`)}function V(e,t,s,i){e.preventDefault();const n=e.clientX-t,a=e.clientY-s,{newXPos:o,newYPos:r}=function({x:e,y:t,stickySection:s}){const{clientHeight:i,clientWidth:n}=s;let a=t,o=e;if(!1===ut.ui.isWindowsSticky)return{newXPos:o,newYPos:a};const r=pt.STICK_TOLERANCE,c=pt.STICK_MARGIN,l=[{check:e=>Math.abs(t+i-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(t-e.offsetTop)<r,action:e=>a=e.offsetTop},{check:e=>Math.abs(t-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight+c},{check:e=>Math.abs(t+i-e.offsetTop)<r,action:e=>a=e.offsetTop-i-c},{check:t=>Math.abs(e+n-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(e-t.offsetLeft)<r,action:e=>o=e.offsetLeft},{check:t=>Math.abs(e+n-t.offsetLeft)<r,action:e=>o=e.offsetLeft-n-c},{check:t=>Math.abs(e-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth+c}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&l.forEach((({check:t,action:s})=>t(e)&&s(e)))})),o=Math.abs(window.innerWidth-o-n)<r?window.innerWidth-n:o,o=Math.abs(o)<r?0:o,a=Math.abs(window.innerHeight-a-i)<r?window.innerHeight-i:a,a=Math.abs(a)<r?0:a,{newXPos:o,newYPos:a}}({x:n,y:a,stickySection:i});i.style.left=o+"px",i.style.top=r+"px"}function q(e,t){const s=t=>{V(t,l,h,e)},i=e=>{e.preventDefault(),n(),a()},n=()=>{e.classList.remove("dragable"),o.removeEventListener("mousemove",s),o.removeEventListener("mouseup",i)},a=()=>{ut.setNewPosition({id:e.id,xPos:e.style.left,yPos:e.style.top})},{app:o}=pt,{left:r,top:c}=e.getBoundingClientRect(),l=t.clientX-r,h=t.clientY-c;e.classList.add("dragable"),o.addEventListener("mousemove",s),o.addEventListener("mouseup",i)}function j({event:e,section:t,callback:s}){const{app:i}=pt;let n={startWidth:t.clientWidth,startHeight:t.clientHeight,startX:e.clientX,startY:e.clientY};const a=e=>{t.classList.add("resized"),function(e,t,s){const{startWidth:i,startHeight:n,startX:a,startY:o}=t,r=e.clientX-a,c=e.clientY-o;let l=i+r,h=n+c,{newHeight:d,newWidth:g}=function({width:e,height:t,stickySection:s}){const{offsetTop:i,offsetLeft:n}=s;let a=e,o=t;if(!1===ut.ui.isWindowsSticky)return{newWidth:a,newHeight:o};const{STICK_TOLERANCE:r,STICK_MARGIN:c}=pt,l=[{check:e=>Math.abs(i+t-e.offsetTop-e.clientHeight)<r,action:e=>o=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(i+t-e.offsetTop)<r,action:e=>o=e.offsetTop-i-c},{check:t=>Math.abs(n+e-t.offsetLeft-t.clientWidth)<r,action:e=>a=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(n+e-t.offsetLeft)<r,action:e=>a=e.offsetLeft-n-c}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&l.forEach((({check:t,action:s})=>t(e)&&s(e)))})),a=Math.abs(window.innerWidth-n-a)<r?window.innerWidth-n:a,o=Math.abs(window.innerHeight-i-o)<r?window.innerHeight-i:o,{newWidth:a,newHeight:o}}({width:l,height:h,stickySection:s});s.style.width=`${g}px`,s.style.height=`${d}px`}(e,n,t)},o=e=>{s&&s(),t.classList.remove("resized"),r(),c()},r=()=>{i.removeEventListener("mousemove",a),i.removeEventListener("mouseup",o)},c=()=>{ut.setNewPosition({id:t.id,width:t.clientWidth,height:t.clientHeight})};i.addEventListener("mousemove",a),i.addEventListener("mouseup",o)}class z{widgetIcon={imageSource:"../assets/img/gamepad.svg",iconID:"widget-id",iconClass:"gamepad-icon",onChangeEvent:""};get VISIBLE(){return!this.section.classList.contains("hidden")&&!!ut.ui[this.section?.id]}set VISIBLE(e){ct.switchSectionVisibility({section:this.section,visible:e}),this.widgetIcon.element&&(this.widgetIcon.element.checked=e)}constructor(){}addEvents(){this.section.addEventListener("mousedown",(e=>{0===e.button&&(e.target.matches(".resizer")?(this.section.classList.add("resized"),j({event:e,section:this.section})):e.target.matches(".close-icon")?this.close():e.target.matches(".tweak-button")?this.contextMenuItems&&pt.settings.openSettings(this.contextMenuItems):e.target.closest(".header-container")&&q(this.section,e))})),Array.isArray(this.contextMenuItems)&&this.section.addEventListener("contextmenu",(e=>{pt.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:this.CLONE_NUMBER??""})}))}addWidgetIcon(){const e=!1===ut.ui?.[this.section?.id]?.hidden??!this.VISIBLE,{iconID:t,onChangeEvent:s,description:i,iconClass:n,badgeLabel:a}=this.widgetIcon,o=document.querySelector(".buttons-block__shortcuts"),r=document.createElement("div");r.classList.add("setting-radio-group"),r.innerHTML=`\n            <input type="checkbox" name="${t}" id="${t}" onchange="${s}" ${e?"checked":""}></input>\n            <label class="side-panel_input" data-title="${i}" for="${t}">\n                    <i class="side-panel__icon ${n}"></i>\n            </label>\n            <div class="side-panel__badge">\n                ${a?T.black(a):""}\n            </div>`,o.appendChild(r),this.widgetIcon.element=document.getElementById(t)}generateWidgetElement({classes:e,id:t,title:s,headerElementsHtml:i,contentClasses:n}){const a=document.createElement("section");return a.classList.add(...e),a.id=t,a.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                ${i??""}\n                <button class="header-icon header-button close-icon"></button>\n            </div>\n            <div class="${n?n.join(" "):"widget-content__container"}"></div>\n            <div class="resizer"></div>`,a}open(){}close(){this.VISIBLE=!1}}const Y=Object.freeze({PROGRESSION:"progression",MISSABLE:"missable",WIN:"win_condition"});const K={earned:({DateEarnedHardcore:e})=>e,earnedSoftcore:({DateEarned:e,DateEarnedHardcore:t})=>!t&&e,notEarned:({DateEarnedHardcore:e,DateEarned:t})=>!e&&!t,missable:({type:e})=>e===Y.MISSABLE,progression:({type:e})=>e===Y.PROGRESSION||e===Y.WIN,typeless:e=>!K.progression(e)&&!K.missable(e),all:()=>!0,genre:({genres:e,genre:t})=>e?.includes(t),level:({level:e},{targetLevel:t})=>parseInt(e)===parseInt(t),leveless:({level:e})=>!e},X="all",Z="earned",Q="earnedSoftcore",J="missable",ee="progression",te="genre";async function se({container:e,itemClassName:t,sortMethod:s,reverse:i,animationDuration:n}){const a=[...e.querySelectorAll(t)].sort(((e,t)=>s(e.dataset,t.dataset)*i));n?await async function(e,t,s=500){const i=[...e.children],n=new Map;i.forEach((e=>{n.set(e,e.getBoundingClientRect())})),t.forEach((t=>e.appendChild(t))),t.forEach((async(e,t)=>{e.style.zIndex=1e3-t,setTimeout((()=>e.style.removeProperty("z-index")),s+100);const i=n.get(e),a=e.getBoundingClientRect(),o=i.left-a.left,r=i.top-a.top;e.style.transform=`translate(${o}px, ${r}px)`,e.style.transition="transform 0s",e.offsetHeight,e.style.transition=`transform ${s}ms`,e.style.transform=""})),await w(s+100)}(e,a,n):(e.innerHTML="",a.forEach((t=>{e.appendChild(t)})))}function ie(e){return new Date(e)}const ne={latestHardcore:(e,t)=>{if(e.DateEarnedHardcore||t.DateEarnedHardcore){const s=e.DateEarnedHardcore?ie(e.DateEarnedHardcore):-1/0;return(t.DateEarnedHardcore?ie(t.DateEarnedHardcore):-1/0)-s}return ne.latest(e,t)},latest:(e,t)=>{const s=e.DateEarnedHardcore?ie(e.DateEarnedHardcore):e.DateEarned?ie(e.DateEarned):-1/0;return(t.DateEarnedHardcore?ie(t.DateEarnedHardcore):t.DateEarned?ie(t.DateEarned):-1/0)-s},raLatest:(e,t)=>(e.DateEarnedHardcore?ie(e.DateEarnedHardcore):e.DateEarned?ie(e.DateEarned):1/0)-(t.DateEarnedHardcore?ie(t.DateEarnedHardcore):t.DateEarned?ie(t.DateEarned):1/0),date:(e,t)=>(e.Date?ie(e.Date):-1/0)-(t.Date?ie(t.Date):-1/0),earnedCount:(e,t)=>t.NumAwardedHardcore-e.NumAwardedHardcore,points:(e,t)=>parseInt(e.Points)-parseInt(t.Points),truepoints:(e,t)=>e.TrueRatio-t.TrueRatio,trueRatio:(e,t)=>e.TrueRatio/e.Points-t.TrueRatio/t.Points,default:(e,t)=>0!=e.DisplayOrder?e.DisplayOrder-t.DisplayOrder:e.achivId-t.achivId,id:(e,t)=>e.ID-t.ID,disable:(e,t)=>0,rating:(e,t)=>t.Rating-e.Rating,achievementsCount:(e,t)=>parseInt(e.NumAchievements)-parseInt(t.NumAchievements),title:(e,t)=>{let s=e.FixedTitle.toUpperCase(),i=t.FixedTitle.toUpperCase();return s<i?-1:s>i?1:0},award:(e,t)=>{const s={mastered:5,completed:4,"beaten-hardcore":3,"beaten-softcore":2,started:1},i=s[t.Award]??0,n=s[e.Award]??0,a=new Date(t.MostRecentAwardedDate),o=new Date(e.MostRecentAwardedDate);return i-n!=0?i-n:a-o},level:(e,t)=>e.level||t.level?e.level?t.level?e.level-t.level:-1:1:ne.default(e,t),difficulty:(e,t)=>{let s=e.difficulty-t.difficulty;return 0==s&&(s=t.NumAwardedHardcore-e.NumAwardedHardcore),s}},ae="latest",oe="raLatest",re="trueRatio",ce="earnedCount",le="points",he="truepoints",de="disable",ge="default",me="date",ue="level",pe="difficulty";function _e({container:e,itemClassName:t,filters:s,isHide:i}){const n=e.querySelectorAll(t),a=s&&Object.values(s)?.filter((e=>1==e?.state)),o=s&&Object.values(s)?.filter((e=>-1==e?.state));n.forEach((e=>e.classList.remove("hidden","removed")));a?.length>0&&n.forEach((e=>e.classList.add("hidden",i?"removed":"f"))),a?.forEach((e=>{n.forEach((t=>{K[e.filterName]({...t.dataset,...e})&&t.classList.remove("hidden","removed")}))})),o?.forEach((e=>{n.forEach((t=>{K[e.filterName](t.dataset)&&t.classList.add("hidden",i?"removed":"f")}))}))}const Ee={DISABLED:"disabled",UNLOCK_STATUS:"unlock_status",TYPE:"type",LEVEL:"level"};async function ve({container:e,element:t}){if(!e||!t)return;const s=e.getBoundingClientRect(),i=t.getBoundingClientRect(),n=i.top-s.top+e.scrollTop-e.clientHeight/2+t.offsetHeight/2,a=i.left-s.left+e.scrollLeft-e.clientWidth/2+t.offsetWidth/2;e.scrollTo({top:n,left:a,behavior:"smooth"}),await w(600)}class Se extends z{widgetIcon={description:"cheevos widget",iconClass:"achievements-icon"};filters={};get contextMenuItems(){return[{label:pt.lang.style,elements:[{type:"checkbox",name:"context-show-load-anim",id:"context-show-load-anim",label:pt.lang.showLoadAnimation,checked:this.SHOW_LOAD_ANIMATION,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_LOAD_ANIMATION = this.checked"`},{type:"checkbox",name:"context-show-mario",id:"context-show-mario",label:pt.lang.unlockAnimation,checked:this.SHOW_MARIO,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_MARIO = this.checked"`},{type:"checkbox",name:"context_autoscroll-achieves",id:"context_autoscroll-achieves",label:pt.lang.autoscroll,checked:this.AUTOSCROLL,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].AUTOSCROLL = this.checked;"`},{type:"checkbox",name:"context_stretch-achieves",id:"context_stretch-achieves",label:pt.lang.stretch,checked:this.ACHIV_STRETCH,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_STRETCH = this.checked;"`},{prefix:pt.lang.minSize,postfix:"px",type:"input-number",id:"context-menu_min-size",label:pt.lang.minSize,value:this.ACHIV_MIN_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MIN_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MIN_SIZE = this.value;`},{prefix:pt.lang.maxSize,postfix:"px",type:"input-number",id:"context-menu_max-size",label:pt.lang.maxSize,value:this.ACHIV_MAX_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MAX_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MAX_SIZE = this.value;`}]},{label:pt.lang.elements,elements:[{label:pt.lang.showHeader,type:"checkbox",name:"context_hide-achivs-header",id:"context_hide-achivs-header",checked:this.SHOW_HEADER,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_HEADER = this.checked;"`},{label:pt.lang.showBackground,type:"checkbox",name:"context_show-bg",id:"context_show-bg",checked:this.BG_VISIBILITY,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].BG_VISIBILITY = this.checked;"`}]},{label:pt.lang.overlaySet,elements:[{type:"checkbox",name:"context-hide-unearned",id:"context-hide-unearned",label:pt.lang.showOverlay,checked:this.SHOW_PREV_OVERLAY,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_PREV_OVERLAY = this.checked"`},...Object.keys(this.overlayTypes).reduce(((e,t)=>{const s={type:"radio",name:"context-achieves-overlay",id:`context-achieves-overlay-${t}`,label:`${this.overlayTypes[t].name}`,checked:this.OVERLAY_TYPE==t,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].OVERLAY_TYPE = '${t}'"`};return e.push(s),e}),[])]},{label:pt.lang.sort,elements:[{type:"radio",name:"context-sort",id:"context-sort_latest",label:pt.lang.latest,checked:this.SORT_NAME===ae,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'latest';"`},{type:"radio",name:"context-sort",id:"context-sort_ra-latest",label:pt.lang.latest+" v2",checked:this.SORT_NAME===oe,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${oe}';"`},{type:"radio",name:"context-sort",id:"context-sort_true-ratio",label:pt.lang.trueRatio,checked:this.SORT_NAME===re,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${re}';"`},{type:"radio",name:"context-sort",id:"context-sort_difficulty",label:pt.lang.difficulty,checked:this.SORT_NAME===pe,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${pe}';"`},{type:"radio",name:"context-sort",id:"context-sort_rarest",label:pt.lang.rarest,checked:this.SORT_NAME===ce,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${ce}';"`},{type:"radio",name:"context-sort",id:"context-sort_points",label:pt.lang.points,checked:this.SORT_NAME===le,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${le}';"`},{type:"radio",name:"context-sort",id:"context-sort_retropoints",label:pt.lang.retropoints,checked:this.SORT_NAME===he,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${he}';"`},{type:"radio",name:"context-sort",id:"context-sort_default",label:pt.lang.default,checked:this.SORT_NAME===ge,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${ge}';"`},{type:"radio",name:"context-sort",id:"context-sort_level",label:pt.lang.level,checked:this.SORT_NAME===ue,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${ue}';"`},{type:"radio",name:"context-sort",id:"context-sort_disable",label:pt.lang.disable,checked:this.SORT_NAME===de,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = '${de}';"`},{type:"checkbox",name:"context-reverse-sort",id:"context-reverse-sort",label:pt.lang.reverse,checked:-1==this.REVERSE_SORT,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].REVERSE_SORT = this.checked"`}]},{label:pt.lang.filter,elements:[{type:"statebox",name:"context-filter",id:"context_filter-earned",label:pt.lang.earned,value:`${Z}`,state:`${this.filters[Z]?.state??0}`,event:`ui.achievementsBlock[${this.CLONE_NUMBER}].setFilter({ event, state, filterName })`},{type:"statebox",name:"context-filter",id:"context_filter-earned-soft",label:pt.lang.earnedSoftcore,value:`${Q}`,state:`${this.filters[Q]?.state??0}`,event:`ui.achievementsBlock[${this.CLONE_NUMBER}].setFilter({ event, state, filterName })`},{type:"statebox",name:"context-filter",id:"context_filter-progression",label:pt.lang.progression,value:`${ee}`,state:`${this.filters[ee]?.state??0}`,event:`ui.achievementsBlock[${this.CLONE_NUMBER}].setFilter({ event, state, filterName })`},{type:"statebox",name:"context-filter",id:"context_filter-missable",label:pt.lang.missable,value:`${J}`,state:`${this.filters[J]?.state??0}`,event:`ui.achievementsBlock[${this.CLONE_NUMBER}].setFilter({ event, state, filterName })`},{type:"checkbox",name:"context-hide-filtered",id:"context-hide-filtered",label:pt.lang.hideFiltered,checked:this.HIDE_FILTERED,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].HIDE_FILTERED = this.checked;"`}]},{label:pt.lang.groupBy,elements:[{type:"checkbox",name:"context-grouping",id:"context-grouping",label:pt.lang.groupElements,checked:this.IS_GROUPING,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].IS_GROUPING = this.checked;"`},{type:"radio",name:"context-grouping-type",id:"context-group-by-unlock",label:pt.lang.unlockStatus,checked:this.GROUP_BY===Ee.UNLOCK_STATUS,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].GROUP_BY = '${Ee.UNLOCK_STATUS}';"`},{type:"radio",name:"context-grouping-type",id:"context-group-by-type",label:pt.lang.type,checked:this.GROUP_BY===Ee.TYPE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].GROUP_BY = '${Ee.TYPE}';"`},{type:"radio",name:"context-grouping-type",id:"context-group-by-level",label:pt.lang.level,checked:this.GROUP_BY===Ee.LEVEL,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].GROUP_BY = '${Ee.LEVEL}';"`},{type:"checkbox",name:"context-grouping-title",id:"context-grouping-title",label:pt.lang.showCheevosGroupTitle,checked:this.SHOW_GROUP_HEADER,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_GROUP_HEADER = this.checked;"`}]}]}get OVERLAY_TYPE(){return ut?.ui[this.SECTION_NAME]?.overlayType??"border"}set OVERLAY_TYPE(e){ut.ui[this.SECTION_NAME].overlayType=e,ut.writeConfiguration(),this.updateOverlay()}overlayTypes={border:{name:"Border",link:"../assets/img/border/overlay_sets/",closedLink:"../assets/img/overlay_sets/border/closed-1.png",earnedSoftcoreLink:"../assets/img/overlay_sets/border/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/border/earned.png"},digger:{name:"Digger"},mario_q:{name:"Mario '?'",link:"../assets/img/mario_q/overlay_sets/",closedLink:"../assets/img/overlay_sets/mario_q/closed.webp",earnedSoftcoreLink:"../assets/img/overlay_sets/mario_q/earned_soft.webp",earnedHardcoreLink:"../assets/img/overlay_sets/mario_q/earned.webp"},cd_box:{name:"C&D Box",link:"../assets/img/cd_box/",closedLink:"../assets/img/overlay_sets/cd_box/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/cd_box/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/cd_box/earned.png"},kirby:{name:"Kirby",link:"../assets/img/kirby/",closedLink:"../assets/img/overlay_sets/kirby/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/kirby/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/kirby/earned.png"},megaman:{name:"Megaman",link:"../assets/img/megaman/",closedLink:"../assets/img/overlay_sets/megaman/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/megaman/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/megaman/earned.png"},sonic:{name:"Sonic",link:"../assets/img/sonic/",closedLink:"../assets/img/overlay_sets/sonic/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/sonic/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/sonic/earned.png"}};set SORT_NAME(e){ut._cfg.ui[this.SECTION_NAME].sortAchievementsBy=e,ut.writeConfiguration(),this.applySorting()}get SORT_NAME(){return ut?.ui[this.SECTION_NAME]?.sortAchievementsBy||ge}get SORT_METHOD(){return ne[this.SORT_NAME]}set FILTER_NAME(e){ut.ui[this.SECTION_NAME].filterBy=e,ut.writeConfiguration(),this.applyFiltering()}get FILTER_NAME(){return ut?.ui[this.SECTION_NAME]?.filterBy||X}get FILTER_METHOD(){return K[this.FILTER_NAME]}get HIDE_FILTERED(){return ut?.ui[this.SECTION_NAME]?.hideFiltered??!1}set HIDE_FILTERED(e){ut.ui[this.SECTION_NAME].hideFiltered=e,ut.writeConfiguration(),this.applyFiltering()}get REVERSE_SORT(){return ut?.ui[this.SECTION_NAME]?.reverseSort||1}set REVERSE_SORT(e){ut.ui[this.SECTION_NAME].reverseSort=e?-1:1,ut.writeConfiguration(),this.applySorting()}get REVERSE_FILTER(){return ut?.ui[this.SECTION_NAME]?.reverseFilter??!1}set REVERSE_FILTER(e){ut.ui[this.SECTION_NAME].reverseFilter=e,ut.writeConfiguration(),this.applyFiltering()}get ACHIV_MIN_SIZE(){return ut?.ui[this.SECTION_NAME]?.ACHIV_MIN_SIZE??30}set ACHIV_MIN_SIZE(e){+e>10&&(ut.ui[this.SECTION_NAME].ACHIV_MIN_SIZE=e,ut.writeConfiguration(),this.fitSizeVertically())}get ACHIV_MAX_SIZE(){return ut?.ui[this.SECTION_NAME]?.ACHIV_MAX_SIZE??150}set ACHIV_MAX_SIZE(e){+e>+this.ACHIV_MIN_SIZE&&(ut.ui[this.SECTION_NAME].ACHIV_MAX_SIZE=e,ut.writeConfiguration(),this.fitSizeVertically())}get ACHIV_STRETCH(){return ut?.ui[this.SECTION_NAME]?.stretchAchievements??!1}set ACHIV_STRETCH(e){ut.ui[this.SECTION_NAME].stretchAchievements=e,ut.writeConfiguration(),this.container.style.height=this.ACHIV_STRETCH?"100%":"auto"}get BG_VISIBILITY(){return ut?.ui[this.SECTION_NAME]?.bgVisibility??!0}set BG_VISIBILITY(e){ut.ui[this.SECTION_NAME].bgVisibility=e,ut.writeConfiguration(),this.section.classList.toggle("hide-bg",!this.BG_VISIBILITY)}get SHOW_HEADER(){return ut?.ui[this.SECTION_NAME]?.showHeader??!1}set SHOW_HEADER(e){ut.ui[this.SECTION_NAME].showHeader=e,ut.writeConfiguration(),this.section.classList.toggle("compact",!this.SHOW_HEADER)}get IS_GROUPING(){return ut.getUIProperty({sectionID:this.section.id,property:"isGrouping"})??!1}set IS_GROUPING(e){ut.saveUIProperty({sectionID:this.section.id,property:"isGrouping",value:e}),this.groupCheevos()}get GROUP_BY(){return ut.getUIProperty({sectionID:this.section.id,property:"groupBy"})??Ee.UNLOCK_STATUS}set GROUP_BY(e){ut.saveUIProperty({sectionID:this.section.id,property:"groupBy",value:e}),this.groupCheevos()}get AUTOSCROLL(){return ut?.ui[this.SECTION_NAME]?.autoscroll??!0}set AUTOSCROLL(e){ut.ui[this.SECTION_NAME].autoscroll=e,ut.writeConfiguration(),e?this.startAutoScroll():this.stopAutoScroll()}get SMART_AUTOSCROLL(){return!1}set SMART_AUTOSCROLL(e){ut.ui[this.SECTION_NAME].smartAutoscroll=e,this.stopAutoScroll(),this.startAutoScroll()}get SHOW_PREV_OVERLAY(){return ut.ui[this.SECTION_NAME]?.showPrevOverlay??!0}set SHOW_PREV_OVERLAY(e){ut.ui[this.SECTION_NAME].showPrevOverlay=e,ut.writeConfiguration(),this.container.querySelectorAll(".achiv-block").forEach((t=>t.classList.toggle("overlay",e)))}get SHOW_MARIO(){return ut.ui[this.SECTION_NAME]?.showMario??!0}set SHOW_MARIO(e){ut.ui[this.SECTION_NAME].showMario=e,ut.writeConfiguration()}get SHOW_LOAD_ANIMATION(){return ut.ui[this.SECTION_NAME]?.showLoadAnimation??!0}set SHOW_LOAD_ANIMATION(e){ut.ui[this.SECTION_NAME].showLoadAnimation=e,ut.writeConfiguration()}get SECTION_NAME(){return 0===this.CLONE_NUMBER?"achievements_section":`achievements_section-${this.CLONE_NUMBER}`}get CLONE_NUMBER(){return this._cloneNumber}set CLONE_NUMBER(e){this._cloneNumber=e?.length?e.length:0,this.widgetIcon={...this.widgetIcon,iconID:`side-panel__cheevos-${this.CLONE_NUMBER}`,onChangeEvent:`ui.achievementsBlock[${this.CLONE_NUMBER}].VISIBLE = this.checked`}}get SHOW_GROUP_HEADER(){return ut.getUIProperty({sectionID:this.section.id,property:"showGroupHeader"})??!0}set SHOW_GROUP_HEADER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showGroupHeader",value:e}),this.groupCheevos()}constructor(e=!1){super(),this.CLONE_NUMBER=pt.achievementsBlock,this.isClone=e,this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=this.generateNewWidget({}),document.querySelector(".wrapper").appendChild(this.section),this.container=this.section.querySelector(".achievements-container"),this.resizer=this.section.querySelector(`#achivs-resizer${this.CLONE_NUMBER}`)}addEvents(){super.addEvents(),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),this.stopAutoScroll(),j({event:e,section:this.section,callback:()=>{this.fitSizeVertically(!0)}})})),this.resizer.addEventListener("mouseup",(()=>{this.startAutoScroll()})),new Sortable(this.container,{group:{name:"cheevos",pull:"clone",push:"false"},animation:100,chosenClass:"dragged",onEnd:()=>pt.addEvents()})}setValues(){ct.applyPosition({widget:this}),this.section.classList.toggle("hide-bg",!this.BG_VISIBILITY),this.section.classList.toggle("compact",!this.SHOW_HEADER),ut.ui[this.SECTION_NAME]&&(this.section.style.top=ut.ui[this.SECTION_NAME].y??"0px",this.section.style.left=ut.ui[this.SECTION_NAME].x??"0px",this.section.style.height=ut.ui[this.SECTION_NAME].height??"600px",this.section.style.width=ut.ui[this.SECTION_NAME].width??"350px"),this.container.style.height=this.ACHIV_STRETCH?"100%":"auto",this.AUTOSCROLL&&this.startAutoScroll(),this.updateOverlay(),this.filters=ut.getUIProperty({sectionID:this.section.id,property:"filters"})??{}}updateOverlay(){this.section.dataset.overlay=this.OVERLAY_TYPE}parseGameAchievements(e){(()=>{this.container.innerHTML=""})(),(e=>{Object.values(e.Achievements).forEach((e=>{const t=this.generateAchievement(e);this.container.appendChild(t)})),this.groupCheevos()})(e),this.fitSizeVertically(),this.applyFiltering(),this.applySorting({animation:0}),this.SHOW_LOAD_ANIMATION&&this.doLoadAnimation(),this.startAutoScroll()}generateAchievement(e){const t=document.createElement("li");var s;return s=this,t.classList.add("achiv-block"),t.classList.toggle("start-load-anim",s.SHOW_LOAD_ANIMATION),t.classList.toggle("overlay",s.SHOW_PREV_OVERLAY),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isHardcoreEarned),t.classList.toggle("rare",e.TrueRatio>100),t.dataset.achivId=e.ID,t.dataset.Points=e.Points,t.dataset.TrueRatio=e.TrueRatio,e.TrueRatio>50&&(t.dataset.rarity="normal"),e.TrueRatio>150&&(t.dataset.rarity="rare"),e.TrueRatio>300&&(t.dataset.rarity="mythycal"),t.dataset.DisplayOrder=e.DisplayOrder,t.dataset.type=e.type,t.dataset.difficulty=e.difficulty,e.level&&(t.dataset.level=e.level),t.dataset.NumAwardedHardcore=e.NumAwardedHardcore,e.DateEarnedHardcore&&(t.dataset.DateEarnedHardcore=e.DateEarnedHardcore),e.DateEarned&&(t.dataset.DateEarned=e.DateEarned),t.innerHTML=`\n        <div class="preview-container">\n          <img class="achiv-preview" src="${e.prevSrc}"  alt="${e.Title} icon"/>\n        </div>\n        `,t}fitSizeVertically(e=!1){const{section:t,container:s}=this;let i,n;s.style.flex="1",e||!ut.ui[this.SECTION_NAME]?.height?(i=s.clientHeight,n=s.clientWidth):(i=parseInt(ut.ui[this.SECTION_NAME].height)-t.querySelector(".header-container").clientHeight,n=parseInt(ut.ui[this.SECTION_NAME].width)),s.style.flex="";const a=s.querySelectorAll(".achiv-block:not(.removed)").length;if(0===a)return;let o=Math.floor(Math.sqrt(n*i/a));do{o--,this.section.style.setProperty("--achiv-height",o+"px")}while(s.scrollHeight>s.offsetHeight&&o>this.ACHIV_MIN_SIZE);o=o<this.ACHIV_MIN_SIZE?this.ACHIV_MIN_SIZE:o>this.ACHIV_MAX_SIZE?this.ACHIV_MAX_SIZE:o,this.section.style.setProperty("--achiv-height",o+"px")}autoscrollInterval={};async updateEarnedAchieves({earnedAchievementIDs:e}){await w(100),this.stopAutoScroll();for(let t of e){const e=Et.CHEEVOS[t],s=this.container.querySelector(`.achiv-block[data-achiv-id="${t}"]`);this.SHOW_MARIO?(await ve({container:this.container,element:s}),await this.marioAction(s,e)):(s.classList.add("earned"),s.classList.toggle("hardcore",e.isHardcoreEarned)),await w(100),e.DateEarnedHardcore&&(s.dataset.DateEarnedHardcore=e.DateEarnedHardcore),s.dataset.DateEarned=e.DateEarned}this.container.scrollTo({top:0,left:0,behavior:"smooth"}),await w(500),this.applyFiltering(),await this.applySorting(),await w(2e3),this.startAutoScroll()}async marioAction(e,t){const s=t.isHardcoreEarned,i=document.createElement("div");i.classList.add("mario__container","stand"),this.container.appendChild(i);const n=i.getBoundingClientRect().width,a=e?.getBoundingClientRect(),o={xPos:a.left,yPos:a.top+n},r=2*n,c=a.left>window.innerWidth/2,l={xPos:c?window.innerWidth+n:-n,yPos:o.yPos+r},h=70;let d=Math.sqrt(20*r);i.style.top=l.yPos+"px",i.style.left=l.xPos+"px";const g=()=>{const i=document.createElement("div");i.classList.add("coin__container");const n=s?t.TrueRatio+"RP":t.Points+"SP";i.innerHTML=`\n                <div class='coins__points'>+${n}</div>\n                <div class='coins__coin'></div>\n            `,this.section.appendChild(i),this.section.classList.add("focus"),i.style.top=a.top-a.height/2+"px",i.style.left=o.xPos+"px",e?.classList.add("earned","mario-dumb"),e?.classList.toggle("hardcore",s),setTimeout((()=>e?.classList.remove("mario-dumb")),500),setTimeout((()=>{i.remove(),this.section.classList.remove("focus")}),5e3)};await(async()=>{let e=l.xPos;for(i.classList.remove("stand"),i.classList.add("walk"),i.classList.toggle("to-left",c),i.style.setProperty("--frame-duration","70ms");e!==o.xPos;)c?(e-=20,e<o.xPos&&(e=o.xPos)):(e+=20,e>o.xPos&&(e=o.xPos)),i.style.left=e+"px",await w(h);i.classList.remove("walk"),i.classList.add("stand"),await w(500)})(),await(async()=>{i.classList.remove("stand"),i.classList.add("jump");let e=l.yPos;for(;~~d>0;)e-=d,d-=10,e<o.yPos?(e=o.yPos-2,i.style.top=e+"px"):(i.style.top=e+"px",await w(h));for(g(),d=0;e<l.yPos;)e+=d,d+=10,e>l.yPos&&(e=l.yPos),i.style.top=e+"px",await w(h);i.classList.remove("jump"),i.classList.add("stand"),await w(500),i.classList.toggle("to-left",!c),await w(500)})(),await(async()=>{let e=i.getBoundingClientRect().left;for(i.style.setProperty("--frame-duration","52.5ms"),i.className=`mario__container walk ${c?"":"to-left"} `;e!==l.xPos;)c?(e+=20,e>l.xPos&&(e=l.xPos)):(e-=20,e<l.xPos&&(e=l.xPos)),i.style.left=e+"px",await w(52.5)})(),i.remove(),await w(100)}startAutoScroll(e=!0){if(clearTimeout(this.autoscrollInterval.timeout),clearInterval(this.autoscrollInterval.interval),this.SMART_AUTOSCROLL&&this.isAllEarnedAchievesVisible())return void(this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(e)),3e4));let t=this.container,s=1;this.AUTOSCROLL&&(this.autoscrollInterval.interval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!1)),15e3))):(t.scrollTop-=s,0===t.scrollTop&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!0)),15e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval.interval),clearTimeout(this.autoscrollInterval.timeout)}isAllEarnedAchievesVisible(){let e=!0;return this.container.querySelectorAll(".earned").forEach((t=>{!this.isAchieveVisible(t)&&(e=!1)})),e}isAchieveVisible(e){let t=!0;const s=this.container.getBoundingClientRect().top,i=this.container.getBoundingClientRect().height,n=e.getBoundingClientRect().top-s,a=e.getBoundingClientRect().top-s+e.getBoundingClientRect().height;return(n<0||a>i)&&(t=!1),t}highlightCurrentLevel(e){[...this.container.querySelectorAll(".achiv-block")].forEach((t=>{if(t.classList.remove("highlight"),t.dataset.level==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}}))}async applySorting(e={animation:500}){await se({container:this.container,itemClassName:".achiv-block",sortMethod:this.SORT_METHOD,reverse:this.REVERSE_SORT,animationDuration:this.IS_GROUPING?0:e.animation}),this.groupCheevos()}applyFiltering(){_e({container:this.container,itemClassName:".achiv-block",filters:this.filters,isHide:this.HIDE_FILTERED}),this.groupCheevos()}setFilter({filterName:e,state:t,type:s,event:i}){0===t?delete this.filters[e]:this.filters[e]={filterName:e,state:t},ut.saveUIProperty({sectionID:this.section.id,property:"filters",value:this.filters}),this.applyFiltering()}doLoadAnimation(){const e=this.container,t=e.querySelectorAll(".achiv-block");const s=e=>new Promise((t=>setTimeout(t,e)));setTimeout((()=>function(){const i=e.scrollHeight;e.style.setProperty("--top-position",-i+"px");let n=0;[...t].reverse().forEach((async e=>{const t=100*n+200;!e.classList.contains("removed")&&n++;const i=t+1e3;e.style.setProperty("--load-delay",t+"ms"),e.classList.add("start-load-anim"),await s(50),e.classList.add("show-load-anim"),await s(i+500),e.classList.remove("show-load-anim","start-load-anim")}))}()),0)}generateNewWidget({}){const e=document.createElement("section");return e.id=`${this.SECTION_NAME}`,e.classList.add("achivs","section"),e.style.width=ut.ui.achievements_section?.width??"350px",e.style.height=ut.ui.achievements_section?.height??"650px",e.innerHTML=`\n        <div class="header-container achievements-header_container">\n          <div class="header-icon achievements-icon">\n          </div>\n          <h2 class="widget-header-text achivs-header-text">${pt.lang.cheevosSectionName}${0===this.CLONE_NUMBER?"":" ~"}</h2>\n        <button class="header-button header-icon tweak-icon tweak-button" onclick="ui.settings.openSettings(ui.achievementsBlock[${this.CLONE_NUMBER}].contextMenuItems)">\n               \n        </button>\n          <button class="header-button header-icon close-icon">\n          </button>\n        </div>\n        <ul class="achievements-container content-container"></ul>\n        <div class="resizer" id="achivs-resizer${this.CLONE_NUMBER}"></div>\n      `,e}groupCheevos(){const e=(e,t,s,...i)=>{const n=[...s].filter((e=>t(e.dataset,...i)));if(0===n.length)return;const a=document.createElement("div");a.classList.add("cheevos__group"),a.classList.toggle("compact",!this.SHOW_GROUP_HEADER),a.innerHTML=`\n                <div class="cheevos__group-header"><h3 class="cheevos__group-title">${e}</h3></div>\n                <div class="cheevos__group-container"></div>\n                </div>\n            `,this.container.appendChild(a),n.forEach((e=>a.querySelector(".cheevos__group-container").appendChild(e)))},t=e=>{e.forEach((e=>this.container.appendChild(e))),this.fitSizeVertically()},s=this.container.querySelectorAll(".achiv-block");if(this.container.innerHTML="",this.IS_GROUPING){switch(this.GROUP_BY){case Ee.UNLOCK_STATUS:e(pt.lang.earned,K.earned,s),e(pt.lang.earnedSoftcore,K.earnedSoftcore,s),e(pt.lang.locked,K.notEarned,s);break;case Ee.TYPE:e(pt.lang.progression,K.progression,s),e(pt.lang.missable,K.missable,s),e(pt.lang.other,K.typeless,s);break;case Ee.LEVEL:const t=[...s].map((({dataset:e})=>Number(e.level))).filter((e=>!Number.isNaN(e))),i=Math.max(0,...t),n=Math.min(0,...t),{zones:a}=Et.GAME_DATA,o=a?.length>2;for(let t=n;t<=i;t++)e(`Level: ${o?a[t-1]:t}`,K.level,s,{targetLevel:t});e(pt.lang.other,K.leveless,s)}this.fitSizeVertically()}else t(s)}}class Ae extends z{widgetIcon={iconClass:"info-icon"};constructor(e){super(),this.generatePopupElement(e),this.initializeElements(),this.addEvents(),this.VISIBLE=!0,ct.applyPosition({widget:this})}generatePopupElement({id:e,classList:t=[],title:s,content:i}){this.close(e);const n=document.createElement("section");n.classList.add("popup-section","section",...t),n.id=e,n.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                <button class="header-icon header-button close-icon"></button>\n            </div>\n            <div class="widget-content__container">\n                ${i}\n            </div>\n            <div class="resizer"></div>`,this.section=n,pt.app.appendChild(n)}initializeElements(){}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{if(e.target.matches(".comment__copy-button")){const t=e.target.parentElement?.innerText;navigator.clipboard.writeText(t||"")}else if(e.target.matches(".comment__note-button")){const t=e.target.parentElement?.innerText,s=Et.GAME_DATA?.ID||"main";let i=ut.gamesDB[s]?.notes??"";i+="\n-----------------\n"+t+"\n-----------------\n",pt.note.saveNoteValue({id:s,value:i.trim()}),pt.note.switchActiveTab(),pt.note.switchActiveTab()}}))}close(e){e?document.querySelector(`#${e}`)?.remove():super.close()}}async function ye(e,t=2){const s=await(_t?.getComments({id:e,type:t}))||[];let i="";i=s.length>0?`\n            <ul class="comments-list scrollable">\n                ${s.map((e=>`\n                    <li class="comment">\n                        <div class="comment__header">\n                            <h3 class="comment__user-name">${e.User}</h3>\n                            <div class="comment__date">${Te(e)}</div>\n                        </div>\n                        <div class="comment__comment">\n                          <button data-title="copy to clipboard" class="icon-button description-icon copy-icon comment__copy-button"></button>\n                          <button data-title="copy to note" class="icon-button description-icon note-icon comment__note-button"></button>\n                          ${fe(e)}\n                        </div>\n                    </li>\n                `)).join("\n")}\n            </ul>`:'<h2 style="width: 100%;padding: 1rem; font-size: 2rem; text-align:center">No comments yet</h2>';new Ae({title:(1===t?"Game":2===t?"Cheevo":"User")+" comments",content:i,id:`comments_type-${t}`})}const fe=({CommentText:e})=>e?.replace(/\bhttp(?:s)*:\/\/[^\s]*\b/g,(e=>`<a href='${e}' target='_blank'>${e}</a>`)),Te=({Submitted:e})=>new Date(e).toLocaleString(),Ie=({event:e,onChange:t,id:s,checked:i,label:n,name:a,isRadio:o})=>`\n        <div class="${o?"radio":"checkbox"}-input_container">\n            <input ${[`type="${o?"radio":"checkbox"}"`,s&&`id="${s}"`,a&&`name="${a}"`,e,t&&`onchange="${t}"`,i&&"checked"].filter(Boolean).join(" ")}\n            >\n            <label class="checkbox-input" ${s?`for="${s}"`:""}>\n                ${n}\n            </label>\n        </div>\n    `,be=({state:e,type:t,value:s,id:i,event:n,label:a,sectionCode:o})=>`\n    <div \n        class="statebox statebox__container checkbox-input" \n        data-state="${e??0}" \n        data-value="${s}" \n        data-event="${n}"\n        id="${i+o}"\n        <p class="statebox__label">${a}</p>\n    </div>\n`,Re=e=>Ie({...e,isRadio:!0}),Oe=({prefix:e,title:t,id:s,value:i,label:n,onChange:a,isNumber:o,isSearch:r,placeholder:c})=>`\n        <input ${[`type="${o?"number":r?"search":"text"}"`,(t||e)&&`data-title="${t||e}"`,'class="text-input"',s&&`id="${s}"`,void 0!==i&&`value="${i}"`,n&&`placeholder="${n}"`,a&&`onchange="${a}"`].filter(Boolean).join(" ")}\n        />\n    `,Ce=e=>Oe({...e,isNumber:!0}),we=e=>Oe({...e,isSearch:!0}),Le=({id:e,label:t,selectValues:s})=>`\n        <button class="select-button" id="${e}" onclick="this.classList.toggle('extended'); event.stopPropagation();">\n            <div class="select-label">${t}</div>\n            <div class="select-menu">\n                ${s?.map((e=>(({name:e,checked:t,event:s,label:i,id:n,type:a})=>`<li class="context-menu_item">\n                    <input ${[n&&`id="${n}"`,`type="${a||"radio"}"`,e&&`name="${e}"`,t&&"checked",s].filter(Boolean).join(" ")}></input>\n                    <label class="context-menu_${a||"radio"}" for="${n}">\n                        ${i}\n                    </label>\n                </li>\n            `)(e))).join("\n")}\n            </div>\n        </button>\n    `,De=({event:e,onClick:t,label:s,id:i})=>`\n        <button ${[i&&`id="${i}"`,'class="button-input"',e,t&&`onclick="${t}"`].filter(Boolean).join(" ")}>\n            ${s}\n        </button>\n    `,Ne=e=>{switch(e.type){case"text":return Oe(e);case"search":return we(e);case"number":return Ce(e);case"button":return De(e);case"checkbox":return Ie(e);case"statebox":return be(e);case"radio":return Re(e);case"selector":return Le(e);case"group":return(({label:e})=>`\n       <div class="group-header">${e}</div>\n    `)(e);default:return`[${e.type} N/A]`}};function Pe(){const e=e=>[{label:"Title",elements:[{type:"text",title:"cheevo title",id:"cheevo-props-title",value:e?.Title??""}]},{label:"Description",elements:[{type:"text",title:"cheevo description",id:"cheevo-props-description",value:e?.Description??""}]},{label:"Genres",elements:[{type:"text",title:"cheevo genres. if more then one - separate with ','",id:"cheevo-props-genres",value:e?.genres?.join(",")??""}]},{label:"Zone Name",elements:[{type:"text",title:"cheevo zone name",id:"cheevo-props-zonename",value:e?.zone??""}]},{label:"Zone Number",elements:[{type:"number",title:"zone number in [d.d] format. First number for level, second for sublevel. For example level 1-3: you'd write as '1.3'",id:"cheevo-props-level",value:e?.level??""}]},{elements:[{id:"reset-cheevo-props",label:"Reset Cheevo Data",type:"button"},{id:"save-cheevo-props",label:"Save Data",type:"button"}]}];let t;const s=(e,t)=>{Object.keys(e).length>0?ut.cheevosDB[t]=e:delete ut.cheevosDB[t],ut.writeConfiguration()},i=(e,i)=>{e.querySelector("#save-cheevo-props")?.addEventListener("click",(()=>((e,t)=>{const i=t.ID,n=_t.gameData?.Achievements[i],a=(e=>({Title:e.querySelector("#cheevo-props-title")?.value,Description:e.querySelector("#cheevo-props-description")?.value,zone:e.querySelector("#cheevo-props-zonename")?.value,level:e.querySelector("#cheevo-props-level")?.value,genres:e.querySelector("#cheevo-props-genres").value?.length>1?e.querySelector("#cheevo-props-genres").value.split(","):[]}))(e);Object.keys(a).forEach((e=>{Et.CHEEVOS[i][e]=a[e],a[e]==n[e]&&delete a[e]})),s(a,i),Et.resetCheevo(i)})(e,i))),e.querySelector("#reset-cheevo-props")?.addEventListener("click",(()=>(async(e,i)=>{const a=i.ID,o=_t.gameData?.Achievements[a];Et.CHEEVOS[a].Title=o.Title,Et.CHEEVOS[a].Description=o.Description,Et.CHEEVOS[a].zone=o.zone,Et.CHEEVOS[a].level=o.level,Et.CHEEVOS[a].genres=o.genres||[],s({},a),Et.resetCheevo(a),t?.section?.remove(),n(o)})(0,i)))},n=s=>{var n;t=new Ae({title:s?.Title,content:(n=e(s),`\n    <ul class="game-props__list flex-column-list">\n      ${n.map((e=>`\n          <li class="game-props__item">${e.label??""}\n              ${e.elements.map((e=>Ne(e))).join("\n")}\n          </li>\n      `)).join("\n")}\n    </ul>`),id:"cheevo-data-popup",classList:["game-data__section"]}),i(t.section,s)};return{open:n}}class He extends z{sectionCode="-target";widgetIcon={description:"target widget",iconID:"side-panel__target",onChangeEvent:"ui.target.VISIBLE = this.checked",iconClass:"target-icon"};filters={};get contextMenuItems(){return[{label:pt.lang.style,elements:[{label:pt.lang.showBackground,type:"checkbox",name:"context_hide-target-bg",id:"context_hide-target-bg",checked:!this.HIDE_BG,event:'onchange="ui.target.HIDE_BG = !this.checked;"'},{type:"checkbox",name:"context_fixed-count-switcher",id:"context_fixed-count-switcher",label:pt.lang.fixedSize,checked:this.IS_FIXED_SIZE,event:'onchange="ui.target.IS_FIXED_SIZE = this.checked;"'},{prefix:pt.lang.cheevosCount,postfix:"",type:"input-number",name:"context-fixed-count",id:"context-fixed-count",label:pt.lang.cheevosCount,value:this.FIXED_COUNT,event:'onchange="ui.target.FIXED_COUNT = this.value;"',onChange:"ui.target.FIXED_COUNT = this.value;"},{type:"checkbox",name:"context_autoscroll-target",id:"context_autoscroll-target",label:pt.lang.autoscroll,checked:this.AUTOSCROLL,event:'onchange="ui.target.AUTOSCROLL = this.checked;"'}]},{label:pt.lang.elements,elements:[{label:pt.lang.showHeader,type:"checkbox",name:"context_hide-target-header",id:"context_hide-target-header",checked:this.SHOW_HEADER,event:'onchange="ui.target.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context-show-genre-badge",id:"context-show-genre-badge",label:pt.lang.showGenreBadges,checked:this.SHOW_GENRE,event:'onchange="ui.target.SHOW_GENRE = this.checked;"'},{type:"checkbox",name:"context-show-level",id:"context-show-level",label:pt.lang.showLevel,checked:this.SHOW_LEVEL,event:'onchange="ui.target.SHOW_LEVEL = this.checked"'},{type:"checkbox",name:"context-show-events-checkbox",id:"context-show-events-checkbox",label:pt.lang.showEvents,checked:this.SHOW_EVENTS,event:'onchange="ui.target.SHOW_EVENTS = this.checked"'},{type:"checkbox",name:"context_progression-bar",id:"context_progression-bar",label:pt.lang.showCheevoUnlockRateBar,checked:this.SHOW_UNLOCK_RATE_BAR,event:'onchange="ui.target.SHOW_UNLOCK_RATE_BAR = this.checked;"'}]},{label:pt.lang.sort,elements:[{type:"radio",name:"context-sort",id:"context-sort_latest",label:pt.lang.latest,checked:this.SORT_NAME===ae,event:`onchange="ui.target.SORT_NAME = '${ae}';"`},{type:"radio",name:"context-sort",id:"context-sort_true-ratio",label:pt.lang.trueRatio,checked:this.SORT_NAME===re,event:`onchange="ui.target.SORT_NAME = '${re}';"`},{type:"radio",name:"context-sort",id:"context-sort_difficulty",label:pt.lang.difficulty,checked:this.SORT_NAME===pe,event:`onchange="ui.target.SORT_NAME = '${pe}';"`},{type:"radio",name:"context-sort",id:"context-sort_rarest",label:pt.lang.rarest,checked:this.SORT_NAME===ce,event:`onchange="ui.target.SORT_NAME = '${ce}';"`},{type:"radio",name:"context-sort",id:"context-sort_points",label:pt.lang.points,checked:this.SORT_NAME===le,event:`onchange="ui.target.SORT_NAME = '${le}';"`},{type:"radio",name:"context-sort",id:"context-sort_retropoints",label:pt.lang.retropoints,checked:this.SORT_NAME===he,event:`onchange="ui.target.SORT_NAME = '${he}';"`},{type:"radio",name:"context-sort",id:"context-sort_default",label:pt.lang.default,checked:this.SORT_NAME===ge,event:`onchange="ui.target.SORT_NAME = '${ge}';"`},{type:"radio",name:"context-sort",id:"context-sort_level",label:pt.lang.level,checked:this.SORT_NAME===ue,event:`onchange="ui.target.SORT_NAME = '${ue}';"`},{type:"radio",name:"context-sort",id:"context-sort_dont-sort",label:pt.lang.disable,checked:this.SORT_NAME===de,event:`onchange="ui.target.SORT_NAME = '${de}';"`},{type:"checkbox",name:"context-reverse-sort",id:"context-reverse-sort",label:pt.lang.reverse,checked:-1==this.REVERSE_SORT,event:'onchange="ui.target.REVERSE_SORT = this.checked"'}]},{label:pt.lang.filter,elements:[{type:"statebox",name:"context-filter",id:"context_filter-earned",label:pt.lang.earned,value:`${Z}`,state:`${this.filters[Z]?.state??0}`,event:"ui.target.setFilter({ event, state, filterName })"},{type:"statebox",name:"context-filter",id:"context_filter-earned-soft",label:pt.lang.earnedSoftcore,value:`${Q}`,state:`${this.filters[Q]?.state??0}`,event:"ui.target.setFilter({ event, state, filterName })"},{type:"statebox",name:"context-filter",id:"context_filter-progression",label:pt.lang.progression,value:`${ee}`,state:`${this.filters[ee]?.state??0}`,event:"ui.target.setFilter({ event, state, filterName })"},{type:"statebox",name:"context-filter",id:"context_filter-missable",label:pt.lang.missable,value:`${J}`,state:`${this.filters[J]?.state??0}`,event:"ui.target.setFilter({ event, state, filterName })"},{type:"checkbox",name:"context-hide-filtered",id:"context-hide-filtered",label:pt.lang.hideFiltered,checked:this.HIDE_FILTERED,event:'onchange="ui.target.HIDE_FILTERED = this.checked;"'}]},{label:pt.lang.level_test,elements:[{type:"checkbox",name:"context-hide-passed-levels",id:"context-hide-passed-levels",label:pt.lang.hidePassedLevels,checked:this.HIDE_PASSED_LEVELS,event:'onchange="ui.target.HIDE_PASSED_LEVELS = this.checked;"'},{type:"checkbox",name:"context-highlight-passed",id:"context-highlight-passed",label:pt.lang.highLightPassedLevels,checked:this.HIGHLIGHT_PASSED_LEVELS,event:'onchange="ui.target.HIGHLIGHT_PASSED_LEVELS = this.checked;"'}]},{label:pt.lang.data,elements:[{type:"button",name:"context-fill",id:"context-fill",label:pt.lang.fillAll,event:'onclick="ui.target.fillItems()"'},{type:"checkbox",name:"context-autofill",id:"context-autofill",label:pt.lang.autofill,checked:this.AUTOFILL,event:'onchange="ui.target.AUTOFILL = this.checked;"'},{type:"button",name:"context-clear-all",id:"context-clear-all",label:pt.lang.clearAll,event:'onclick="ui.target.clearAllAchivements();"'},{type:"checkbox",name:"context-autoclear",id:"context-autoclear",label:pt.lang.autoclearEarned,checked:this.AUTOCLEAR,event:'onchange="ui.target.AUTOCLEAR = this.checked;"'},{prefix:pt.lang.clearDelay,postfix:"sec",type:"input-number",name:"context-autoclear-delay",id:"context-autoclear-delay",label:pt.lang.clearDelay,value:this.AUTOCLEAR_DELAY,event:'onchange="ui.target.AUTOCLEAR_DELAY = this.value;"',onChange:"ui.target.AUTOCLEAR_DELAY = this.value;"}]}]}get IS_FIXED_SIZE(){return ut.getUIProperty({sectionID:this.section.id,property:"isFixedSize"})??!1}set IS_FIXED_SIZE(e){ut.saveUIProperty({sectionID:this.section.id,property:"isFixedSize",value:e}),this.section.classList.toggle("fixed-size",this.IS_FIXED_SIZE)}get FIXED_COUNT(){const e=~~ut.getUIProperty({sectionID:this.section.id,property:"fixedSizeCount"});return e>0?e:2}set FIXED_COUNT(e){e=e>0?~~e:3,ut.saveUIProperty({sectionID:this.section.id,property:"fixedSizeCount",value:e}),this.container.style.setProperty("--max-count",this.FIXED_COUNT)}get SHOW_HEADER(){return ut.getUIProperty({sectionID:this.section.id,property:"showHeader"})??!0}set SHOW_HEADER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showHeader",value:e}),this.section.classList.toggle("compact-header",!this.SHOW_HEADER)}get HIDE_BG(){return ut.getUIProperty({sectionID:this.section.id,property:"hideBg"})??!1}set HIDE_BG(e){ut.saveUIProperty({sectionID:this.section.id,property:"hideBg",value:e}),this.section.classList.toggle("hide-bg",this.HIDE_BG)}get SHOW_UNLOCK_RATE_BAR(){return ut.getUIProperty({sectionID:this.section.id,property:"showCheevoUnlockRateBar"})??!0}set SHOW_UNLOCK_RATE_BAR(e){ut.saveUIProperty({sectionID:this.section.id,property:"showCheevoUnlockRateBar",value:e}),this.section.classList.toggle("show-progression-bar",this.SHOW_UNLOCK_RATE_BAR)}set SORT_NAME(e){ut._cfg.settings.sortTargetBy=e,ut.writeConfiguration(),this.applySort()}get SORT_NAME(){return ut._cfg.settings.sortTargetBy||ge}get SORT_METHOD(){return ne[this.SORT_NAME]}get REVERSE_SORT(){return ut._cfg.settings.reverseSortTarget||1}set REVERSE_SORT(e){ut._cfg.settings.reverseSortTarget=e?-1:1,ut.writeConfiguration(),this.applySort()}get FILTER_NAME(){return ut._cfg.settings.filterTargetBy||X}set FILTER_NAME(e){ut._cfg.settings.filterTargetBy=e,ut.writeConfiguration(),this.applyFilter()}get FILTER_METHOD(){return K[this.FILTER_NAME]}get REVERSE_FILTER(){return ut._cfg.settings.reverseFilterTarget??!1}set REVERSE_FILTER(e){ut._cfg.settings.reverseFilterTarget=e,ut.writeConfiguration(),this.applyFilter()}get HIDE_FILTERED(){return ut._cfg.settings.hideFilteredTarget??!1}set HIDE_FILTERED(e){ut._cfg.settings.hideFilteredTarget=e,ut.writeConfiguration(),this.filterByGenre(this.genreFilter,!0)}get AUTOCLEAR(){return ut._cfg.settings.autoClearTarget??!1}set AUTOCLEAR(e){ut._cfg.settings.autoClearTarget=e,ut.writeConfiguration()}get AUTOFILL(){return ut._cfg.settings.autoFillTarget??!0}set AUTOFILL(e){ut._cfg.settings.autoFillTarget=e,ut.writeConfiguration()}get AUTOCLEAR_DELAY(){return Number(ut._cfg.settings.autoClearTargetTime??5)}set AUTOCLEAR_DELAY(e){ut._cfg.settings.autoClearTargetTime=e>=0?e:0,ut.writeConfiguration()}get AUTOSCROLL(){return ut?.ui?.target_section?.autoscroll??!1}set AUTOSCROLL(e){ut.saveUIProperty({sectionID:this.section.id,property:"autoscroll",value:e}),e?this.startAutoScroll():this.stopAutoScroll()}get SHOW_PREV_BORDER(){return!0}set SHOW_PREV_BORDER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPrevBorder",value:e})}get SHOW_PREV_OVERLAY(){return!0}set SHOW_PREV_OVERLAY(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPrevOverlay",value:e})}get SHOW_DIFFICULT(){return ut.getUIProperty({sectionID:this.section.id,property:"showDifficult"})??!0}set SHOW_DIFFICULT(e){ut.saveUIProperty({sectionID:this.section.id,property:"showDifficult",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-difficult",e)))}get SHOW_LEVEL(){return ut.getUIProperty({sectionID:this.section.id,property:"showLevel"})??!0}set SHOW_LEVEL(e){ut.saveUIProperty({sectionID:this.section.id,property:"showLevel",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-level",e)))}get SHOW_GENRE(){return ut.getUIProperty({sectionID:this.section.id,property:"showGenre"})??!0}set SHOW_GENRE(e){ut.saveUIProperty({sectionID:this.section.id,property:"showGenre",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-genre",e)))}get HIDE_PASSED_LEVELS(){return ut.getUIProperty({sectionID:this.section.id,property:"hidePassedLevels"})??!0}set HIDE_PASSED_LEVELS(e){ut.saveUIProperty({sectionID:this.section.id,property:"hidePassedLevels",value:e}),this.section.classList.toggle("hide-passed",e)}get HIGHLIGHT_PASSED_LEVELS(){return ut.getUIProperty({sectionID:this.section.id,property:"highlightPassedLevels"})??!0}set HIGHLIGHT_PASSED_LEVELS(e){ut.saveUIProperty({sectionID:this.section.id,property:"highlightPassedLevels",value:e}),this.section.classList.toggle("highlight-passed",e)}get SHOW_EVENTS(){return ut.getUIProperty({sectionID:this.section.id,property:"showEvents"})??!1}set SHOW_EVENTS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showEvents",value:e}),this.section.classList.toggle("show-events",e)}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues(),this.showAotwEvent({cheevo:ut.aotw})}initializeElements(){this.section=document.querySelector("#target_section"),this.header=document.querySelector(".target-header_container"),this.container=document.querySelector(".target-container"),this.searchInput=this.section.querySelector("#target__searchbar")}generateWidget(){const e=`\n            <button class="header-button header-icon tweak-button tweak-icon"></button>\n            <input type="search" name="" id="target__searchbar" class="text-input target__search-bar" placeholder="${pt.lang.search}">\n        `,t={classes:["target_section","section","compact-header"],id:"target_section",title:pt.lang.targetSectionName,headerElementsHtml:e,contentClasses:["target-container","content-container","flex-main-list"]},s=this.generateWidgetElement(t);pt.app.appendChild(s)}addEvents(){super.addEvents(),this.container.addEventListener("click",(e=>{if(e.target.closest(".comments-button")){const t=e.target.closest(".target-achiv")?.dataset.achivId;t&&ye(t,2)}else if(e.target.matches(".edit-cheevo-button")){const t=e.target.dataset.cheevoId,s=Et.CHEEVOS[t];s&&Pe().open(s)}else if(e.target.matches(".delete-from-target")){const t=e.target.closest(".target-achiv");pt.target.deleteFromTarget(t)}}));var e,t;e=this.container,t=e=>{pt.target.addAchieveToTarget(e),this.section.querySelector(".achiv-block")?.remove()},new Sortable(e,{group:{name:"cheevos",pull:!1},animation:100,chosenClass:"dragged",onAdd:function(e){const s=e.item.dataset.achivId;t&&t(s)},onEnd:()=>pt.addEvents()}),this.searchInput?.addEventListener("input",this.searchInputEvent)}searchInputEvent(e){e.stopPropagation();[...pt.target.container.querySelectorAll(".target-achiv")].forEach((e=>{const t=e.dataset.achivId,s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");s&&(s.innerText=Et.CHEEVOS[t]?.Description),i&&(i.innerText=Et.CHEEVOS[t]?.Title)})),pt.target.applySort();const t=e.target.value;if(t){(e=>{const t=new RegExp(`(${e})`,"gi");[...pt.target.container.querySelectorAll(".target-achiv")].reverse().forEach((e=>{const s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");i.innerText.match(t)&&(pt.target.moveToTop(s.closest(".target-achiv")),i.innerHTML=i.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`))),s.innerText.match(t)&&(pt.target.moveToTop(s.closest(".target-achiv")),s.innerHTML=s.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`)))}))})(t);const e=document.querySelector(".badge.highlight-badge");e&&e.scrollIntoView({behavior:pt.isCEF?"auto":"smooth",block:"center"})}}setValues(){ct.applyPosition({widget:this}),this.section.classList.toggle("show-events",this.SHOW_EVENTS),this.section.classList.toggle("compact-header",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",this.HIDE_BG),this.section.classList.toggle("hide-passed",this.HIDE_PASSED_LEVELS),this.section.classList.toggle("highlight-passed",this.HIGHLIGHT_PASSED_LEVELS),this.section.classList.toggle("fixed-size",this.IS_FIXED_SIZE),this.section.classList.toggle("show-progression-bar",this.SHOW_UNLOCK_RATE_BAR),this.container.style.setProperty("--max-count",this.FIXED_COUNT),this.startAutoScroll(),this.filters=ut.getUIProperty({sectionID:this.section.id,property:"filters"})??{}}gameChangeEvent(e){this.filters=ut.getUIProperty({sectionID:this.section.id,property:"filters"})??{},this.genreFilter="",this.AUTOCLEAR&&this.clearEarned(),this.AUTOFILL&&this.fillItems()}async updateEarnedAchieves({earnedAchievementIDs:e}){const t=this.container.scrollTop;for(let t of e){const e=Et.CHEEVOS[t],s=this.container.querySelector(`.target-achiv[data-achiv-id='${t}']`);s&&(await ve({container:this.container,element:s}),await w(600),s.classList.add("earned","show-hard-anim"),s.classList.toggle("hardcore",e?.isHardcoreEarned),e.isHardcoreEarned&&(s.dataset.DateEarnedHardcore=e.DateEarnedHardcore),s.dataset.DateEarned=e.DateEarned,setTimeout((()=>s.classList.remove("show-hard-anim")),2e3),await w(2100))}this.container.scrollTo({top:t,behavior:"smooth"}),this.applyFilter(),this.applySort(),this.genreFilter&&this.filterByGenre(this.genreFilter,!0)}autoscrollInterval;startAutoScroll(e=!0){this.stopAutoScroll();let t=this.container,s=1;this.AUTOSCROLL&&(this.autoscrollInterval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!1)),2e3))):(t.scrollTop-=s,0===t.scrollTop&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!0)),2e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval)}isAchievementInTargetSection({ID:e,targetContainer:t=this.container}){return[...t.querySelectorAll(".target-achiv")].filter((t=>t.dataset.achivId==e)).length>0}addAchieveToTarget(e){if(this.isAchievementInTargetSection({ID:e}))return;const t=Et.CHEEVOS[e],s=document.createElement("li");(()=>{s.classList.add("target-achiv","main-column-item","right-bg-icon"),s.classList.toggle("border",this.SHOW_PREV_BORDER),s.classList.toggle("overlay",this.SHOW_PREV_OVERLAY),s.classList.toggle("show-difficult",this.SHOW_DIFFICULT),s.classList.toggle("show-level",this.SHOW_LEVEL),s.classList.toggle("show-genre",this.SHOW_GENRE),s.classList.toggle("earned",t.isEarned),s.classList.toggle("hardcore",t.isHardcoreEarned)})(),s.dataset.type=t.type,s.dataset.Points=t.Points,s.dataset.TrueRatio=t.TrueRatio,s.dataset.difficulty=t.difficulty,s.dataset.DisplayOrder=t.DisplayOrder,s.dataset.genres=t.genres?.join(","),t.DateEarnedHardcore&&(s.dataset.DateEarnedHardcore=t.DateEarnedHardcore),t.DateEarned&&(s.dataset.DateEarned=t.DateEarned),s.dataset.NumAwardedHardcore=t.NumAwardedHardcore,s.dataset.achivId=e,t.level&&(s.dataset.level=t.level),s.style.setProperty("--progression",100*t.NumAwardedHardcore/t.totalPlayers+"%"),(()=>{const i=t.level?.toString()?.split(".")[1],n=t.zone?i?`${t.zone} [${i}]`:t.zone:t.level?.toString()?.replace(".","-"),a=100*t.NumAwardedHardcore/t.totalPlayers;s.innerHTML=`\n            <div class="target__cheevo-progression"></div>\n            <div class="target__buttons-container">\n                <button class="header-button header-icon  target__comments-button edit-cheevo-button edit-icon" data-title="${pt.lang.editPropsHint}" data-cheevo-id="${t.ID}">\n                <button class="header-button header-icon  target__comments-button comments-button chat-icon" data-title="${pt.lang.showCommentsHint}">\n                <button class="header-button header-icon  delete-icon delete-from-target" data-title="${pt.lang.removeFromTargetHint}">\n                </button>\n            </div>\n            </button>\n            <div class="prev">\n                <img\n                class="prev-img"\n                src="${t.prevSrc}"\n                alt="${t.Title}"\n                />\n            </div>\n            <div class="target__cheevo-details">\n                <h3 class="target__cheevo-header">\n                    ${n?T.cheevoLevel(n,!0):""}\n                    ${t.genres.length>0?t.genres?.map((e=>T.buttonGenreBadge(e,`ui.target.filterByGenre('${e}')`))).join(""):""}<a target="_blanc" data-title="${pt.lang.goToRAHint}" href="${P(e)}">\n                        ${t.Title}\n                    </a>\n                </h3>\n                <p class="achiv-description">${t.Description}</p>\n                <div class="target-other-descriptions icons-row-list">\n                    ${y.cheevoType(t.type)}\n                    ${m(t.Points)}\n                    ${u(t.TrueRatio)}\n                    ${p(a,t.rateEarnedHardcore)}\n                    ${_(t.retroRatio)}\n                    ${T.difficultBadge(t.difficulty)}\n                </div>\n            </div>\n            `})(),this.container.appendChild(s),this.isDynamicAdding||(this.applyFilter(),this.applySort()),this.delayedRemove()}refreshCheevo(e){this.container.querySelector(`.target-achiv[data-achiv-id="${e}"]`)?.remove(),this.addAchieveToTarget(e)}moveToTop(e){1==this.REVERSE_SORT?this.container.prepend(e):this.container.append(e),this.applyFilter()}setFilter({filterName:e,state:t,type:s,event:i}){0===t?delete this.filters[e]:this.filters[e]={filterName:e,state:t},ut.saveUIProperty({sectionID:this.section.id,property:"filters",value:this.filters}),this.applyFilter()}applyFilter(){_e({container:this.container,itemClassName:".target-achiv",filters:this.filters,isHide:this.HIDE_FILTERED})}filterByGenre(e,t=!1){(()=>{this.container.querySelectorAll(".hidden").forEach((e=>e.classList.remove("hidden")))})(),!t&&this.genreFilter===e||!e?(this.genreFilter="",this.applyFilter()):(this.genreFilter=e,_e({container:this.container,itemClassName:".target-achiv",filters:{...this.filters,genre:{filterName:te,state:1,genre:e}},isHide:this.HIDE_FILTERED}))}applySort(e={animation:500}){se({container:this.container,itemClassName:".target-achiv",sortMethod:this.SORT_METHOD,reverse:this.REVERSE_SORT,animationDuration:this.IS_GROUPING?0:e.animation})}highlightCurrentLevel(e){[...this.container.querySelectorAll(".target-achiv")].forEach((t=>{t.classList.remove("highlight"),t.classList.remove("passed");const s=t.dataset.level;if(s==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}Number.isInteger(+s)?s<parseInt(e)&&t.classList.add("passed"):s<e&&t.classList.add("passed")}))}deleteFromTarget(e){const t=e.closest(".target-achiv");t?.classList.add("removing"),setTimeout((()=>t?.remove()),0)}clearEarned(){this.container.querySelectorAll(".target-achiv").forEach((e=>{e.classList.contains("hardcore")&&e.remove()}))}clearAllAchivements(){this.container.innerHTML=""}delayedRemove(){this.AUTOCLEAR&&this.container.querySelectorAll(".earned").forEach((e=>{setTimeout((()=>e.remove()),1e3*this.AUTOCLEAR_DELAY)}))}fillItems(){this.isDynamicAdding=!0,this.clearAllAchivements(),Object.keys(Et.CHEEVOS).forEach((e=>{this.addAchieveToTarget(e)})),this.applyFilter(),this.applySort(),this.isDynamicAdding=!1,ut.aotw&&this.container.querySelector(`.target-achiv[data-achiv-id='${ut.aotw?.ID}']`)?.classList.add("target__aotw")}showAotwEvent({cheevo:e}){if(!e||e.wasShown)return;const t=100*e.UnlocksHardcoreCount/e.TotalPlayers;this.section.querySelector(".target__aotw-container")?.remove(),this.container.querySelector(`.target-achiv[data-achiv-id='${e.ID}']`)?.classList.add("target__aotw");const s=document.createElement("div");s.classList.add("target__aotw-container","target__aotw","show-difficult","show-level"),s.innerHTML=`\n        <button class="description-icon close-icon target__hide-aotw" \n          onclick="ui.target.hideAotw()"></button>\n        <div class="prev">\n          <img class="prev-img" src="${D(e.BadgeURL)}" alt=" ">\n        </div>\n        <div class="target__cheevo-details">\n          <h3 class="target__cheevo-header">\n            <a target="_blanc" href="${P(e.ID)}">\n              ${e.Title}\n            </a>\n            in\n            <a target="_blanc" href="${N(e.GameID)}">\n              ${e.GameTitle}\n            </a>\n          </h3>\n          <div class="achiv-description">\n          ${T.black("AotW Event")}\n            ${e.Description}\n          </div>\n          <div class="target-other-descriptions  icons-row-list">\n            ${y.cheevoType(e?.type)}\n            ${m(e.Points)}\n            ${u(e.TrueRatio)}\n            ${p(t,t.toFixed(2)+"%")}\n            ${_((e.TrueRatio/e.Points).toFixed(2))}\n           \n          </div>\n        </div>\n      `,this.section.querySelector(".target__aotw-container")?.remove(),this.section.insertBefore(s,this.container)}hideAotw(){this.section.querySelector(".target__aotw-container")?.remove(),ut.aotw={...ut?.aotw,wasShown:!0}}}function $e(){const e=e=>[{label:"Title",elements:[{type:"text",title:"game title",id:"game-props-title",value:e?.FixedTitle??""}]},{label:"Platform",elements:[{type:"text",title:"game platform",id:"game-props-platform",value:e?.ConsoleName??""}]},{label:"Genre",elements:[{type:"text",title:"game genre",id:"game-props-genre",value:e?.Genre??""}]},{label:"Time played",elements:[{type:"number",title:"time played",id:"game-props-time",value:e?.TimePlayed??0}]},{elements:[{id:"reset-game-props",label:"Reset Data",type:"button"},{id:"save-game-props",label:"Save Data",type:"button"}]}];let t;const s=(e,t)=>{ut.gamesDB[t]=e,ut.writeConfiguration()},i=(e,t)=>{const i=_t.gameData,n=(e=>({FixedTitle:e.querySelector("#game-props-title")?.value,ConsoleName:e.querySelector("#game-props-platform")?.value,Genre:e.querySelector("#game-props-genre")?.value,TimePlayed:Number(e.querySelector("#game-props-time")?.value??0)}))(e);Object.getOwnPropertyNames(n).forEach((e=>{Et.GAME_DATA[e]=n[e],n[e]==i[e]&&delete n[e]})),s(n,t.ID),Et.reset()},n=(e,n)=>{e.querySelector("#save-game-props")?.addEventListener("click",(()=>i(e,n))),e.querySelector("#reset-game-props")?.addEventListener("click",(()=>(async(e,i)=>{const n=_t.gameData;Et.GAME_DATA.FixedTitle=n.FixedTitle,Et.GAME_DATA.ConsoleName=n.ConsoleName,Et.GAME_DATA.Genre=n.Genre,s({TimePlayed:Et.GAME_DATA.TimePlayed},i.ID),Et.reset(),t?.section?.remove(),a(n)})(0,n)))},a=s=>{var i;t=new Ae({title:s?.FixedTitle,content:(i=e(s),`\n    <ul class="game-props__list flex-column-list">\n      ${i.map((e=>`\n          <li class="game-props__item">${e.label??""}\n              ${e.elements.map((e=>Ne(e))).join("\n")}\n          </li>\n      `)).join("\n")}\n    </ul>`),id:"game-data-popup",classList:["game-data__section"]}),n(t.section,s)};return{open:a}}function ke({container:e,textGenerator:t}){const s=e=>`<p class="infinite-line">${e}</p>`;let i;const n=()=>{i&&clearInterval(i),e.innerHTML=""};return{startScrolling:()=>{n(),(()=>{for(;e.scrollWidth/e.offsetWidth<2||e.querySelectorAll("p").length<3;)e.innerHTML+=s(t())})(),i=setInterval((()=>{e.scrollLeft++,(e=>e.scrollLeft)(e)+e.offsetWidth>=e.scrollWidth&&(e.querySelector(".infinite-line").remove(),e.scrollTo(e.scrollWidth,0),e.innerHTML+=s(t()))}),40)},stopScrolling:n}}function xe(){const e={...Et.GAME_DATA?.earnedStats,user:ut?.targetUser,...Object.fromEntries(Object.entries(Et.GAME_DATA).filter((([e,t])=>null===t||"object"!=typeof t)))},t="&nbsp;&nbsp;&middot;&nbsp;&nbsp;\n    ",s=`retrocheevos.vercel.app${t}`,i=`\n        ${e.user} is playing ${e.FixedTitle}${t}`,n=Et.GAME_DATA?[e.ConsoleName&&`Console: ${e.ConsoleName},`,e.Released&&`Released: ${e.Released},`,e.Developer&&`Developer: ${Et.Developer},`,e.Publisher&&`Publisher: ${e.Publisher},`,e.Genre&&`Genre: ${e.Genre},`,e.NumDistinctPlayersCasual&&`Total RA Players: ${e.NumDistinctPlayersCasual},`,e.beatenRate&&`Beaten Rate: ${e.beatenRate}% (${e.beatenSoftRate}%),`,e.masteryRate&&`Mastery Rate: ${e.masteryRate}% (${e.completedRate}%),`,e.retroRatio&&`Retro Ratio: ${e.retroRatio},`,e.gameDifficulty&&`Game Difficulty: ${l[e.gameDifficulty]} (${l[e.masteryDifficulty]})`,t].join("&nbsp;"):"Game ERROR",a=["Completion Progress: ",`${e.hard.count>0?e.hard.count+"/":""}${e.soft.count>e.hard.count?e.soft.count-e.hard.count+"/":""}${e.NumAchievements} achievements, `,`${e.hard.points>0?e.hard.points+"/":""}${e.soft.points>e.hard.points?e.soft.points-e.hard.points+"/":""}${e.totalPoints} points, `,`${e.hard.retropoints?e.hard.retropoints+"/":""}${e.TotalRetropoints} retropoints${t}`].join(" "),o=!!pt.statusPanel?.deltaStats?.deltaPoints,r=!!pt.statusPanel?.deltaStats,c=o?`${pt.statusPanel.deltaStats.deltaPoints} hardpoints and ${pt.statusPanel.deltaStats.deltaRetroPoints} retropoints`:`and ${pt.statusPanel?.deltaStats?.deltaSoftPoints} softpoints`,h=r?`Session statistics: +${pt.statusPanel.initialStats.cheevosCount} achievements, ${c}${t}`:"",d=pt.statusPanel?.currentStats||pt.statusPanel?.initialStats;return i+n+a+h+(d?`User statistics: position ${d?.rank} in RA rank system (TOP${d?.percentile.toFixed(2)}%), \n        ${d?.points} total hardpoints, \n        ${d?.retroPoints} total retropoints and\n        ${d?.softPoints} total softpoints\n        ${t}`:"")+s}class Me extends z{widgetIcon={description:"status widget",iconID:"side-panel__status",onChangeEvent:"ui.statusPanel.VISIBLE = this.checked",badgeLabel:"v1",iconClass:"status-icon"};get contextMenuItems(){return[{label:pt.lang.gameTime,elements:[{type:"checkbox",name:"context_show-time",id:"context_show-time",label:pt.lang.showTimeBar,checked:this.SHOW_TIME_BAR,event:'onchange="ui.statusPanel.SHOW_TIME_BAR = this.checked;"'},{type:"radio",name:"context_game-time",id:"context_show-playTime",label:pt.lang.gameTime,checked:"playTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'playTime';\""},{type:"radio",name:"context_game-time",id:"context_show-sessionTime",label:pt.lang.sessionGameTime,checked:"sessionTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'sessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-full-time",label:pt.lang.totalTime,checked:"totalSessionTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'totalSessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-timer",label:pt.lang.timer,checked:"timer"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'timer';\""},{prefix:pt.lang.timer,postfix:pt.lang.min,type:"input-number",id:"context-menu_stats-timer-duration",label:pt.lang.timer,value:~~(this.TIMER_TIME/60*100)/100,event:'onchange="ui.statusPanel.TIMER_TIME = this.value;"',onChange:"ui.statusPanel.TIMER_TIME = this.value;"}]},{label:pt.lang.elements,elements:[{type:"checkbox",name:"context_show-target-preview",id:"context_show-target-preview",label:pt.lang.focusCheevoPreview,checked:this.SHOW_TARGET_PREVIEW,event:'onchange="ui.statusPanel.SHOW_TARGET_PREVIEW = this.checked;"'},{type:"radio",name:"context_description-variant-radio",id:"context_show-progression-description",label:pt.lang.progression,checked:"progression"===this.STATUS_DESCRIPTION_VARIANT,event:"onchange=\"ui.statusPanel.STATUS_DESCRIPTION_VARIANT = 'progression';\""},{type:"radio",name:"context_description-variant-radio",id:"context_show-game-info-description",label:pt.lang.richPresence,checked:"gameInfo"===this.STATUS_DESCRIPTION_VARIANT,event:"onchange=\"ui.statusPanel.STATUS_DESCRIPTION_VARIANT = 'gameInfo';\""},{type:"checkbox",name:"context_show-mastery-rate",id:"context_show-mastery-rate",label:pt.lang.showMasteryRate,checked:this.SHOW_MASTERY_RATE,event:'onclick="ui.statusPanel.SHOW_MASTERY_RATE = this.checked;"'}]},{label:pt.lang.progressionStyleTypes,elements:[{type:"radio",name:"context_progression-variant",id:"context_progression-variant-dots",label:pt.lang.dots,checked:"dots"===this.PROGRESSION_VARIANT,event:"onchange=\"ui.statusPanel.PROGRESSION_VARIANT = 'dots';\""},{type:"radio",name:"context_progression-variant",id:"context_progression-variant-rects",label:pt.lang.rects,checked:"rects"===this.PROGRESSION_VARIANT,event:"onchange=\"ui.statusPanel.PROGRESSION_VARIANT = 'rects';\""}]},{label:pt.lang.alerts,elements:[{type:"checkbox",name:"context_show-new-cheevos",id:"context_show-new-cheevos",label:pt.lang.showAlerts,checked:this.SHOW_NEW_ACHIV,event:'onchange="ui.statusPanel.SHOW_NEW_ACHIV = this.checked;"'},{prefix:pt.lang.duration,postfix:pt.lang.sec,type:"input-number",id:"context-menu_stats-earned-duration",label:pt.lang.duration,value:this.NEW_ACHIV_DURATION,event:'onchange="ui.statusPanel.NEW_ACHIV_DURATION = this.value;"',onChange:"ui.statusPanel.NEW_ACHIV_DURATION = this.value;"},{type:"checkbox",name:"context_show-stats-alert",id:"context_show-stats-alert",label:pt.lang.statsAlerts,checked:this.SHOW_STATISTICS_ALERT,event:'onchange="ui.statusPanel.SHOW_STATISTICS_ALERT = this.checked;"'}]},{type:"checkbox",name:"context_show-update-blink",id:"context_show-update-blink",label:pt.lang.showUpdateBlink,checked:this.BLINK_ON_UPDATE,event:'onchange="ui.statusPanel.BLINK_ON_UPDATE = this.checked;"'},{type:"checkbox",name:"context_hard-mode",id:"context_hard-mode",label:pt.lang.hardcoreMode,checked:this.IS_HARD_MODE,event:'onchange="ui.statusPanel.IS_HARD_MODE = this.checked; ui.statusPanel.generateProgressionBlock()"'},{type:"checkbox",name:"context_game-bg",id:"context_game-bg",label:pt.lang.gameBg,checked:this.SHOW_GAME_BG,event:'onchange="ui.statusPanel.SHOW_GAME_BG = this.checked;"'}]}get SHOW_TIME_BAR(){return ut.getUIProperty({sectionID:this.section.id,property:"showTimeBar"})??!0}set SHOW_TIME_BAR(e){ut.saveUIProperty({sectionID:this.section.id,property:"showTimeBar",value:e}),this.setElementsValues()}get IS_HARD_MODE(){return ut.getUIProperty({sectionID:this.section.id,property:"hardMode"})??!0}set IS_HARD_MODE(e){ut.saveUIProperty({sectionID:this.section.id,property:"hardMode",value:e})}get BLINK_ON_UPDATE(){return ut.ui.update_section?.showUpdateBlink??!0}set BLINK_ON_UPDATE(e){ut.ui.update_section.showUpdateBlink=e,ut.writeConfiguration()}get SHOW_TICKER(){return!1}set SHOW_TICKER(e){ut.ui.update_section.showTicker=e,ut.writeConfiguration(),this.setElementsValues(),this.SHOW_TICKER?this.infiniteLine.startScrolling():this.infiniteLine.stopScrolling()}get SHOW_RP(){return!1}set SHOW_RP(e){ut.ui.update_section.showRP=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_HP(){return!1}set SHOW_HP(e){ut.ui.update_section.showHP=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_SP(){return!1}set SHOW_SP(e){ut.ui.update_section.showSP=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_STATISTICS_ALERT(){return ut.ui.update_section?.showStatisticsAlert??!0}set SHOW_STATISTICS_ALERT(e){ut.ui.update_section.showStatisticsAlert=e,ut.writeConfiguration()}get SHOW_CHEEVOS(){return!1}set SHOW_CHEEVOS(e){ut.ui.update_section.showCheevos=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_PROGRESSION(){return!1}set SHOW_PROGRESSION(e){ut.ui.update_section.showProgression=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_PLATFORM(){return!0}set SHOW_PLATFORM(e){ut.ui.update_section.showPlatform=e,ut.writeConfiguration(),this.setElementsValues()}get SHOW_RICH_PRESENCE(){return!0}set SHOW_RICH_PRESENCE(e){ut.ui.update_section.showRichPresence=e,ut.writeConfiguration(),this.setElementsValues()}get STATS_DURATION(){const e=ut.ui.update_section?.statsDuration??30;return e<5?5:e}set STATS_DURATION(e){ut.ui.update_section.statsDuration=e,ut.writeConfiguration(),this.startStatsAnimation()}get SHOW_NEW_ACHIV(){return ut.ui.update_section?.showNewAchiv??!0}set SHOW_NEW_ACHIV(e){ut.ui.update_section.showNewAchiv=e,ut.writeConfiguration()}get CHANGE_PROGRESS_AUTO(){return"auto"==ut.ui.update_section?.progressBarPropertyName}get PROGRESSBAR_PROPERTY_NAME(){return ut.ui.update_section?.progressBarPropertyName??"auto"}set PROGRESSBAR_PROPERTY_NAME(e){ut.ui.update_section.progressBarPropertyName=e,ut.writeConfiguration(),this.setProgressBarValue()}get NEW_ACHIV_DURATION(){const e=ut.ui.update_section?.newAchivDuration??15;return e<5?5:e}set NEW_ACHIV_DURATION(e){ut.ui.update_section.newAchivDuration=e,ut.writeConfiguration()}get AUTOSCROLL_RICHPRESENCE(){return!0}get SHOW_GAME_PREV_BORDER(){return!1}set SHOW_GAME_PREV_BORDER(e){ut.ui.update_section.showGamePrevBorder=e,ut.writeConfiguration(),this.container.classList.toggle("game-border",e)}get SHOW_GAME_RATIO(){return!1}set SHOW_GAME_RATIO(e){this.SHOW_GAME_RATIO&&e?(e=!1,document.getElementById("context_show-game-ratio").checked=!1):ut.ui.update_section.showMasteryRate=!e,ut.ui.update_section.showGameRatio=e,ut.writeConfiguration(),this.setElementsValues()}get SHOW_MASTERY_RATE(){return ut?.ui?.update_section?.showMasteryRate??!1}set SHOW_MASTERY_RATE(e){this.SHOW_MASTERY_RATE&&e?(e=!1,document.getElementById("context_show-mastery-rate").checked=!1):ut.ui.update_section.showGameRatio=!e,ut.ui.update_section.showMasteryRate=e,ut.writeConfiguration(),this.setElementsValues()}get SHOW_TIME(){return ut.ui.update_section?.time??"playTime"}set SHOW_TIME(e){ut.ui.update_section.time=e,ut.writeConfiguration(),this.startStatsAnimation()}get TIMER_TIME(){return ut.ui.update_section?.timerTime??2}set TIMER_TIME(e){e<=0&&(e=1),e>1440&&(e=1440),ut.ui.update_section.timerTime=60*e,ut.writeConfiguration(),this.timerTime=this.TIMER_TIME,this.startStatsAnimation()}get STATUS_DESCRIPTION_VARIANT(){return ut?.ui?.update_section?.statusDescriptionVariant??"gameInfo"}set STATUS_DESCRIPTION_VARIANT(e){const t={gameInfo:"show-game-info",progression:"show-game-progress"};ut.ui.update_section.statusDescriptionVariant=e,ut.writeConfiguration(),Object.values(t).forEach((e=>this.section.classList.remove(e))),this.section.classList.add(t[e])}get SHOW_TARGET_PREVIEW(){return ut.ui.update_section?.showTargetPreview??!1}set SHOW_TARGET_PREVIEW(e){ut.ui.update_section.showTargetPreview=e,ut.writeConfiguration(),this.generateProgressionBlock()}get SHOW_GAME_BG(){return ut.ui.update_section?.showGameBg??!0}set SHOW_GAME_BG(e){ut.ui.update_section.showGameBg=e,ut.writeConfiguration(),this.container.classList.toggle("game-bg",this.SHOW_GAME_BG)}get PROGRESSION_VARIANT(){return ut.ui.update_section?.progressionVariant??"dots"}set PROGRESSION_VARIANT(e){ut.ui.update_section.progressionVariant=e,ut.writeConfiguration(),this.generateProgressionBlock()}stats={userName:ut.targetUser,gameTitle:Et.GAME_DATA?.Title??"Title",gamePlatform:Et.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:D(Et.GAME_DATA?.ImageIcon),totalPoints:Et.GAME_DATA?.totalPoints??0,totalAchievesCount:Et.GAME_DATA?.NumAchievements??0,totalSoftpoints:0,earnedPoints:0,earnedAchievesCount:0,totalRetropoints:Et.GAME_DATA?.TotalRetropoints,earnedRetropoints:0,earnedSoftpoints:0};awards={award:"",progressionAward:""};timerTime=this.TIMER_TIME;gameTimeInterval;getActiveTime=()=>{let e=0;switch(this.SHOW_TIME){case"playTime":e=Et.playTime.totalGameTime;break;case"sessionTime":e=Et.playTime.gameTime;break;case"totalSessionTime":e=Et.playTime.sessionTime,e=e<0?0:e;break;case"timer":e=this.TIMER_TIME-Et.playTime.gameTime}return o(e,!0)};get statusTextValues(){const e={};return this.SHOW_HP&&(e.progressionInPointsStats=`${this.stats.earnedPoints}/${this.stats.totalPoints} HP`),this.SHOW_CHEEVOS&&(e.cheevosStats=`${this.stats.earnedAchievesCount}/${this.stats.totalAchievesCount} CHEEVOS`),this.SHOW_PROGRESSION&&(e.cheevosStats=`${this.stats.earnedProgressionCount}/${this.stats.totalProgressionCount} STEPS`),this.SHOW_RP&&(e.retroPointsStats=`${this.stats.earnedRetropoints}/${this.stats.totalRetropoints} RP`),this.SHOW_SP&&(e.softPointsStats=`${this.stats.earnedSoftpoints}/${this.stats.totalPoints-this.stats.earnedPoints} SP`),this.SHOW_TIME&&(e.gameTime=this.getActiveTime()),e}constructor(){super(),this.addWidgetIcon(),!ut.ui.update_section&&(ut.ui.update_section={}),this.initializeElements(),this.addEvents(),ct.applyPosition({widget:this}),this.infiniteLine=ke({container:this.section.querySelector("#magic-line"),textGenerator:xe}),setTimeout((()=>{this.fitFontSize()}),1e3)}initializeElements(){this.section=document.querySelector("#update-section"),this.container=this.section.querySelector(".status__container"),this.guideLink=this.section.querySelector("#status-game-guide"),this.progresBar=this.section.querySelector("#status-progress-bar"),this.progresBarDelta=this.section.querySelector("#status_progress-bar-delta"),this.progressStatusText=this.section.querySelector("#status-progress-text"),this.resizer=this.section.querySelector("#status-resizer"),this.frontSide={container:this.section.querySelector(".status__front-side"),gamePreview:this.section.querySelector("#game-preview"),retroRatioElement:this.section.querySelector(".status__retro-ratio"),gameTitle:this.section.querySelector("#game-title"),gamePlatform:this.section.querySelector("#game-platform"),richPresence:this.section.querySelector("#rich-presence"),watchButton:this.section.querySelector("#watching-button"),sideBlock:this.section.querySelector(".status__sideblock-container"),iconsContainer:this.section.querySelector("#status__sideblock-icons")},this.backSide={container:this.section.querySelector(".status__back-side"),imgElement:this.section.querySelector("#update_achiv-preview"),titleElement:this.section.querySelector("#update_achiv-title"),descriptionElement:this.section.querySelector("#update_achiv-description"),badgesElement:this.section.querySelector("#update_achiv-earned-points")}}setElementsValues(){this.STATUS_DESCRIPTION_VARIANT=this.STATUS_DESCRIPTION_VARIANT,this.progressStatusText.innerText="";const e=Et.GAME_DATA.ImageIngame;this.container.style.setProperty("--bg-image",`url(${D(e)})`),(()=>{this.container.classList.toggle("game-border",this.SHOW_GAME_PREV_BORDER),this.container.classList.toggle("show-game-ratio",this.SHOW_GAME_RATIO||this.SHOW_MASTERY_RATE),this.container.classList.toggle("game-bg",this.SHOW_GAME_BG),this.container.classList.toggle("show-ticker",this.SHOW_TICKER),this.container.classList.toggle("show-time-bar",this.SHOW_TIME_BAR),this.frontSide.gamePlatform.classList.toggle("hidden",!this.SHOW_PLATFORM),this.frontSide.richPresence.classList.toggle("hidden",!this.SHOW_RICH_PRESENCE)})(),(()=>{const e=Et.GAME_DATA.retroRatio,t=Et.GAME_DATA.masteryRate;this.frontSide.retroRatioElement.innerText=this.SHOW_MASTERY_RATE?t:e,this.frontSide.retroRatioElement.className=`status__retro-ratio difficult-badge__${Et.GAME_DATA.gameDifficulty}`})(),(()=>{const{ImageIcon:e,FixedTitle:t,ConsoleName:s,ConsoleID:i,badges:n,ID:a,GuideURL:o}=Et.GAME_DATA,{gamePreview:r,gameTitle:c,gamePlatform:l,richPresence:d}=this.frontSide;r.setAttribute("src",D(e)),c.innerHTML=`\n                <a target="_blank" class="status__game-title" href="${N(a)}">${t}</a>\n                ${f(n)} \n                ${f([h[i||1]])}\n\n            `,setTimeout((()=>{this.startAutoScrollElement(c,!0,6e4),this.startAutoScrollElement(d,!0,6e4)}),1e4),this.guideLink.setAttribute("href",o),this.guideLink.classList.toggle("hidden",!o),l.innerText=s||"",this.generateProgressionBlock()})(),this.fillSidebarIcons(),this.setProgressBarValue(),this.startStatsAnimation(),this.SHOW_TICKER&&this.infiniteLine.startScrolling()}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".resizer")?(e.stopPropagation(),this.section.classList.add("resized"),j({event:e,section:this.section,callback:()=>this.fitFontSize(!0)})):e.target.matches(".status__watch-button")?(e.stopPropagation(),Et.isActive?Et.stop():Et.start()):e.target.matches(".comments-button")?(e.stopPropagation(),ye(Et.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),$e().open(Et.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):q(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{pt.showContextmenu({event:e,menuItems:this.contextMenuItems})}))}fillSidebarIcons(){const e=this.IS_HARD_MODE?{...Et.GAME_DATA.earnedStats.hard}:{...Et.GAME_DATA.earnedStats.soft};this.frontSide.iconsContainer.innerHTML=`\n            <p class="signed-icon auto-font-size" data-title="${pt.lang.cheevosCount}">\n                ${y.cheevos}\n                ${e.count}/${Et.GAME_DATA.NumAchievements}\n            </p>\n\n            <p class="signed-icon auto-font-size" data-title="${pt.lang.points}">\n                ${y.points}\n                ${e.points}/${Et.GAME_DATA.totalPoints}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="${pt.lang.trueRatio}">\n                ${y.trueratio}\n                ${Et.GAME_DATA.retroRatio}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="${pt.lang.retropoints}">\n                ${y.retropoints}\n                ${e.retropoints}/${Et.GAME_DATA.TotalRetropoints}\n            </p>\n        `}updateGameData(e=!1){this.stats={userName:ut.targetUser,gameTitle:Et.GAME_DATA?.FixedTitle??"Title",gamePlatform:Et.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:D(Et.GAME_DATA?.ImageIcon),totalPoints:Et.GAME_DATA?.totalPoints??0,totalSoftPoints:Et.GAME_DATA.totalPoints-Et.GAME_DATA.earnedStats.soft.points,totalAchievesCount:Et.GAME_DATA?.NumAchievements??0,totalProgressionCount:Et.GAME_DATA?.progressionSteps,earnedPoints:Et.GAME_DATA.earnedStats.hard.points,earnedAchievesCount:Et.GAME_DATA.earnedStats.hard.count,earnedProgressionCount:Et.GAME_DATA.earnedStats.soft.progressionCount,totalRetropoints:Et.GAME_DATA?.TotalRetropoints,earnedRetropoints:Et.GAME_DATA.earnedStats.hard.retropoints,earnedSoftpoints:Et.GAME_DATA.earnedStats.soft.points-Et.GAME_DATA.earnedStats.hard.points},e&&(this.awards.award=Et.GAME_DATA.award,this.awards.progressionAward=Et.GAME_DATA.progressionAward)}gameChangeEvent(e=!1){e&&Et.IS_WATCHING&&this.addAlertsToQuery([{type:C.game,value:Et.GAME_DATA}]),this.updateGameData(!0),this.setElementsValues()}timeWatcher(){this.frontSide.watchButton.classList.toggle("active",Et.isActive),this.section.classList.toggle("watching",Et.IS_ONLINE&&Et.isActive);return{start:()=>{pt.statusPanel.timeWatcher().stop(),this.gameTimeInterval=setInterval((()=>{"timer"===this.SHOW_TIME&&Et.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval)}}}setProgressBarValue(){let e=0;switch(this.PROGRESSBAR_PROPERTY_NAME){case"points":e=this.stats.earnedPoints/Et.GAME_DATA?.totalPoints;break;case"retropoints":e=this.stats.earnedRetropoints/Et.GAME_DATA?.TotalRetropoints;break;case"achives":e=this.stats.earnedAchievesCount/Et.GAME_DATA?.NumAchievements;break;case"progression":e=this.stats.earnedProgressionCount/Et.GAME_DATA?.progressionSteps;break;case"softpoints":e=this.stats.earnedSoftpoints/this.stats.totalSoftPoints}this.section.style.setProperty("--progress-points",100*(e||0)+"%")}generateProgressionBlock(){const e=this.section.querySelector(".status__progression-container"),t=this.section.querySelector(".status__description-text"),s=e=>this.IS_HARD_MODE?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",i={dots:()=>{const e=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.PROGRESSION)).sort(((e,t)=>ne.default(e,t))),t=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.WIN));return e.reduce(((e,t)=>e+=`\n                            <div class="progression-point progression-point__dot  ${s(t)}" data-achiv-id=${t.ID}></div>\n                        `),"")+(t?.length>0?`\n                        <div class="win-points win-points__dots">\n                            ${t.reduce(((e,t)=>e+=`\n                                <div class="progression-point progression-point__dot-win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                         </div>\n                        `:"")},rects:()=>{const e=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.PROGRESSION)).sort(((e,t)=>ne.default(e,t))),t=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.WIN));return e.reduce(((e,t)=>e+=`\n                        <div class="rp__progression-point ${s(t)}" data-achiv-id=${t.ID}></div>\n                    `),"")+(t?.length>0?`\n                    <div class="rp__win-points">\n                        ${t.reduce(((e,t)=>e+=`\n                                <div class="rp__progression-point win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                     </div>\n                    `:"")}},n=Object.values(Et.CHEEVOS).filter((e=>K.progression(e))).sort(((e,t)=>ne.default(e,t))).find((e=>!s(e)));e.classList.remove("progression-points__dots","progression-points__rects"),e.classList.add(`progression-points__${this.PROGRESSION_VARIANT}`),e.innerHTML=i[this.PROGRESSION_VARIANT](),t.innerHTML=n?n.Description:Et.GAME_DATA?.progressionAward?pt.lang.gameBeatenMsg:pt.lang.noProgressionMsg;const a=e.querySelector(`[data-achiv-id="${n?.ID}"`);a?.scrollIntoView({behavior:"smooth",block:"end",inline:"center"}),a?.classList.add("focus"),this.frontSide.gamePreview.src=this.SHOW_TARGET_PREVIEW&&n?L(n?.BadgeName):D(Et.GAME_DATA.ImageIcon)}updateProgress({earnedAchievementIDs:e}){e.length>0&&(this.IS_HARD_MODE=!!Et.CHEEVOS[e[0]].isHardcoreEarned),this.updateGameData(),this.generateProgressionBlock(),this.fillSidebarIcons(),this.progresBarDelta?.classList.remove("hidden"),setTimeout((()=>this.progresBarDelta?.classList.add("hidden")),50),this.initialStats&&(this.initialStats.cheevosCount+=e.length)}initialStats;currentStats;deltaStats;updateStatistics({userSummary:e}){function t(e){return 0==e?"":(e>0?"+":"")+e}if(this.initialStats){this.currentStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked};const s=this.currentStats.rank-this.initialStats.rank,i=(this.currentStats.percentile-this.initialStats.percentile).toFixed(3),n={deltaPoints:t(this.currentStats.points-this.initialStats.points),deltaRetroPoints:t(this.currentStats.retroPoints-this.initialStats.retroPoints),deltaSoftPoints:t(this.currentStats.softPoints-this.initialStats.softPoints),deltaRank:t(s),deltaPercentile:t(i)};this.deltaStats=n;const a={type:C.stats,value:{...this.currentStats,...n,cheevosCount:this.initialStats.cheevosCount}};!this.alertsQuery.find((e=>e.type===C.stats))&&this.addAlertsToQuery([a]),pt.status.addAlertsToQuery([a]),this.SHOW_TICKER&&this.infiniteLine.startScrolling(),this.infiniteLine.startScrolling()}else this.initialStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked,cheevosCount:0},this.currentStats=this.initialStats}alertsQuery=[];addAlertsToQuery(e){this.SHOW_NEW_ACHIV&&(this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts()))}async startAlerts(){const e=()=>{this.container.classList.remove("new-game-info","new-achiv","new-award","stats","beaten","mastered"),this.backSide.container.classList.remove("hardcore","beaten","mastered","beaten-softcore","completed")},t=()=>{const e=this.section.querySelector(".status_glass-effect");e.classList.remove("update"),setTimeout((()=>e.classList.add("update")),20)},s=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:c,beatenRate:l}=e;this.backSide.imgElement.src=D(i),this.backSide.titleElement.innerHTML=`${t} ${f(s)}\n            <i class="badge">${a}</i>\n            `;let h=`\n                ${I(y.cheevos+r)}\n                ${I(y.points+n)}\n                ${I(y.retropoints+o)}\n                ${I(c+"% MASTERED")}\n                ${I(l+"% BEATEN")}\n            `;this.backSide.descriptionElement.innerText="",this.backSide.badgesElement.innerHTML=h,this.container.classList.add("new-game-info")},i=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:c}=e;this.backSide.imgElement.src=i,this.backSide.titleElement.innerHTML=s,this.backSide.descriptionElement.innerText=e.Description;let l=t?`\n                    ${I(y.points+" +"+n)}\n                    ${I(y.retropoints+" +"+a)}\n                    ${I("TOP"+r)}\n                    ${T.difficultBadge(c)}\n                `:`\n                    ${I(y.points+" +"+n)}\n                    ${I("TOP"+o)}\n                    ${T.difficultBadge(c)}\n                `,h=e.genres?.map((e=>I(e))).join("\n")??"";this.backSide.badgesElement.innerHTML=h+l,this.backSide.container.classList.toggle("hardcore",e.isHardcoreEarned),setTimeout((()=>this.container.classList.add("new-achiv")),2e3)},n=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:c,beatenRate:l,completedRate:h,beatenSoftRate:d,ID:g,NumAchievements:m,TimePlayed:u}=e,p="mastered"==t?c:"beaten"==t?l:"completed"==t?h:d,_=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(u);this.backSide.imgElement.src=D(n),this.backSide.titleElement.innerHTML=`${s} ${f(i)}\n                ${I("GAINED AWARD")}\n            `;let E=`\n                ${I(`${t} IN ${_}`)}\n                ${I(`TOP${p}%`)}\n                ${I(`${y.cheevos}${o.hard.count}/${m}`)}\n                ${I(`${y.points}${o.hard.points}/${a}`)}\n                ${I(`${y.retropoints}${o.hard.retropoints}/${r}`)}\n            `;this.backSide.badgesElement.innerHTML=E,this.backSide.descriptionElement.innerText="",this.backSide.container.classList.add(t),setTimeout((()=>this.container.classList.add("new-award")),1e3)},a=e=>{this.backSide.imgElement.src=ut.userImageSrc,this.backSide.titleElement.innerHTML=`\n                ${ut.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${I(`Rank: ${e.rank} ${e.deltaRank}`)}\n                ${I(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`)}\n                ${I(`${y.cheevos} +${e.cheevosCount}`)}\n                ${I(`${y.points}${e.points} ${e.deltaPoints}`)}\n                ${I(`${y.retropoints}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${I(`${y.points}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.backSide.badgesElement.innerHTML=t,this.backSide.descriptionElement.innerText="",this.container.classList.add("stats")},o=t=>{switch(e(),t.type){case C.game:s(t.value);break;case C.cheevo:i(t.value);break;case C.award:n(t.value,t.award);break;case C.stats:a(t.value)}};for(;this.alertsQuery.length>0;){const e=this.alertsQuery[0];if(!e.value)return void this.alertsQuery.shift();const s=()=>{o(e),this.container.classList.add("show-back"),t(),setTimeout((()=>{this.startAutoScrollElement(this.backSide.titleElement),this.startAutoScrollElement(this.backSide.badgesElement)}),2e3)},i=()=>{this.container.classList.remove("show-back"),this.alertsQuery.shift(),this.stopAutoScrollElement(this.backSide.badgesElement,!0),this.stopAutoScrollElement(this.backSide.titleElement,!0)};await w(1e3),s(),await w(1e3*this.NEW_ACHIV_DURATION),i()}}statsAnimationInterval;startStatsAnimation(){this.stopStatsAnimation(),this.section.classList.remove("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e,this.frontSide.sideBlock.classList.toggle("long-time",e.length>6))}stopStatsAnimation(){clearInterval(this.statsAnimationInterval),this.currentStatusTextIndex=0}changeStatsElementValues({className:e,text:t}){this.progressStatusText.innerText=t,this.progressStatusText.className=`status__big-text ${e}`,this.CHANGE_PROGRESS_AUTO&&"gameTime"!=e&&this.section.style.setProperty("--progress-points",this.convertToPercentage(t)||"0%")}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};this.autoscrollAlertInterval[i].interval=setInterval((()=>{e.clientWidth==e.scrollWidth?(this.stopAutoScrollElement(e,!0),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(e.scrollLeft++,e.scrollWidth-e.scrollLeft<=e.clientWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),5e3))):(e.scrollLeft--,e.scrollLeft<=0&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0),clearInterval(this.autoscrollAlertInterval[e.className].interval),clearTimeout(this.autoscrollAlertInterval[e.className].timeout)}convertToPercentage(e){const t=e.split("/");return(parseInt(t[0],10)/parseInt(t[1],10)*100).toFixed(2)+"%"}fitFontSize(e=!1){const t=this.section.querySelector(".status__container");let s=ut.ui["update-section"]?.height??this.section.getBoundingClientRect().height;e&&(s=this.section.getBoundingClientRect().height);const i=(parseInt(s)-10)/5.5+"px";t.style.fontSize=i}blinkUpdate(){this.section.classList.remove("offline","blink"),this.BLINK_ON_UPDATE&&Et.IS_ONLINE?(this.section.classList.add("blink"),setTimeout((()=>this.section.classList.remove("blink","offline")),1e3)):Et.IS_ONLINE||this.section.classList.add("offline")}}class Ge{get VISIBLE(){return!this.section.classList.contains("hidden")}constructor(){this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=document.querySelector("#side_panel"),this.header=this.section.querySelector("#buttons-header_container"),this.settings=this.section.querySelector("#open-settings-button"),this.achievements=this.section.querySelector("#open-achivs-button"),this.gameCard=this.section.querySelector("#open-game-card-button"),this.target=this.section.querySelector("#open-target-button"),this.status=this.section.querySelector("#open-status-button"),this.awards=this.section.querySelector("#open-awards-button"),this.games=this.section.querySelector("#open-games-button"),this.progression=this.section.querySelector("#open-progression-button"),this.userImage=this.section.querySelector("#side-panel-user-image"),this.note=this.section.querySelector("#open-note-button"),this.notifications=this.section.querySelector("#open-notifications-button"),this.user=this.section.querySelector("#open-user-button"),this.stats=this.section.querySelector("#open-stats-button")}addEvents(){this.sidePanel=document.querySelector("#side_panel"),setTimeout((()=>pt.buttons.section.classList.remove("expanded")),2e3),document.addEventListener("touchstart",(e=>this.touchVisibilityHandler(e))),this.settings.addEventListener("click",(e=>{const t=document.querySelector("#settings_section");t?t.remove():pt.settings.openSettings()}))}setValues(){this.userImage.src=ut.userImageSrc}show(){this.section.classList.add("expanded"),this.section.addEventListener("mouseleave",(()=>{setTimeout((()=>this.section.classList.remove("expanded")),200)}))}touchVisibilityHandler(e){e.touches[0].clientX<50&&(this.section.classList.add("expanded"),this.section.addEventListener("blur",(e=>{setTimeout((()=>pt.buttons.section.classList.remove("expanded")),0)})))}generatePanel(){const e=document.createElement("section");e.id="side_panel",e.classList.add("buttons-block","expanded")}}const We=e=>{const t=e.target,s=+t.dataset.state,i=1===s?-1:s+1,n=t.dataset.value;t.dataset.state=i,t.dataset.event&&new Function("event","state","filterName",t.dataset.event)(e,i,n)},Ue=Object.freeze({en:"en",ua:"ua",br:"br"}),Be=(e=Ue.en)=>{const t=Object.keys(Ue).includes(e)?e:Ue.en;return`./json/lang/${Ue[t]}.json`};class Fe extends z{widgetIcon={iconClass:"settings-icon"};get settingsItems(){return[{label:pt.lang.style,elements:[{type:"select",label:pt.lang.selectColors,id:"settings_colors-selector",selectValues:[...Object.keys(i).map((e=>({type:"radio",name:"settings_color-scheme",id:`settings_color-scheme-${e}`,label:e,checked:pt.settings.COLOR_SCHEME===e,event:`onchange="ui.settings.COLOR_SCHEME = '${e}'"`}))),{type:"radio",name:"settings_color-scheme",id:"settings_color-scheme-custom",label:"custom",checked:"custom"===pt.settings.COLOR_SCHEME,event:"onchange=\"ui.settings.COLOR_SCHEME = 'custom'\""}]},{type:"checkbox",label:pt.lang.showBgAnimation,id:"settings_show-bg",onChange:"ui.settings.BG_ANIMATION = this.checked;",checked:this.BG_ANIMATION},{type:"checkbox",label:pt.lang.stickyWindows,id:"settings_sticky-windows",onChange:"ui.settings.IS_WINDOWS_STICKY = this.checked;",checked:this.IS_WINDOWS_STICKY}]},{label:pt.lang.customColors,elements:[{type:"color",id:"main-color-input",label:"main color",value:ut.mainColor,onChange:"config.mainColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"secondary-color-input",label:"secondary color",value:ut.secondaryColor,onChange:"config.secondaryColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"accent-color-input",label:"accent color",value:ut.accentColor,onChange:"config.accentColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"selection-color-input",label:"selection color",value:ut.selectionColor,onChange:"config.selectionColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"font-color-input",label:"font color",value:ut.fontColor,onChange:"config.fontColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"}]},{label:pt.lang.fontFamily,elements:[{type:"select",label:pt.lang.selectFont,id:"settings_font-family",selectValues:[{type:"radio",name:"settings_font-family",id:"settings_font-family-default",label:"default",checked:"default"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('default');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Oxygen",label:"Oxygen",checked:"Oxygen"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('oxygen');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Shadows",label:"Shadows",checked:"Shadows"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('shadows');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Pixelify",label:"Pixelify",checked:"Pixelify Sans"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('pixelifySans');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Jaro",label:"Jaro",checked:"Jaro"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('jaro');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Jacquard",label:"Jacquard",checked:"Jacquard"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('jacquard');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Custom",label:"Custom",checked:"custom"===pt.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('custom');\""}]},{type:"search",label:pt.lang.pasteHere,id:"settings_font-input",value:"",onChange:"ui.settings.FONT_FAMILY = this.value; this.value = '';"},{type:"button",label:"-",id:"settings_font-size-decrease",onClick:"ui.settings.FONT_SIZE = parseFloat(ui.settings.FONT_SIZE) - 0.5;"},{type:"button",label:"+",id:"settings_font-size-increase",onClick:"ui.settings.FONT_SIZE = parseFloat(ui.settings.FONT_SIZE) + 0.5;"}]},{label:pt.lang.raApi,elements:[{type:"search",label:ut.targetUser,id:"settings_target-user-input",value:ut.targetUser,onChange:"config.targetUser = this.value",title:pt.lang.targetUserInputHint},{type:"button",label:pt.lang.checkGameID,id:"settings_check-game-id",onClick:"watcher.updateGameData(config.gameID)"},{type:"button",label:pt.lang.getLastID,id:"settings_get-last-id",onClick:"ui.settings.getLastGameID()"},{type:"number",label:pt.lang.gameID,id:"settings_game-id-input",value:ut.gameID,onChange:"config.gameID = this.value;"}]},{label:pt.lang.autoupdate,elements:[{type:"checkbox",label:pt.lang.startOnLoad,id:"settings_start-on-load",onChange:"ui.settings.START_ON_LOAD = this.checked;",checked:this.START_ON_LOAD},{type:"checkbox",label:pt.lang.pauseIfOffline,id:"settings_autopause",onChange:"ui.settings.PAUSE_ON_OFFLINE = this.checked;",checked:this.PAUSE_ON_OFFLINE},{type:"number",label:"sec",id:"settings_update-delay-input",value:ut.updateDelay,onChange:"config.updateDelay = this.value",title:pt.lang.autoupdateInputHint}]},{label:pt.lang.fsAlerts,elements:[{type:"checkbox",label:pt.lang.earnCheevoAlert,id:"settings_fsalert-cheevo",onChange:"ui.settings.FS_NEW_CHEEVO = this.checked;",checked:this.FS_NEW_CHEEVO},{type:"checkbox",label:pt.lang.earnAwardAlert,id:"settings_fsalert-award",onChange:"ui.settings.FS_NEW_AWARD = this.checked;",checked:this.FS_NEW_AWARD},{type:"number",label:pt.lang.duration,id:"settings_fsakert-duration-input",value:this.FS_DURATION_SEC,onChange:"ui.settings.FS_DURATION_SEC = this.value",title:pt.lang.fsAlertDurationInputHint}]},{label:"Discord Alerts",elements:[{type:"text-input",label:pt.lang.pasteWebhook,id:"settings_discord-hook-input",value:this.DISCORD_WEBHOOK??"",onChange:"ui.settings.DISCORD_WEBHOOK = value;"},{type:"checkbox",label:pt.lang.startGameAlert,id:"settings_discord-start-game",onChange:"ui.settings.DISCORD_NEW_GAME = this.checked;",checked:this.DISCORD_NEW_GAME},{type:"checkbox",label:pt.lang.startSession,id:"settings_discord-start-session",onChange:"ui.settings.DISCORD_START_SESSION = this.checked;",checked:this.DISCORD_START_SESSION},{type:"checkbox",label:pt.lang.earnCheevoAlert,id:"settings_discord-new-cheevo",onChange:"ui.settings.DISCORD_NEW_CHEEVO = this.checked;",checked:this.DISCORD_NEW_CHEEVO},{type:"number",label:pt.lang.points,id:"settings_min-points-alert",title:pt.lang.DSAlertMinPointsInputHint,value:this.DISCORD_MIN_POINTS_ALERT,onChange:"ui.settings.DISCORD_MIN_POINTS_ALERT = this.value;"},{type:"number",label:pt.lang.retropoints,title:pt.lang.DSAlertMinTruePointsInputHint,id:"settings_min-retropoints-alert",value:this.DISCORD_MIN_RETROPOINTS_ALERT,onChange:"ui.settings.DISCORD_MIN_RETROPOINTS_ALERT = this.value;"},{type:"checkbox",label:"Hardcore Only",id:"settings_discord-hard-award",onChange:"ui.settings.DISCORD_HARD_ONLY_ALERT = this.checked;",checked:this.DISCORD_HARD_ONLY_ALERT},{type:"checkbox",label:pt.lang.earnAwardAlert,id:"settings_discord-new-award",onChange:"ui.settings.DISCORD_NEW_AWARD = this.checked;",checked:this.DISCORD_NEW_AWARD}]},{label:"Language",elements:[{name:"settings-language",type:"radio",label:"English",id:"settings_lang-en",onChange:`ui.settings.LANG = '${Ue.en}';`,checked:this.LANG===Ue.en},{name:"settings-language",type:"radio",label:"Português (Brasil)",id:"settings_lang-br",onChange:`ui.settings.LANG = '${Ue.br}';`,checked:this.LANG===Ue.br},{name:"settings-language",type:"radio",label:"Українська",id:"settings_lang-ua",onChange:`ui.settings.LANG = '${Ue.ua}';`,checked:this.LANG===Ue.ua}]},{label:pt.lang.data,elements:[{label:pt.lang.exportCompletion,type:"button",name:"context_export-completion",id:"context_export-completion",onClick:"ui.exportCompletionDataToXlsx()"},{label:pt.lang.exportWantToPlay,type:"button",name:"context_export-wtp-list",id:"context_export-wtp-list",onClick:"ui.exportWantToPlayToCSV()"},{label:pt.lang.exportSettings,type:"button",name:"context_export-settings",id:"context_export-settings",onClick:"ui.exportSettingsToJson()"},{label:pt.lang.importSettings,type:"button",name:"context_import-settings",id:"context_import-settings",onClick:"ui.importSettingsFromJson()"}]}]}get FS_DURATION_SEC(){return ut.getSettingProperty("fsAlertDuration")??15}set FS_DURATION_SEC(e){e=!isFinite(e)||e<5?5:e>60?60:e,ut.saveSettingProperty("fsAlertDuration",e)}get FS_NEW_CHEEVO(){return ut.getSettingProperty("fsNewCheevo")??!0}set FS_NEW_CHEEVO(e){ut.saveSettingProperty("fsNewCheevo",e)}get FS_NEW_AWARD(){return ut.getSettingProperty("fsNewAward")??!0}set FS_NEW_AWARD(e){ut.saveSettingProperty("fsNewAward",e)}set DISCORD_MIN_POINTS_ALERT(e){ut._cfg.settings.minPointsDiscordAlert=e>0?e:0,ut.writeConfiguration()}get DISCORD_MIN_POINTS_ALERT(){return+ut._cfg.settings?.minPointsDiscordAlert||0}set DISCORD_HARD_ONLY_ALERT(e){ut._cfg.settings.hardOnlyDiscordAlert=e,ut.writeConfiguration()}get DISCORD_HARD_ONLY_ALERT(){return ut._cfg.settings?.hardOnlyDiscordAlert??!1}set DISCORD_MIN_RETROPOINTS_ALERT(e){ut._cfg.settings.minRetroPointsDiscordAlert=e>0?e:0,ut.writeConfiguration()}get DISCORD_MIN_RETROPOINTS_ALERT(){return+ut._cfg.settings?.minRetroPointsDiscordAlert||0}get LANG(){return ut.ui?.local??Ue.en}set LANG(e){ut.ui.local=e,ut.writeConfiguration(),setTimeout((()=>location.reload()),1e3)}get PAUSE_ON_OFFLINE(){return ut.ui?.pauseOffline??!0}set PAUSE_ON_OFFLINE(e){ut.ui.pauseOffline=e,ut.writeConfiguration()}get IS_WINDOWS_STICKY(){return ut.ui.isWindowsSticky??!0}set IS_WINDOWS_STICKY(e){ut.ui.isWindowsSticky=e,ut.writeConfiguration()}get DISCORD_WEBHOOK(){return ut.DISCORD_WEBHOOK??""}set DISCORD_WEBHOOK(e){ut.DISCORD_WEBHOOK=e,ut.writeConfiguration()}get DISCORD_NEW_GAME(){return ut._cfg?.discordNewGame??!0}set DISCORD_NEW_GAME(e){ut._cfg.discordNewGame=e,ut.writeConfiguration()}get DISCORD_NEW_CHEEVO(){return ut._cfg?.discordNewCheevo??!0}set DISCORD_NEW_CHEEVO(e){ut._cfg.discordNewCheevo=e,ut.writeConfiguration()}get DISCORD_NEW_AWARD(){return ut._cfg?.discordNewAward??!0}set DISCORD_NEW_AWARD(e){ut._cfg.discordNewAward=e,ut.writeConfiguration()}get DISCORD_START_SESSION(){return ut._cfg?.discordStartSession??!0}set DISCORD_START_SESSION(e){ut._cfg.discordStartSession=e,ut.writeConfiguration()}get VISIBLE(){return!this.section.classList.contains("hidden")}get contextMenuItems(){return[{label:pt.lang.selectColors,elements:Object.keys(i).map((e=>({type:"radio",name:"context_color-scheme",id:`context_color- scheme - ${e}`,label:e,checked:pt.settings.COLOR_SCHEME===e,event:`onchange ="ui.settings.COLOR_SCHEME = '${e}'"`})))},{label:pt.lang.showBgAnimation,type:"checkbox",name:"context_show-bg-animation",id:"context_show-bg-animation",checked:pt.settings.BG_ANIMATION,event:'onchange="ui.settings.BG_ANIMATION = this.checked;"'},{label:pt.lang.startOnLoad,type:"checkbox",name:"context_show-start-on-load",id:"context_show-start-on-load",checked:pt.settings.START_ON_LOAD,event:'onchange="ui.settings.START_ON_LOAD = this.checked;"'}]}get FONT_SIZE(){return ut?._cfg.settings?.fontSize??14}set FONT_SIZE(e){ut._cfg.settings.fontSize=e,ut.writeConfiguration(),document.documentElement.style.setProperty("font-size",`${this.FONT_SIZE}px`)}get FONT_FAMILY(){return this.fonts[ut._cfg?.fontSelectorName??"default"]}get FONT_NAME(){let e=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim),t="default";return e.test(this.FONT_FAMILY)&&(t=this.FONT_FAMILY.match(e)[0].replaceAll("+"," ")),t}set FONT_FAMILY(e){let t=new RegExp(/https:\/\/[^'");]*/gim),s=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim);if(t.test(e)){let i=e.match(t)[0],n=e.match(s)[0].replaceAll("+"," ");const a=document.createElement("link");a.rel="stylesheet",a.href=i,document.head.appendChild(a),document.documentElement.style.setProperty("--font-family",`"${n}", system-ui, sans-serif`)}"def"==e&&document.documentElement.style.setProperty("--font-family"," system-ui, sans-serif")}loadCustomFont(e){const t=this.parseFontUrl(e);t&&(ut._cfg.settings.customFontFamily=t.fontFamily,this.fontColorInput.value=t.fontName,this.FONT_FAMILY=t.fontFamily,this.fontSelector.value="custom",ut._cfg.fontSelectorName="custom",ut.writeConfiguration()),"def"==e&&(ut._cfg.settings.fontFamily="",ut.writeConfiguration(),document.documentElement.style.setProperty("--font-family"," system-ui, sans-serif"))}parseFontUrl(e){let t=new RegExp(/https:\/\/[^'");]*/gim),s=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim);if(t.test(e)){return{fontFamily:e.match(t)[0],fontName:e.match(s)[0].replaceAll("+"," ")}}}get COLOR_SCHEME(){return ut._cfg.settings.preset||"default"}set COLOR_SCHEME(e){ut._cfg.settings.preset=e,ut.writeConfiguration(),ct.updateColors(e)}get BG_ANIMATION(){return ut._cfg.settings.bgVisibility??!0}set BG_ANIMATION(e){ut._cfg.settings.bgVisibility=e,ut.writeConfiguration(),document.querySelector("#background-animation").style.display=ut.bgVisibility?"block":"none"}get START_ON_LOAD(){return ut._cfg.settings.startOnLoad??!1}set START_ON_LOAD(e){ut._cfg.settings.startOnLoad=e,ut.writeConfiguration()}fonts={default:"def",pixelifySans:"https://fonts.googleapis.com/css2?family=Pixelify+Sans",jaro:"https://fonts.googleapis.com/css2?family=Jaro",oxygen:"https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700",jacquard:"https://fonts.googleapis.com/css2?family=Jacquard+24",shadows:"https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap",custom:ut._cfg?.settings?.customFontFamily??"def"};constructor(){super(),this.setValues()}setValues(){this.FONT_SIZE=this.FONT_SIZE,this.FONT_FAMILY=this.fonts[ut._cfg?.fontSelectorName??"default"]}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{this.section.querySelectorAll(".extended").forEach((e=>e.classList.remove("extended")))}))}generateWidget(e){const t={classes:["prefs_section","section"],id:"settings_section",title:pt.lang.settingsSectionName,contentClasses:["settings_container","content-container"]},s=this.generateWidgetElement(t);pt.app.appendChild(s),this.section=s,this.section.querySelector(".resizer")?.remove(),(e=>{const t=this.section.querySelector(".content-container");t.innerHTML="";const s=e=>{switch(e.type){case"button":return De(e);case"checkbox":return Ie(e);case"statebox":return be(e);case"radio":return Re(e);case"select":return Le(e);case"number":case"input-number":return Ce(e);case"text-input":return Oe(e);case"search":return we(e);case"color":return`\n                            <input \n                                type="color" \n                                class="color-input" \n                                onchange="${e.onChange}" \n                                value="${e.value}" \n                                id="${e.id}" \n                                data-title="${e.label}" \n                            />`;default:return"default"}};e.forEach((e=>{if(e.elements){const i=document.createElement("li");i.classList.add("settings_setting-line"),i.innerHTML=`\n                    <h3 class="settings_setting-header">\n                        ${e?.label}\n                    </h3>`,e.elements.forEach((e=>{i.innerHTML+=s(e)})),t.appendChild(i)}else t.innerHTML+=s(e)}))})(e),this.section.querySelectorAll(".statebox").forEach((e=>e.addEventListener("click",We)))}openSettings(e=this.settingsItems){this.close(),this.generateWidget(e),this.addEvents(),ut.ui.settings_section&&(ut.ui.settings_section.x&&(this.section.style.left=ut.ui.settings_section.x),ut.ui.settings_section.y&&(this.section.style.top=ut.ui.settings_section.y)),pt.buttons.settings.checked=!0}close(){pt.buttons.settings.checked=!1,this.section&&this.section.remove()}getLastGameID(){apiWorker.getProfileInfo({}).then((e=>{document.getElementById("settings_game-id-input").value=e.LastGameID,ut.gameID=e.LastGameID,watcher.updateGameData()}))}selectFont(e){const t=e;this.FONT_FAMILY=this.fonts[t],ut._cfg.fontSelectorName=t,ut.writeConfiguration()}}class Ve extends z{widgetIcon={description:"notes widget",iconID:"side-panel__note",onChangeEvent:"ui.note.VISIBLE = this.checked",iconClass:"note-icon"};AUTOSAVE_INTERVAL_MILISECS=2e3;get notesTabs(){return[{type:"radio",name:"note__tabs",id:"notes__main-tab",label:pt.lang.mainNote,checked:"main"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'main'"},{type:"radio",name:"note__tabs",id:"notes__game-tab",label:pt.lang.gameNote,checked:"game"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'game'"}]}get NOTES_VALUE(){return ut._cfg.ui?.note_section?.notes??""}set NOTES_VALUE(e){ut._cfg.ui.note_section.notes=e,ut.writeConfiguration()}get GAME_NOTES_VALUE(){const e=Et.GAME_DATA?.ID??0;return ut.gamesDB[e]?.notes??""}set GAME_NOTES_VALUE(e){const t=Et.GAME_DATA?.ID??0;ut.gamesDB[t].notes=e,ut.writeConfiguration()}get CURRENT_TAB(){return ut._cfg.ui?.note_section?.currentTab??"main"}set CURRENT_TAB(e){ut._cfg.ui.note_section.currentTab=e,ut.writeConfiguration(),this.switchActiveTab()}constructor(){super(),this.addWidgetIcon(),ut._cfg.ui.note_section||(ut._cfg.ui.note_section={}),this.initializeElements(),this.generateTabs(),this.addEvents(),this.setValues(),ct.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#note_section"),this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#note-resizer"),this.textarea=this.section.querySelector(".note-textaria")}generateTabs(){const e=this.notesTabs.reduce(((e,t)=>e+=`\n          <div class="checkbox-input_container" onmousedown="event.stopPropagation()">\n            <input  onchange="${t.onChange}" type="radio" id="${t.id}" ${t.checked?"checked":""} name="${t.name}">\n            <label class="radio-tab" for="${t.id}">${t.label}</label>\n          </div>\n        `),"");document.querySelector(".note__tabs-container").innerHTML=e}addEvents(){super.addEvents(),this.delayedSave={},this.textarea.addEventListener("input",this.textInputHandler)}textInputHandler(e){const t=Et.GAME_DATA?.ID??0,s="main"==pt.note.CURRENT_TAB?"main":t,i=pt.note.textarea.value;clearTimeout(pt.note.delayedSave[s]),pt.note.delayedSave[s]=setTimeout((()=>{pt.note.saveNoteValue({id:s,value:i})}),pt.note.AUTOSAVE_INTERVAL_MILISECS)}saveNoteValue({id:e,value:t}){if("main"===e)this.NOTES_VALUE=t;else this.GAME_NOTES_VALUE=t}setValues(){this.switchActiveTab()}switchActiveTab(){switch(this.CURRENT_TAB){case"main":this.textarea.value=this.NOTES_VALUE;break;case"game":this.textarea.value=this.GAME_NOTES_VALUE}}updateGame(){"game"===this.CURRENT_TAB&&(this.textarea.value=this.GAME_NOTES_VALUE)}async copyNoteText(){const e=this.textarea.value.substring(this.textarea.selectionStart,this.textarea.selectionEnd),t=e||this.textarea.value;try{await navigator.clipboard.writeText(t),this.textInputHandler()}catch(e){console.error(e)}}async pasteTextToNote(){try{const e=await navigator.clipboard.readText();this.textarea.value+=e,this.textInputHandler()}catch(e){console.error(e)}}clearTextNote(){this.textarea.value="",this.textInputHandler()}}class qe extends z{widgetIcon={description:"awards widget",iconID:"side-panel__awards",onChangeEvent:"ui.awards.VISIBLE = this.checked",iconClass:"awards-icon"};awardTypes={mastery:"mastery",completion:"completion",beatenSoftcore:"beatenSoftcore",beatenHardcore:"beatenHardcore"};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),ct.applyPosition({widget:this})}generateWidget(){const e=`\n            <div class="get-awards_button header-button header-icon update-icon" data-title="${pt.lang.forceReloadHint}"></div>\n        `,t={classes:["awards_section","section"],id:"awards_section",title:pt.lang.awardsSectionName,headerElementsHtml:e,contentClasses:["awards-content_container","content-container"]},s=this.generateWidgetElement(t);pt.app.appendChild(s)}initializeElements(){this.section=document.querySelector(".awards_section"),this.container=this.section.querySelector(".awards-content_container")}addEvents(){super.addEvents(),this.section.querySelector(".update-icon")?.addEventListener("click",(()=>this.updateAwards()))}async updateAwards(){const e=await _t.getUserAwards({});this.parseAwards(e)}parseAwards(e){if(!e?.TotalAwardsCount)return;this.container.innerHTML="";const{dataset:t}=this.container;t.total=e.TotalAwardsCount,t.beatenSoftcore=e.BeatenSoftcoreAwardsCount,t.beatenHard=e.BeatenHardcoreAwardsCount,t.completion=e.CompletionAwardsCount,t.mastery=e.MasteryAwardsCount;let s=[...e.VisibleUserAwards];s=this.fixGamesProperties(s);const i=this.generateAwardsGroupsArray(s);this.generateConsolesAwards(i)}fixGamesProperties(e){return e.map((e=>(e.awardedDate=new Date(e.AwardedAt),e.awardeTypeFixed="Game Beaten"===e.AwardType?1===e.AwardDataExtra?this.awardTypes.beatenHardcore:this.awardTypes.beatenSoftcore:1===e.AwardDataExtra?this.awardTypes.mastery:this.awardTypes.completion,e))).sort(((e,t)=>t.awardedDate-e.awardedDate))}generateAwardsGroupsArray(e){return e.reduce(((e,t)=>(e.hasOwnProperty(t.ConsoleName)||(e[t.ConsoleName]=[]),e[t.ConsoleName].push(t),e.Total.push(t),e)),{Total:[]})}generateConsolesAwards(e){Object.getOwnPropertyNames(e).forEach((t=>{let s=document.createElement("li");s.classList.add("console-awards"),"Total"!==t&&s.classList.add("collapsed"),s.dataset.consoleName=t;let i=e[t].length;const n=({awardType:e,gamesArray:t})=>t.filter((t=>t.awardeTypeFixed===e)).length;let a=n({awardType:this.awardTypes.beatenSoftcore,gamesArray:e[t]}),o=n({awardType:this.awardTypes.beatenHardcore,gamesArray:e[t]}),r=n({awardType:this.awardTypes.completion,gamesArray:e[t]}),c=n({awardType:this.awardTypes.mastery,gamesArray:e[t]});s.innerHTML=`\n          <h3 class="awards-console_header" onclick="ui.awards.expandAwards(this)">${t}</h3>\n          <ul class="console-awards-values">      \n            <li class="awarded-games total" data-title="${pt.lang.totalAwardsHint}" onclick="ui.awards.filterAwards('all')">${i}</li>\n            <li class="awarded-games beaten-softcore" data-title="${pt.lang.beatenSoftHint}" onclick="ui.awards.filterAwards('${this.awardTypes.beatenSoftcore}')">${a}</li>\n            <li class="awarded-games beaten"  data-title="${pt.lang.beatenHint}"  onclick="ui.awards.filterAwards('${this.awardTypes.beatenHardcore}')">${o}</li>\n            <li class="awarded-games completed"  data-title="${pt.lang.completedHint}" onclick="ui.awards.filterAwards('${this.awardTypes.completion}')">${r}</li>\n            <li class="awarded-games mastered"  data-title="${pt.lang.masteredHint}" onclick="ui.awards.filterAwards('${this.awardTypes.mastery}')">${c}</li>\n          </ul>\n          <button class="expand-awards_button" onclick="ui.awards.expandAwards(this)"> </button>\n          <ul class="flex-main-list awarded-games_list ${"Total"==t?"":"hidden"} total">\n          </ul>\n          `,this.container.appendChild(s);let l=s.querySelector(".flex-main-list");e[t].forEach((e=>{l.appendChild(this.generateAwardElement(e))}))}))}generateAwardElement(e){let t=document.createElement("li");return t.classList.add("awarded-game","awards__game-item","main-column-item","right-bg-icon",e.awardeTypeFixed),t.dataset.title=`${pt.lang.awardTypeHint}: ${e.awardeTypeFixed}`,t.innerHTML=`\n            <img class="awards__game-preview" src="${D(e.ImageIcon)}" alt=" ">\n            <h3 class="game-title">${e.Title}</h3>\n            <p class="awards__game-description">${e.ConsoleName}</p>\n            <p class="awards__game-description">${e.timeString}</p>\n        `,t}expandAwards(e){const t=e.parentNode,s=t.querySelector(".awarded-games_list");s.classList.contains("hidden")?(t.classList.remove("collapsed"),s.classList.remove("hidden")):(t.classList.add("collapsed"),s.classList.add("hidden"))}filterAwards(e){this.container.querySelectorAll(".awarded-game").forEach((t=>{t.classList.remove("hidden"),t.classList.contains(e)||"all"===e||t.classList.add("hidden")}))}}class je extends z{widgetIcon={description:"game info widget",iconID:"side-panel__gamecard",onChangeEvent:"ui.gameCard.VISIBLE = this.checked",iconClass:"game-info-icon"};get SHOW_BADGES(){return ut.ui?.game_section?.showBadges??!0}set SHOW_BADGES(e){ut.ui.game_section.showBadges=e,ut.writeConfiguration(),this.gameChangeEvent()}get SHOW_COMPLETION(){return ut.getUIProperty({sectionID:this.section.id,property:"showCompletion"})??!0}set SHOW_COMPLETION(e){ut.saveUIProperty({sectionID:this.section.id,property:"showCompletion",value:e}),this.gameChangeEvent()}get SHOW_DEVELOPER(){return ut.getUIProperty({sectionID:this.section.id,property:"showDeveloper"})??!0}set SHOW_DEVELOPER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showDeveloper",value:e}),this.gameChangeEvent()}get SHOW_GENRE(){return ut.getUIProperty({sectionID:this.section.id,property:"showGenre"})??!0}set SHOW_GENRE(e){ut.saveUIProperty({sectionID:this.section.id,property:"showGenre",value:e}),this.gameChangeEvent()}get SHOW_PLAYERS(){return ut.getUIProperty({sectionID:this.section.id,property:"showPlayers"})??!0}set SHOW_PLAYERS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPlayers",value:e}),this.gameChangeEvent()}get SHOW_POINTS(){return ut.getUIProperty({sectionID:this.section.id,property:"showPoints"})??!0}set SHOW_POINTS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPoints",value:e}),this.gameChangeEvent()}get SHOW_PUBLISHER(){return ut.getUIProperty({sectionID:this.section.id,property:"showPublisher"})??!0}set SHOW_PUBLISHER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPublisher",value:e}),this.gameChangeEvent()}get SHOW_RELEASED(){return ut.getUIProperty({sectionID:this.section.id,property:"showReleased"})??!0}set SHOW_RELEASED(e){ut.saveUIProperty({sectionID:this.section.id,property:"showReleased",value:e}),this.gameChangeEvent()}get SHOW_CHEEVOS(){return ut.getUIProperty({sectionID:this.section.id,property:"showAchievements"})??!0}set SHOW_CHEEVOS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showAchievements",value:e}),this.gameChangeEvent()}get SHOW_PLATFORM(){return ut.getUIProperty({sectionID:this.section.id,property:"showPlatform"})??!0}set SHOW_PLATFORM(e){ut.saveUIProperty({sectionID:this.section.id,property:"showPlatform",value:e}),this.gameChangeEvent()}get contextMenuItems(){return[{label:pt.lang.showTitleBadges,type:"checkbox",name:"game-card_show-badges",id:"game-card_show-badges",event:"onchange=\"ui.gameCard.SHOW_BADGES = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_BADGES}]}gameInfoElements=()=>({Platform:{title:pt.lang.platform,id:"game-card-platform",visible:this.SHOW_PLATFORM,value:()=>Et.GAME_DATA?.ConsoleName??""},Developer:{title:pt.lang.developer,id:"game-card-developer",visible:this.SHOW_DEVELOPER,value:()=>Et.GAME_DATA?.Developer??""},Publisher:{title:pt.lang.publisher,id:"game-card-publisher",visible:this.SHOW_PUBLISHER,value:()=>Et.GAME_DATA?.Publisher??""},Genre:{title:pt.lang.genre,id:"game-card-genre",visible:this.SHOW_GENRE,value:()=>Et.GAME_DATA?.Genre??""},Released:{title:pt.lang.released,id:"game-card-released",visible:this.SHOW_RELEASED,value:()=>{const{Released:e}=Et?.GAME_DATA??!1;return e?c(e):""}},Completion:{title:pt.lang.completion,id:"game-card-completion",value:"",visible:this.SHOW_COMPLETION,value:()=>{const e=Et.GAME_DATA?.earnedStats?.hard.count,t=Et.GAME_DATA?.NumAchievements;return t?`${e} / ${t} cheevos`:"n/a"}},Points:{title:pt.lang.points,id:"game-card-points-total",visible:this.SHOW_POINTS,value:()=>Et.GAME_DATA?.totalPoints??""},Players:{title:pt.lang.players,id:"#game-card-players-total",visible:this.SHOW_PLAYERS,value:()=>Et.GAME_DATA?.NumDistinctPlayers??""},Achievements:{title:pt.lang.cheevos,id:"game-card-achivs-count",visible:this.SHOW_CHEEVOS,value:()=>Et.GAME_DATA?.NumAchievements??""}});constructor(){super(),this.addWidgetIcon(),this.initializeElements(),this.generateInfo(),this.addEvents(),ct.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector(".game-card_section"),this.header=document.querySelector("#game-card-header"),this.descriptions=document.querySelector(".game-card-description"),this.preview=document.querySelector("#game-card-image"),this.iconsContainer=this.section.querySelector(".game-card__icons-container")}addEvents(){super.addEvents(),this.section.querySelector(".comments-button").addEventListener("click",(e=>{const t=Et.GAME_DATA?.ID;t&&ye(t,1)})),this.section.querySelector(".game-props-button").addEventListener("click",(e=>{e.stopPropagation(),$e().open(Et.GAME_DATA)})),this.section.addEventListener("mousedown",(e=>{0!==e.button||e.target.closest(".resizer, button")||q(this.section,e)}))}generateInfo(){this.descriptions.innerHTML="";const e=this.gameInfoElements(),t=Object.keys(e).map((t=>{const s=e[t];return`\n                <div class="game-card-info ${s.visible?"":"hidden"}">\n                    <h3 class="game-info-header">${s.title}</h3>\n                    <p class="game-card-text" id="${s.id}">${s.value()}</p>\n                </div>\n            `})).join("\n");this.descriptions.innerHTML=t}async gameChangeEvent(e){const{FixedTitle:t,ID:s,ImageBoxArt:i,Genre:n,TotalRetropoints:a,NumAchievements:o,totalPoints:r,badges:l,retroRatio:h,ConsoleName:d,Developer:p,Publisher:E,Released:v,gameDifficulty:S,masteryDifficulty:A}=Et.GAME_DATA;this.generateInfo(),(async()=>{const e=[];p&&e.push(`dev: ${p}`),E&&e.push(`Pub: ${E}`),v&&e.push(`date: ${c(v)}`),this.section.dataset.award=Et.GAME_DATA?.award??"-",this.section.dataset.progressionAward=Et.GAME_DATA?.progressionAward??"-",this.header.innerHTML=`${t.replaceAll(/\,\s*the$/gi,"")}`,this.header.href=N(s),this.preview.src=D(i),this.preview.alt=`${t} boxart`;const a=await ze(Et.GAME_DATA),o=this.section.querySelector(".game-card__genres-container");o.innerHTML="",this.SHOW_BADGES&&(o.innerHTML=`\n                ${T.gold(d)}\n                ${l?f(l):""} \n                ${n?f(n.split(",")):""} \n                ${e.map((e=>T.gameGenre(e))).join(" ")}\n                ${S?T.difficultBadge(S):""}\n                ${A!==S?T.difficultBadge(A,"mastery"):""}\n                ${a?T.hltbBadge(a):""}`)})(),(()=>{this.iconsContainer.innerHTML=`\n            ${T.black(g(o))}\n            ${T.black(m(r))}\n            ${T.black(u(a))}\n            ${T.black(_(h))}\n            `})()}}const ze=async({ID:e,ConsoleID:t})=>{try{if(!pt.hltb[t]){const e=await fetch(`./json/games/${t}_hltb.json`),s=await(e?.json());pt.hltb[t]=s}const s=pt.hltb[t][e];let i=s[0]||s[3]||s[4]||s[0]||s[5]||s[1],n=s[2]||s[1]>i&&s[1];return(i>=60||!i)&&(n>=60||!n)?[i/60,n/60].filter(Boolean).join(" | ")+" hrs":[i,n].filter(Boolean).join(" | ")+" mins"}catch{console.error("Hltb data error")}};class Ye extends z{widgetIcon={description:"progression widget",iconID:"side-panel__progression",onChangeEvent:"ui.progression.VISIBLE = this.checked",iconClass:"progression"};get contextMenuItems(){return[{label:pt.lang.elements,elements:[{type:"checkbox",name:"context_show-header",id:"context_show-header",label:pt.lang.showHeader,checked:this.SHOW_HEADER,event:'onchange="ui.progression.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context_show-bg",id:"context_show-bg",label:pt.lang.showBackground,checked:this.SHOW_BG,event:'onchange="ui.progression.SHOW_BG = this.checked;"'}]},{label:pt.lang.style,elements:[{type:"checkbox",name:"context_progression-description",id:"context_show-all-descr",label:pt.lang.showAllDesc,checked:this.SHOW_DESCRIPTIONS,event:'onchange="ui.progression.SHOW_DESCRIPTIONS = this.checked;"'},{type:"checkbox",name:"context_show-sublevels",id:"context_show-sublevels",label:pt.lang.showSublevels,checked:this.SHOW_SUBLEVELS,event:'onchange="ui.progression.SHOW_SUBLEVELS = this.checked;"'}]}]}get SHOW_BG(){return ut.getUIProperty({sectionID:this.section.id,property:"showBG"})??!0}set SHOW_BG(e){ut.saveUIProperty({sectionID:this.section.id,property:"showBG",value:e}),this.setElementsVisibility()}get SHOW_HEADER(){return ut.getUIProperty({sectionID:this.section.id,property:"showHeader"})??!1}set SHOW_HEADER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showHeader",value:e}),this.setElementsVisibility()}get IS_HARD_MODE(){return ut.getUIProperty({sectionID:this.section.id,property:"hardMode"})??!0}set IS_HARD_MODE(e){ut.saveUIProperty({sectionID:this.section.id,property:"hardMode",value:e})}get SHOW_SUBLEVELS(){return ut.getUIProperty({sectionID:this.section.id,property:"showSublevels"})??!0}set SHOW_SUBLEVELS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showSublevels",value:e}),this.setElementsVisibility()}get SHOW_DESCRIPTIONS(){return ut.getUIProperty({sectionID:this.section.id,property:"showAllDescriptions"})??!1}set SHOW_DESCRIPTIONS(e){ut.saveUIProperty({sectionID:this.section.id,property:"showAllDescriptions",value:e}),this.setElementsVisibility()}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.setElementsVisibility(),this.addEvents(),ct.applyPosition({widget:this}),this.generateProgression()}initializeElements(){this.section=document.querySelector("#progression_section"),this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#progression-resizer")}setElementsVisibility(){this.section.classList.toggle("compact-header",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",!this.SHOW_BG),this.section.classList.toggle("show-all-descriptions",this.SHOW_DESCRIPTIONS),this.section.classList.toggle("show-sublevels",this.SHOW_SUBLEVELS)}addEvents(){super.addEvents()}IS_HARD_MODE=!0;update({earnedAchievementIDs:e}){e[0]&&(this.IS_HARD_MODE=Et.CHEEVOS[e[0]].isHardcoreEarned),this.generateProgression()}generateWidget(){const e={classes:["progression_section","section","compact-header"],id:"progression_section",title:pt.lang.progressionSectionName,contentClasses:["progression__list","content-container"]},t=this.generateWidgetElement(e);pt.app.appendChild(t)}generateProgression(){const e=this.section.querySelector(".progression__list");const t=Object.values(Et.CHEEVOS)?.filter((e=>e.type==Y.PROGRESSION||e.type==Y.WIN)).sort(((e,t)=>0===e.DisplayOrder?e.ID-t.ID:e.DisplayOrder-t.DisplayOrder)),s=t.find((e=>this.IS_HARD_MODE?!e.isHardcoreEarned:!e.isEarned))?.ID;e.innerHTML=t?.reduce(((e,i)=>(e+=function(e,t){const i=e.level,n=t?.find((e=>e.level>i))?.level??i+1,a=null!=i?Object.values(Et.CHEEVOS).filter((e=>e.level&&![Y.PROGRESSION,Y.WIN].includes(e.type)&&e.level>=i&&e.level<n)):[],o=`\n                <li class="progression__item ${s===e.ID?"focus":""} ${e.type}-cheevo">\n                    <p class="cheevo-date">${r(e.DateEarnedHardcore||e.DateEarned,{year:"2-digit"})}</p>\n                    <div class="mark ${e.isEarned?"earned":""} ${e.isHardcoreEarned?"hardcore":""}"></div>\n                    <div class="cheevo-container">\n                        <h3 class="cheevo-title" data-achiv-id="${e.ID}">${e.Title}</h3>\n                        <p class="cheevo-description">\n                            ${e.Description}</p>\n                        <div class="subcheevos-container">\n                            ${a?.reduce(((e,t)=>e+`<h3 class="progression__subcheevo ${t.isEarned?"earned":""} ${t.isHardcoreEarned?"hardcore":""}" data-achiv-id="${t.ID}">${t.Title}</h3>`),"")}\n                        </div>\n                    </div>\n                </li>\n            `;return o}(i,t),e)),"")??"",this.scrollToFocus()}scrollToFocus(){const e=this.section?.querySelector(".focus")||this.section?.querySelector(".win_condition-cheevo");e?.scrollIntoView({behavior:"auto",block:"center"})}}class Ke extends z{widgetIcon={description:"user statistics widget",iconID:"side-panel__stats",onChangeEvent:"ui.stats.VISIBLE = this.checked",iconClass:"stats-icon"};get contextMenuItems(){return[{label:pt.lang.showStats,elements:[{type:"checkbox",name:"context_show-points",id:"context_show-points",label:pt.lang.points,checked:this.SHOW_HP,event:'onchange="ui.stats.SHOW_HP = this.checked;"'},{type:"checkbox",name:"context_show-retropoints",id:"context_show-retropoints",label:pt.lang.retropoints,checked:this.SHOW_RP,event:'onchange="ui.stats.SHOW_RP = this.checked;"'},{type:"checkbox",name:"context_show-softpoints",id:"context_show-softpoints",label:pt.lang.softpoints,checked:this.SHOW_SP,event:'onchange="ui.stats.SHOW_SP = this.checked;"'},{type:"checkbox",name:"context_show-rank",id:"context_show-rank",label:pt.lang.rank,checked:this.SHOW_RANK,event:'onchange="ui.stats.SHOW_RANK = this.checked;"'},{type:"checkbox",name:"context_show-percentile",id:"context_show-percentile",label:pt.lang.percentile,checked:this.SHOW_PERCENTILE,event:'onchange="ui.stats.SHOW_PERCENTILE = this.checked;"'},{type:"checkbox",name:"context_show-true-ratio",id:"context_show-true-ratio",label:pt.lang.trueRatio,checked:this.SHOW_TR,event:'onchange="ui.stats.SHOW_TR = this.checked;"'},{type:"checkbox",name:"context_show-completion-chart",id:"context_show-completion-chart",label:pt.lang.completionChart,checked:this.SHOW_COMPLETION_CHART,event:'onchange="ui.stats.SHOW_COMPLETION_CHART = this.checked;"'}]},{label:pt.lang.style,elements:[{type:"checkbox",name:"context_show-header",id:"context_show-header",label:pt.lang.showHeader,checked:this.SHOW_HEADER,event:'onchange="ui.stats.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context_show-bg",id:"context_show-bg",label:pt.lang.showBackground,checked:this.SHOW_BG,event:'onchange="ui.stats.SHOW_BG = this.checked;"'}]},{type:"checkbox",name:"context_show-session-progress",id:"context_show-session-progress",label:pt.lang.showSessionProgress,checked:this.SHOW_SESSION_PROGRESS,event:'onchange="ui.stats.SHOW_SESSION_PROGRESS = this.checked;"'}]}get SHOW_BG(){return ut.ui?.stats_section?.showBG??!0}set SHOW_BG(e){this.saveProppertySetting("showBG",e),this.setElementsVisibility()}get SHOW_HEADER(){return ut.ui?.stats_section?.showHeader??!1}set SHOW_HEADER(e){this.saveProppertySetting("showHeader",e),this.setElementsVisibility()}get SHOW_HP(){return ut.ui?.stats_section?.showHP??!0}set SHOW_HP(e){this.saveProppertySetting("showHP",e),this.setElementsVisibility()}get SHOW_RP(){return ut.ui?.stats_section?.showRP??!0}set SHOW_RP(e){this.saveProppertySetting("showRP",e),this.setElementsVisibility()}get SHOW_SP(){return ut.ui?.stats_section?.showSP??!0}set SHOW_SP(e){this.saveProppertySetting("showSP",e),this.setElementsVisibility()}get SHOW_RANK(){return ut.ui?.stats_section?.showRank??!0}set SHOW_RANK(e){this.saveProppertySetting("showRank",e),this.setElementsVisibility()}get SHOW_PERCENTILE(){return ut.ui?.stats_section?.showPercentile??!0}set SHOW_PERCENTILE(e){this.saveProppertySetting("showPercentile",e),this.setElementsVisibility()}get SHOW_TR(){return ut.ui?.stats_section?.showTrueRatio??!0}set SHOW_TR(e){this.saveProppertySetting("showTrueRatio",e),this.setElementsVisibility()}get SHOW_SESSION_PROGRESS(){return ut.ui?.stats_section?.showSessionProgress??!0}set SHOW_SESSION_PROGRESS(e){this.saveProppertySetting("showSessionProgress",e),this.setElementsVisibility()}get SHOW_COMPLETION_CHART(){return ut.ui?.stats_section?.completionChart??!1}set SHOW_COMPLETION_CHART(e){this.saveProppertySetting("completionChart",e),this.setElementsVisibility(),this.updateChart()}saveProppertySetting(e,t){ut.ui.stats_section||(ut.ui.stats_section={}),ut.ui.stats_section[e]=t,ut.writeConfiguration()}initialUserSummary;userSummary;constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.setElementsVisibility(),this.addEvents(),ct.applyPosition({widget:this})}generateWidget(){const e=`\n            <button class="header-button header-icon tweak-button tweak-icon"></button>\n            <button class=" header-button header-icon update-icon" id="" title="${pt.lang.forceReloadHint}"\n            onclick="ui.stats.updateStats({})"></button>\n        `,t={classes:["section","stats_section","compact-header"],id:"stats_section",title:pt.lang.statisticsSectionName,headerElementsHtml:e,contentClasses:["stats-container","content-container"]},s=this.generateWidgetElement(t);pt.app.appendChild(s)}initializeElements(){this.section=document.querySelector("#stats_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".stats-container"),this.generateStatsElements(),this.rankRateElement=this.section.querySelector("#stats_rank-rate"),this.rankElement=this.section.querySelector("#stats_rank"),this.pointsElement=this.section.querySelector("#stats_points"),this.retropointsElement=this.section.querySelector("#stats_retropoints"),this.softpointsElement=this.section.querySelector("#stats_softpoints"),this.trueRatioElement=this.section.querySelector("#stats_true-ratio"),this.completionElement=this.section.querySelector(".stats__chart-container"),this.masteredCountElement=this.section.querySelector("#stats_mastered-count"),this.beatenCountElement=this.section.querySelector("#stats_beaten-count"),this.playedCountElement=this.section.querySelector("#stats_played-count"),this.resizer=this.section.querySelector(".resizer")}setElementsVisibility(){this.pointsElement.closest("li").classList.toggle("hidden",!this.SHOW_HP),this.retropointsElement.closest("li").classList.toggle("hidden",!this.SHOW_RP),this.softpointsElement.closest("li").classList.toggle("hidden",!this.SHOW_SP),this.rankElement.closest("li").classList.toggle("hidden",!this.SHOW_RANK),this.rankRateElement.closest("li").classList.toggle("hidden",!this.SHOW_PERCENTILE),this.trueRatioElement.closest("li").classList.toggle("hidden",!this.SHOW_TR),this.completionElement.classList.toggle("hidden",!this.SHOW_COMPLETION_CHART),this.section.classList.toggle("compact-header",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",!this.SHOW_BG),this.container.classList.toggle("show-session-progress",this.SHOW_SESSION_PROGRESS)}addEvents(){super.addEvents(),this.section.addEventListener("mousedown",(e=>{0!==e.button||e.target.closest(".resizer, button")||q(this.section,e)}))}initialSetStats({userSummary:e,completionProgress:t}){this.initialData={Rank:e.Rank,rankRate:+(100*e.Rank/e.TotalRanked).toFixed(2),TotalPoints:e.TotalPoints,TotalSoftcorePoints:e.TotalSoftcorePoints,TotalTruePoints:e.TotalTruePoints,trueRatio:+(e.TotalTruePoints/e.TotalPoints).toFixed(2)},e&&(this.userSummary=e,this.initialUserSummary=e,this.rankElement.innerText=e.Rank,this.rankRateElement.innerText=(100*e.Rank/e.TotalRanked).toFixed(2)+"%",this.pointsElement.innerText=e.TotalPoints,this.softpointsElement.innerText=e.TotalSoftcorePoints,this.retropointsElement.innerText=e.TotalTruePoints,this.trueRatioElement.innerText=(e.TotalTruePoints/e.TotalPoints).toFixed(2)),setTimeout((()=>this.updateChart()),1e3)}async updateStats({currentUserSummary:e}){e||(e=await _t.getUserSummary({gamesCount:"0",achievesCount:0}));const t=(t,s)=>{let i=0,n=0,a=0,o=0;switch(s){case"rankRate":a=(100*e.Rank/e.TotalRanked).toFixed(2),o=(100*this.userSummary.Rank/this.userSummary.TotalRanked).toFixed(2),i=+(a-o).toFixed(2),n=-(a-this.initialData.rankRate).toFixed(2),a+="%";break;case"trueRatio":a=(e.TotalTruePoints/e.TotalPoints).toFixed(2),o=(this.userSummary.TotalTruePoints/this.userSummary.TotalPoints).toFixed(2),i=+(a-o).toFixed(2),n=+(a-this.initialData.trueRatio).toFixed(2);break;case"Rank":i=e[s]-this.userSummary[s],n=this.initialData[s]-e[s],a=e[s];break;default:i=e[s]-this.userSummary[s],n=e[s]-this.initialData[s],a=e[s]}if(0==i)return;const r=i<0,c=n<0;t.classList.add("delta"),t.classList.toggle("negative",r),t.dataset.delta=`${r||0==i?"":"+"}${i}`;setTimeout((()=>{const e=0==n?"":c?"▾"+-1*n:`▴${n}`;t.innerHTML=a+` <span class="session-progress ${c?"negative":""}">${e}</span>`,t.classList.remove("delta")}),0)};t(this.rankRateElement,"rankRate"),t(this.rankElement,"Rank"),t(this.pointsElement,"TotalPoints"),t(this.softpointsElement,"TotalSoftcorePoints"),t(this.retropointsElement,"TotalTruePoints"),t(this.trueRatioElement,"trueRatio"),this.userSummary=e}async updateChart(){if(!this.SHOW_COMPLETION_CHART)return;const e=this.section.querySelector(".stats__chart-container"),t=await _t.SAVED_COMPLETION_PROGRESS,s=t?.Results??[],i=s.length,n=s.filter((e=>"mastered"===e.HighestAwardKind)).length/i*100,a=s.filter((e=>"completed"===e.HighestAwardKind)).length/i*100,o=s.filter((e=>"beaten-hardcore"===e.HighestAwardKind)).length/i*100,r=s.filter((e=>"beaten-softcore"===e.HighestAwardKind)).length/i*100;e.style.setProperty("--m",n+"%"),e.style.setProperty("--c",a+"%"),e.style.setProperty("--b",o+"%"),e.style.setProperty("--b-s",r+"%"),this.section.querySelector(".legend__value-mastered").innerText=n.toFixed(2)+"%",this.section.querySelector(".legend__value-completed").innerText=a.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten").innerText=o.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten-soft").innerText=r.toFixed(2)+"%",this.section.querySelector(".legend__value-progress").innerText=(100-n-a-o-r).toFixed(2)+"%"}statusProperties={percentile:{label:pt.lang.percentile,id:"stats_rank-rate",class:"stats__rank-value"},rank:{label:pt.lang.rank,id:"stats_rank",class:"stats__rank-value"},points:{label:pt.lang.points,id:"stats_points"},retropoints:{label:pt.lang.retropoints,id:"stats_retropoints"},trueRatio:{label:pt.lang.trueRatio,id:"stats_true-ratio"},softpoints:{label:pt.lang.softpoints,id:"stats_softpoints"}};generateStatsElements(){const e=Object.values(this.statusProperties).reduce(((e,t)=>e+=`\n          <li class="stats__stat-container">\n              <h2 class="stats__title">${t.label}</h2>\n              <p id="${t.id}" class="stats__value ${t.class}"></p>\n          </li>\n          `),""),t=`\n            <li class="stats__stat-container stats__chart-container">\n            <h2 class="stats__title">${pt.lang.completionChart}</h2>\n            <div class="round-stat__container ">\n                <div class="circle">\n                <div class="round-stat__total" id="sector"></div>\n                </div>\n                <div class="round-stat__legend">\n                    <div class="legend__award legend__mastered">mastered: <span class="legend__value-mastered">0%</span></div>\n                    <div class="legend__award legend__completed">completed: <span class="legend__value-completed">0%</div>\n                    <div class="legend__award legend__beaten">beaten: <span class="legend__value-beaten">0%</div>\n                    <div class="legend__award legend__beaten-soft">beaten soft: <span class="legend__value-beaten-soft">0%</div>\n                    <div class="legend__award legend__started">in progress: <span class="legend__value-progress">0%</div>\n                </div>\n            </div>\n            </li>\n        `;this.container.innerHTML=e+t}}class Xe extends z{widgetIcon={description:"notifications widget",iconID:"side-panel__notifications",onChangeEvent:"ui.notifications.VISIBLE = this.checked",iconClass:"notification-icon"};get contextMenuItems(){return[{label:"**Header",type:"checkbox",name:"context_hide-notification-header",id:"context_hide-notification-header",checked:this.SHOW_HEADER,event:'onchange="ui.notifications.SHOW_HEADER = this.checked;"'},{label:"**Transparent",type:"checkbox",name:"context_hide-notification-bg",id:"context_hide-notification-bg",checked:this.HIDE_BG,event:'onchange="ui.notifications.HIDE_BG = this.checked;"'},{label:"**Timestamps",type:"checkbox",name:"context_show-notification-time",id:"context_show-notification-time",checked:this.SHOW_TIMESTAMP,event:'onchange="ui.notifications.SHOW_TIMESTAMP = this.checked;"'}]}types={newGame:"newGame",earnedAchivs:"earnedAchivs"};get SHOW_TIMESTAMP(){return ut?.ui.notification_section?.showTimestamp??!0}set SHOW_TIMESTAMP(e){ut.ui.notification_section||(ut.ui.notification_section={}),this.section.querySelectorAll(".notification_timestamp").forEach((e=>e.classList.toggle("hidden",this.SHOW_TIMESTAMP))),ut.ui.notification_section.showTimestamp=e,ut.writeConfiguration(),this.section.classList.toggle("compact-header",!this.SHOW_HEADER)}get SHOW_HEADER(){return ut?.ui.notification_section?.showHeader??!1}set SHOW_HEADER(e){ut.ui.notification_section||(ut.ui.notification_section={}),ut.ui.notification_section.showHeader=e,ut.writeConfiguration(),this.section.classList.toggle("compact-header",!this.SHOW_HEADER)}get HIDE_BG(){return ut?.ui.notification_section?.hideBg??!1}set HIDE_BG(e){ut.ui.notification_section||(ut.ui.notification_section={}),ut.ui.notification_section.hideBg=e,ut.writeConfiguration(),this.section.classList.toggle("hide-bg",this.HIDE_BG)}get NOTIFICATIONS(){return this._notifications??{time:"",notifications:[]}}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=document.querySelector("#notification_section"),this.container=this.section.querySelector(".notification-container"),this.resizer=this.section.querySelector(".resizer")}generateWidget(){const e={classes:["notification_section","bg-visible","section","compact-header"],id:"notification_section",title:pt.lang.alertsSectionName,contentClasses:["notification-container","content-container"]},t=this.generateWidgetElement(e);pt.app.appendChild(t)}addEvents(){super.addEvents()}setValues(){ct.applyPosition({widget:this}),this.HIDE_BG=this.HIDE_BG,this.SHOW_HEADER=this.SHOW_HEADER,this.updateInterval=setInterval((()=>{this.container.querySelectorAll(".notification_timestamp").forEach((e=>{e.innerText=this.getDeltaTime(e.dataset.time)}))}),6e4)}gameChangeEvent(){const e=[{type:C.game,value:Et.GAME_DATA}];this.pushAlerts(e)}pushAlerts(e){const t=e=>{const t=this.generatePopupTime(),s=document.createElement("ul");return s.classList.add("notification_timeblock-list"),s.appendChild(t),e.forEach((e=>{s.appendChild(e)})),s};if(0==e.length)return;let s=[];if(e?.forEach((e=>{switch(e.type){case C.cheevo:s.push(this.cheevoAlertElement(e.value));break;case C.game:s.push(this.gameAlertElement(e.value));break;default:console.log("notification type doesn't exist")}})),s.length>0){const e=t(s);this.container.prepend(e);const i=e.getBoundingClientRect().height;this.container.style.setProperty("--offset-height",`${i}px`),e.classList.add("notification_popup")}}generatePopupTime(e){!e&&(e=(new Date).toLocaleString());const t=document.createElement("li"),s=(e?(e=>{const[t,s]=e.split(", "),[i,n,a]=t.split(".").map(Number),[o,r]=s.split(":").map(Number);return new Date(a,n-1,i,o,r)})(e):new Date).getTime();return t.dataset.time=s,t.classList.add("notification_timestamp"),!this.SHOW_TIMESTAMP&&t.classList.add("hidden"),t.innerHTML=`\n       ${this.getDeltaTime(s)}\n      `,t}gameAlertElement(e){const t=document.createElement("li");return t.classList.add("notification-game","new-game"),t.innerHTML=`\n        <div class="prev">\n          <img class="prev-img" src="${D(e.ImageIcon)}" alt=" ">\n        </div>\n        <div class="notification_details">\n          <h3 class="achiv-name">\n            <a target="_blanc" href="${N(e.ID??e.GameID)}">\n              ${e.Title}\n            </a>\n          </h3>\n          <p class="achiv-description">${e.Genre?e.Genre+",\n":""}${e.ConsoleName}</p>\n          <div class="notification_description-icons">\n            <p class="notification_description-text" data-title="${pt.lang.points}">\n              ${y.points}\n              ${e.totalPoints??""}\n            </p>\n            <p class="notification_description-text" data-title="${pt.lang.retropoints}">\n              ${y.cheevos}\n              ${e.NumAchievements??e.AchievementsTotal}\n            </p>\n            <p class="notification_description-text" data-title="${pt.lang.unlockedBy}">\n              ${y.players}\n              ${e.NumDistinctPlayersHardcore??""}\n            </p>\n          </div>\n        </div>\n      `,t}cheevoAlertElement(e){const t=(e=>{const t=document.createElement("li");t.classList.add("cheevo-column-item"),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isHardcoreEarned),t.dataset.achivId=e.ID;const s=e.level?.toString()?.split(".")[1],i=e.zone?s?`${e.zone} [${s}]`:e.zone:e.level?.toString()?.replace(".","-"),n=100*e.NumAwardedHardcore/e.totalPlayers;return t.innerHTML=`\n            <div class="target__buttons-container">\n                <button class="header-button header-icon  target__comments-button edit-cheevo-button edit-icon" data-title="edit props" data-cheevo-id="${e.ID}">\n                <button class="header-button header-icon  target__comments-button comments-button chat-icon" data-title="${ui.lang.showCommentsHint}">\n                <button class="header-button header-icon  delete-icon delete-from-target" data-title="remove"></button>\n            </div>\n            <div class="prev">\n                <img\n                class="prev-img"\n                src="${e.prevSrc}"\n                alt="${e.Title}"\n                />\n            </div>\n            <div class="target__cheevo-details">\n                <h3 class="target__cheevo-header">\n                    ${i?T.cheevoLevel(i,!0):""}\n                    \x3c!--${e.genres.length>0?e.genres?.map((e=>I(e))).join(""):""}--\x3e\n                    <a target="_blanc" data-title="go to RA cheevo-page" href="https://retroachievements.org/achievement/${e.ID}">\n                        ${e.Title}\n                    </a>\n                </h3>\n                <p class="achiv-description">${e.Description}</p>\n                <div class="target-other-descriptions icons-row-list">\n                    ${y.cheevoType(e.type)}\n                    ${m(e.Points)}\n                    ${u(e.TrueRatio)}\n                    ${p(n,e.rateEarnedHardcore)}\n                    ${_(e.retroRatio)}\n                    ${T.difficultBadge(e.difficulty)}\n                </div>\n            </div>\n            `,t})(e);return t.classList.add("notification-achiv","new-achiv"),t}getDeltaTime(e){let t=+e,s=~~(((new Date).getTime()-t)/1e3);return s<120?"moment ago":s<600?"few minutes ago":s<3600?~~(s/60)+" minutes ago":s<43200?new Date(t).toLocaleTimeString().replace(/:[^:]*$/gi,""):new Date(t).toLocaleString().replace(/:[^:]*$/gi,"")}}const Ze={SEGA:{"SG-1000":"33","Master System":"11","Genesis/Mega Drive":"1","Game Gear":"15","Sega CD":"9","32X":"10",Saturn:"39",Dreamcast:"40"},Nintendo:{"NES/Famicom":"7","Game Boy":"4","SNES/Super Famicom":"3","Game Boy Color":"6","Nintendo 64":"2","Game Cube":"16","Game Boy Advance":"5","Virtual Boy":"28","Nintendo DS":"18","Nintendo DSi":"78","Pokemon Mini":"24"},NEC:{"PC Engine/TurboGrafx-16":"8","PC Engine CD/TurboGrafx-CD":"76","PC-8000/8800":"47","PC-FX":"49"},SONY:{PlayStation:"12","PlayStation 2":"21","PlayStation Portable":"41"},SNK:{"Neo Geo Pocket":"14","Neo Geo CD":"56"},Atari:{"Atari 2600":"25","Atari 7800":"51","Atari Lynx":"13","Atari Jaguar":"17","Atari Jaguar CD":"77"},Other:{"Magnavox Odyssey 2":"23",Arcade:"27","Apple II":"38","Amstrad CPC":"37",MSX:"29","3DO Interactive Multiplayer":"43",ColecoVision:"44",Intellivision:"45",Vectrex:"46",WonderSwan:"53","Fairchild Channel F":"57","Watara Supervision":"63","Mega Duck":"69",Arduboy:"71","WASM-4":"72","Arcadia 2001":"73","Interton VC 4000":"74","Elektor TV Games Computer":"75",Uzebox:"80"},Special:{Events:"101",Standalone:"102"}},Qe=Object.freeze({RETAIL:"Retail",HACK:"Hack",UNLICENSED:"Unlicensed",DEMO:"Demo",HOMEBREW:"Homebrew",PROTOTYPE:"Prototype"}),Je={t:"FixedTitle",b:"badges",i:"ID",c:"ConsoleID",j:"ImageIcon",a:"NumAchievements",p:"Points",d:"Date",e:"Coop",r:"Rating",g:"Genres",h:"HLTB"};class et extends z{widgetIcon={description:"games widget",iconID:"side-panel__games",onChangeEvent:"ui.games.VISIBLE = this.checked",iconClass:"games-icon"};contextMenuItems(e){return[{type:"button",name:"context-update-game",id:"context-update-game",label:"**Update game**",event:`onclick="watcher.updateGameData(${e})"`},{type:"checkbox",name:"context-add-to-favourites",id:"context-add-to-favourites",label:"fav",checked:pt.games.FAVOURITES.includes(+e),event:`onclick="ui.games.addToFavourite(event,${e})"`}]}get headerControls(){return[{type:"selector",label:pt.lang.sort,id:"games__sort-selector",selectValues:[{type:"radio",name:"games__sort-type",id:`games__sort-type-${me}`,label:pt.lang.releaseDate,checked:this.SORT_NAME===me,event:`onchange="ui.games.SORT_NAME = '${me}'"`},{type:"radio",name:"games__sort-type",id:`games__sort-type-${le}`,label:pt.lang.points,checked:this.SORT_NAME===le,event:`onchange="ui.games.SORT_NAME = '${le}'"`},{type:"checkbox",name:"games__sort-type-order",id:"games__sort-type-order",label:pt.lang.reverse,checked:this.REVERSE_SORT,event:'onchange="ui.games.REVERSE_SORT = this.checked"'}]},{type:"checkbox",label:pt.lang.filter,id:"games__filter-list-checkbox",onChange:"ui.games.showFilters(this.checked)",checked:!1},{type:"search",label:pt.lang.search,id:"games__search-text-input",value:"",onChange:"ui.games.searchInputEvent(event)",title:pt.lang.searchGameInputHint}]}get platformFilterItems(){return Object.keys(Ze).reduce(((e,t)=>{const s={label:t,type:"group"},i=Object.keys(Ze[t]).reduce(((e,s)=>{const i={label:s,type:"checkbox",name:"filter-by-platform",checked:this.PLATFORMS_FILTER.includes(Ze[t][s]),onChange:`ui.games.platformCheckboxChangeEvent(this,${Ze[t][s]})`,id:`filter-by-platform-${Ze[t][s]}`};return e.push(i),e}),[]);return e=[...e,s,...i]}),[])}get awardsFilterItems(){return Object.keys(this.awardTypes).reduce(((e,t)=>{const s={type:"checkbox",label:this.awardTypes[t],name:"filter-by-award",value:"award",checked:this.AWARD_FILTER.includes(t),onChange:`ui.games.awardCheckboxChangeEvent(this,'${t}')`,id:`filter-by-award-${t}`};return e.push(s),e}),[])}get releaseVersionFilterItems(){return Object.keys(Qe).reduce(((e,t)=>{const s={type:"checkbox",label:Qe[t],name:"filter-by-release",value:"release",checked:this.RELEASE_FILTER.includes(Qe[t]),onChange:`ui.games.releaseCheckboxChangeEvent(this,'${Qe[t]}')`,id:`filter-by-release-${t}`};return e.push(s),e}),[])}get genresFilterItems(){return Object.keys(a).reduce(((e,t)=>{const s={type:"checkbox",label:a[t],name:"filter-by-genre",checked:this.GENRE_FILTER.includes(t),onChange:`ui.games.genreCheckboxChangeEvent(this,'${t}')`,id:`filter-by-genre-${t}`};return e.push(s),e}),[])}get sortItems(){return[{type:"radio",label:pt.lang.released,name:"games__sort-by",checked:this.SORT_NAME===me,onChange:`ui.games.SORT_NAME = '${me}'`,id:"games__sort-by-date"},{type:"radio",label:pt.lang.points,name:"games__sort-by",checked:this.SORT_NAME===le,onChange:`ui.games.SORT_NAME = '${le}'`,id:"games__sort-by-points"}]}set FAVOURITES(e){this._favs=e,ut.ui.favouritesGames=e,ut.writeConfiguration()}get FAVOURITES(){return this._favs??[]}set COOP_FILTER(e){this.coopOnly=e,this.updateGamesList()}get COOP_FILTER(){return this.coopOnly??!1}awardCheckboxChangeEvent(e,t){let s=this.AWARD_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.AWARD_FILTER=s}releaseCheckboxChangeEvent(e,t){let s=this.RELEASE_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.RELEASE_FILTER=s}platformCheckboxChangeEvent(e,t){let s=this.PLATFORMS_FILTER;e.checked?s.push(t+""):s=s.filter((e=>e!=t)),this.PLATFORMS_FILTER=s}genreCheckboxChangeEvent(e,t){let s=this.GENRE_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.GENRE_FILTER=s}set YEARS_FILTER(e){this.yearsFilter=e,this.updateGamesList()}get YEARS_FILTER(){return this.yearsFilter??{from:-1/0,to:1/0}}set CHEEVOS_COUNT_FILTER(e){this.cheevosCountFilter=e,this.updateGamesList()}get CHEEVOS_COUNT_FILTER(){return this.cheevosCountFilter??{from:-1/0,to:1/0}}set POINTS_PER_CHEEVO_FILTER(e){console.log("ppc:",e),this.ppcFilter=e,this.updateGamesList()}get POINTS_PER_CHEEVO_FILTER(){return this.ppcFilter??{from:-1/0,to:1/0}}set PLATFORMS_FILTER(e){let t=e.filter((e=>Object.keys(h).includes(e)));this.platformsFilter=t,this.updateGamesList()}get PLATFORMS_FILTER(){return this.platformsFilter??[]}set GENRE_FILTER(e){let t=e.filter((e=>Object.keys(a).includes(e)));this.genreFilter=t,this.updateGamesList()}get GENRE_FILTER(){return this.genreFilter??[]}set AWARD_FILTER(e){this.awardFilter=e,this.updateGamesList()}get AWARD_FILTER(){return this.awardFilter??[]}set RELEASE_FILTER(e){this.releaseFilter=e,this.updateGamesList()}get RELEASE_FILTER(){return this.releaseFilter??[Qe.RETAIL]}set FAVOURITES_FILTER(e){this.favouritesFilter=e,this.updateGamesList()}get FAVOURITES_FILTER(){return this.favouritesFilter}get TYPES_FILTER(){return ut.ui?.games_section?.typesFilter??["original"]}set TYPES_FILTER(e){const t=e.dataset.type??"",s=this.TYPES_FILTER;if(e.checked)s.push(t);else{const e=s.indexOf(t);-1!==e&&s.splice(e,1)}ut.ui.games_section.typesFilter=s,ut.writeConfiguration(),this.applyFilter()}set REVERSE_SORT(e){ut._cfg.ui.games_section.reverse_sort=e?-1:1,ut.writeConfiguration(),this.updateGamesList()}get REVERSE_SORT(){return ut._cfg.ui?.games_section?.reverse_sort??-1}get SORT_METHOD(){return ne[this.SORT_NAME]}get SORT_NAME(){return ut._cfg.ui?.games_section?.sort_name??me}set SORT_NAME(e){e===this.SORT_NAME&&(ut._cfg.ui.games_section.reverse_sort=-1*this.REVERSE_SORT),ut._cfg.ui.games_section.sort_name=e,ut.writeConfiguration(),this.updateGamesList()}titleFilter="";applyFilter(){const e=this.titleFilter.split(/\s/).map((e=>`(?=.*${e})`)).join(""),t=new RegExp(e,"gi");this.games=this.titleFilter?this.GAMES.filter((e=>`${e.FixedTitle} ${e.badges?.join(" ")} ${h[e.ConsoleID]}`.match(t))):this.GAMES,this.COOP_FILTER&&(this.games=this.games?.filter((e=>"true"==e.Coop))),this.PLATFORMS_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.PLATFORMS_FILTER)s==e.ConsoleID&&(t=!0);return t}))),this.GENRE_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.GENRE_FILTER)e?.Genres?.includes(+s)&&(t=!0);return t}))),this.FAVOURITES_FILTER&&(this.games=this.games.filter((e=>this.FAVOURITES.includes(e.ID)))),this.AWARD_FILTER.length>0&&(this.games=this.games.filter((e=>{let t=!1;for(let s of this.AWARD_FILTER)s==e.Award&&(t=!0);return t}))),this.RELEASE_FILTER.length>0&&(this.games=this.games.filter((e=>{for(let t of this.RELEASE_FILTER)return t===Qe.RETAIL?0===e.badges?.length:e.badges?.includes(t)}))),this.games=this.games.filter((e=>{const t=e.Points/e.NumAchievements;return t<=this.POINTS_PER_CHEEVO_FILTER.to&&t>=this.POINTS_PER_CHEEVO_FILTER.from})),this.games=this.games.filter((e=>{const t=parseInt(e.NumAchievements)??0;return t<=this.CHEEVOS_COUNT_FILTER.to&&t>=this.CHEEVOS_COUNT_FILTER.from})),this.games=this.games.filter((e=>{const t=+(e.Date?.split("-")?.[0]??0);return t<=this.YEARS_FILTER.to&&t>=this.YEARS_FILTER.from}))}applySort(){this.games=this.games.sort(((e,t)=>this.REVERSE_SORT*this.SORT_METHOD(e,t)))}platformCodes={};awardTypes={mastered:"mastered","beaten-hardcore":"beaten",completed:"completed","beaten-softcore":"beaten softcore",started:"started"};games={};gamesInfo={};constructor(){super(),this.addWidgetIcon(),this._favs=ut.ui.favouritesGames??[],this.initializeElements(),this.container.appendChild(this.sideMenuElement()),this.setValues(),this.addEvents(),this.gamesList.innerHTML='\n      <button class="games__load-button" onclick="ui.games.loadGames()"></button>\n      ',ct.applyPosition({widget:this}),this.section.querySelector(".games__main-controls").innerHTML=this.headerControls.map((e=>Ne(e))).join("\n")}initializeElements(){this.section=document.querySelector("#games_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".games_container"),this.searchbar=this.section.querySelector("#games__searchbar"),this.platformFiltersList=this.section.querySelector("#games_filter-platform-list"),this.gamesList=this.section.querySelector("#games-list")}setValues(){this.header.classList.add("fixed")}searchInputEvent(e){const t=e.target.value;this.titleFilter=t,e.target.classList.toggle("empty",""==t),this.updateGamesList()}addEvents(){super.addEvents(),this.section.addEventListener("contextmenu",(e=>{const t=e.target.closest(".games__game-item");if(t){e.preventDefault(),e.stopPropagation();const s=t.dataset.id;pt.showContextmenu({event:e,menuItems:this.contextMenuItems(s)})}})),this.section.querySelectorAll(".side-menu__subitem").forEach((e=>{const t=e.querySelector(".side-menu__item-header"),s=e.querySelector(".side-menu__header"),i=e.querySelector(".side-menu__subitem-content"),n=e.querySelector(".side-menu__submenu");t&&i&&t.addEventListener("click",(e=>{e.stopPropagation(),i.classList.add("active")})),s&&n&&s.addEventListener("click",(e=>{e.stopPropagation(),n.classList.remove("active")}))})),this.section.querySelectorAll(".statebox").forEach((e=>e.addEventListener("click",We)))}async loadWantToPlay(){const e=await _t.getWantToPlayGames({});this._favs=Array.from(new Set([...e]))}updateGamesList(){this.applyFilter(),this.applySort(),this.gamesList.innerHTML=this.gamesListHeaderHtml(),function({list:e,items:t,callback:s}){const i=document.createElement("div");i.classList.add("lazy-load_trigger"),e.appendChild(i);let n=0;const a=20,o=i=>{for(let a=0;a<i&&n<t.length;a++)e.appendChild(s(t[n++]))};o(a);const r=(s,r)=>{s.forEach((s=>{s.isIntersecting&&(o(a),r.unobserve(i),e.appendChild(i),n<t.length&&r.observe(i))}))};new IntersectionObserver(r,{root:null,rootMargin:"0px",threshold:1}).observe(i)}({list:this.gamesList,items:this.games,callback:this.gameElement})}loadGames(){this.loadWantToPlay().then(this.getAllGames().then((()=>{this.updateGamesList()}))),this.loadGameInfo()}async loadGameInfo(){const e=await fetch("./json/games/all_info.json");this.gamesInfo=await e.json()}async getAllGames(){this.GAMES={};try{const e=await fetch("./json/games/all_ext_min.json"),t=(e=>e.map((e=>{let t={};if(Object.keys(e).forEach((s=>{t={...t,[Je[s]]:e[s]}})),t.HLTB){const e=Math.min(...Object.values(t.HLTB)),s=`${e>=60?`${~~(e/60)}hr${e>119?"s":""}`:""} ${e%60>0?e%60+"mins":""}`;t.timeToBeat=s}return t.ImageIcon=`/Images/${t.ImageIcon}.png`,!t.badges&&(t.badges=[]),!t.Genres&&(t.Genres=[]),t})))(await e.json()),s=await _t.SAVED_COMPLETION_PROGRESS;for(let e of s.Results){let s=t.find((t=>e.ID===t.ID));s?(e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",e.MostRecentAwardedDate&&(s.MostRecentAwardedDate=e.MostRecentAwardedDate)):(s=e,s.ImageIcon=s.ImageIcon.match(/\d+/gi)[0],e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",s.Points="",t.push(s))}this.GAMES=t}catch(e){return[]}}gameElement(e){const t=document.createElement("li");var s;return t.classList.add("platform_game-item","games__game-item"),t.dataset.id=e.ID,t.innerHTML=`\n            <img class="game-preview_image" src="${D(e.ImageIcon)}" alt="game preview">\n            <h3 class="game-description_title">\n            <button data-title="${pt.lang.showGameInfoHint}" class="game-description_button"\n                    onclick="ui.games.showGameInfoPopup(${e.ID})">\n                    ${e.FixedTitle} \n                    ${e.Award?T.infoBadge(e.Award):""}\n                    ${e.badges?.length?f(e.badges,"infoBadge"):""} \n                    ${s=e.Coop,"true"===s?T.infoBadge("coop"):""} \n                    ${e.Genres?function(e,t="gameTitle"){return f(e.map((e=>a[e])),t)}(e.Genres,"infoBadge"):""}\n            </button>\n            </h3>\n            <div class="game-description__info icons-row-list"> \n                ${A(e.ConsoleID)}\n                ${E(e.Date||"n/a")}\n                ${S(e.Rating||"n/a")}\n                ${g((e.NumAwardedHardcore?e.NumAwardedHardcore+"/":"")+e.NumAchievements)}\n                ${m(e.Points)}\n                ${v(e.timeToBeat)}\n            </div>\n        `,t}gamesListHeaderHtml=()=>`\n      \x3c!--<div class="platform_game-item header">\n        <h3 class="header__game-description game-description_title ${"title"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'title'">Title\n        </h3>\n        <p data-title="award type" class="header__game-description ${"award"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}" onclick="ui.games.SORT_NAME = 'award'">\n          <i class="description-icon award_icon"></i>\n        </p>\n        <div class="header__game-description"><i class="description-icon favourite_icon checked"></i></div>\n        <p data-title="Rating" class="game-description header__game-description  game-rating ${"rating"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'rating'">\n            Rating\n        </p>\n        <p data-title="Date" class="game-description header__game-description  game-date ${"date"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'date'">\n            Date\n        </p>\n        <p data-title="achievements count" class=" game-description  achievements-count"\n          >\n            Platform\n        </p>\n        <p data-title="achievements count" class="header__game-description game-description  achievements-count ${"achievementsCount"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n            onclick="ui.games.SORT_NAME ='achievementsCount'">\n              Cheevos\n          </p>\n        <p data-title="points count" class="header__game-description game-description  points-count ${"points"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n            onclick="ui.games.SORT_NAME = 'points'">\n              Points\n          </p>\n  \n          <p data-title="" class="game-description">Links</p>\n        </div>--\x3e\n    `;addToFavourite(e,t){const s=this.FAVOURITES.includes(t);this.FAVOURITES=s?this.FAVOURITES.filter((e=>e!=t)):[t,...this.FAVOURITES]}showFilters(e=!0){this.section.querySelector(".section__side-menu")?.classList.toggle("active",e)}toggleFilterList(e,t){const s=()=>{this.section.querySelector(".games__filters-list")?.remove(),this.section.querySelectorAll(".games__filter-header .extended").forEach((e=>e.classList.remove("extended")))},i=e.target.closest("button");if(i.classList.contains("extended"))s();else{let e;switch(s(),i.classList.add("extended"),t){case"platform":e=this.generateCheckboxList(this.platformFilterItems);break;case"award":e=this.generateCheckboxList(this.awardsFilterItems);break;case"genre":e=this.generateCheckboxList(this.genresFilterItems)}this.section.append(e),this.section.querySelector(".games__filter-container").appendChild(e)}}toggleSortList(e){const t=()=>{this.section.querySelector(".games__filters-list")?.remove(),this.section.querySelectorAll(".games__filter-header .extended").forEach((e=>e.classList.remove("extended")))};if(e.target.classList.contains("extended"))t();else{e.target.classList.toggle("extended");const t=this.generateCheckboxList(this.sortItems);this.section.append(t),this.section.querySelector(".games__filter-container").appendChild(t)}}generateCheckboxList(e){const t=Object.values(e).reduce(((e,t)=>{if("group"==t.type){const s=document.createElement("li");s.classList.add("filter-list__platform-header"),s.innerText=t.label+": ",e.appendChild(s)}else{const s=document.createElement("li");s.classList.add("checkbox-input_container"),s.innerHTML=Ie(t),e.appendChild(s)}return e}),document.createElement("ul"));return t.classList.add("games__filters-list"),t}async showGameInfoPopup(e=1){document.querySelectorAll(".game-popup__section").forEach((e=>e.remove()));const t=document.createElement("div"),s=await _t.getGameProgress({gameID:e});t.innerHTML=`\n            <section class="section game-popup__section">\n                <div class="game-popup__header-container header-container">\n                    <h2 class="widget-header-text"><a href="${N(s.ID)}" target="_blank">${s.FixedTitle} ${f(s.badges)}</a></h2>\n                    <button class="header-button header-icon close-icon" onclick="this.closest('section').remove();">\n                        \n                    </button>\n                </div>\n                <div class="game-info__container">\n                    <div class="game-info__images-container scrollable">\n                        <img src="${D(s.ImageBoxArt)}" alt="" class="game__image">\n                        <img src="${D(s.ImageIngame)}" alt="" class="game__image">\n                        <img src="${D(s.ImageTitle)}" alt="" class="game__image">\n        \n                    </div>\n                    <div class="game-info__descriptions-container">\n                        <div class="game-description__property">Platform: <span>${s?.ConsoleName}</span></div>\n                        <div class="game-description__property">Developer: <span>${s?.Developer} Soft</span></div>\n                        <div class="game-description__property">Genre: <span>${s?.Genre}</span></div>\n                        <div class="game-description__property">Publisher: <span>${s?.Publisher} Soft</span></div>\n                        <div class="game-description__property">Released: <span>${s?.Released}</span></div>\n                        <div class="game-description__property">Achievements: <span>${s?.NumAwardedToUserHardcore} / ${s?.NumAwardedToUser} / ${s?.NumAchievements}</span>\n                        </div>\n                        <div class="game-description__property">Retropoints : <span>\n                        ${s?.earnedStats.hard.retropoints} / ${s?.TotalRetropoints}</span></div>\n                        <div class="game-description__property">Points : <span>\n                            ${s?.earnedStats.hard.points} / ${s?.earnedStats.soft.points} / ${s?.totalPoints}</span></div>\n                            <div class="game-description__property">RetroRatio : <span>${s?.retroRatio}</span></div>\n                        <div class="game-description__property">Players : <span>${s?.masteredCount} / ${s?.beatenCount} / ${s?.players_total}</span></div>\n                        <div class="game-description__property">Completion : <span>${s?.masteryRate}% / ${s?.beatenRate}%</span></div>\n                    </div>\n                    <div class="game-info__cheevos-container">\n        \n                    </div>\n                </div>\n            </section>\n        `,pt.app.appendChild(t)}toggleFullscreen(){this.section.classList.toggle("fullscreen")}sideMenuElement(e,t){e?t=`<-- ${t}`:(t=`${pt.lang.filters}`,e=[{title:`${pt.lang.platform}`,type:"submenu",submenu:[{elements:this.platformFilterItems}]},{title:`${pt.lang.genre}`,type:"submenu",submenu:[{elements:this.genresFilterItems}]},{title:`${pt.lang.releaseYear}:`,elements:[{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.from}`,onChange:"ui.games.YEARS_FILTER =  {...ui.games.YEARS_FILTER, from: Number(this.value) || 0}"},{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.to}`,onChange:"ui.games.YEARS_FILTER =  {...ui.games.YEARS_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${pt.lang.cheevosCount}:`,elements:[{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.from}`,onChange:"ui.games.CHEEVOS_COUNT_FILTER =  {...ui.games.CHEEVOS_COUNT_FILTER, from: Number(this.value) || 0}"},{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.to}`,onChange:"ui.games.CHEEVOS_COUNT_FILTER =  {...ui.games.CHEEVOS_COUNT_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${pt.lang.pointsPerCheevo}:`,elements:[{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.from}`,onChange:"ui.games.POINTS_PER_CHEEVO_FILTER = {...ui.games.POINTS_PER_CHEEVO_FILTER, from: Number(this.value) || 0}"},{type:"number",name:"context-update-game",id:"context-update-game",label:`${pt.lang.to}`,onChange:"ui.games.POINTS_PER_CHEEVO_FILTER = {...ui.games.POINTS_PER_CHEEVO_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${pt.lang.highestAward}:`,elements:this.awardsFilterItems},{title:`${pt.lang.releaseVersion}:`,elements:this.releaseVersionFilterItems},{title:`${pt.lang.other}:`,elements:[{type:"checkbox",label:"WTPlay",name:"filter-by-wtp",checked:this.FAVOURITES_FILTER,onChange:"ui.games.FAVOURITES_FILTER = this.checked",id:"filter-by-wtp"},{type:"checkbox",label:"Coop",name:"filter-by-coop",checked:this.COOP_FILTER,onChange:"ui.games.COOP_FILTER = this.checked",id:"filter-by-coop"}]}]);const s=({title:e,elements:t,type:s,submenu:i})=>{const n=e=>`<h3 class="side-menu__item-header">\n                        ${e}\n                    </h3>`,a=(e,t)=>`\n                <div class="side-menu__item-container side-menu__subitem" >\n                    ${t?n(t):"<br>"}\n                    <div class="side-menu__subitem-content side-menu__submenu">\n                        ${this.sideMenuElement(e,t).outerHTML}\n                    </div>\n                </div>\n            `;return"submenu"===s?a(i,e):`\n                <div class="side-menu__item-container">\n                    ${e?n(e):"<br>"}\n                    <div class="side-menu__item-inputs">\n                        ${t.map((e=>"object"==typeof e?Ne(e):e)).join("\n")}\n                    </div>\n                </div>\n            `},i=document.createElement("div");return i.classList.add("section__side-menu"),i.innerHTML=`\n            <h2 class="side-menu__header">${t}</h2>\n            <div class="side-menu__content scrollable">\n                ${e.map((e=>s(e))).join("")}\n            </div>\n        `,i}}class tt{get VISIBLE(){return!this.section.classList.contains("hidden")}set VISIBLE(e){ct.switchSectionVisibility({section:this.section,visible:e}),this.widgetIcon&&(this.widgetIcon.checked=e)}aotwObj;autoremove;constructor(){this.generateAotwElement().then((()=>{this.initializeElements(),this.addEvents(),pt.target.showAotwEvent({cheevo:this.aotwObj})}))}initializeElements(){this.section=document.querySelector(".aotw_section")}addEvents(){this.section.addEventListener("mouseover",(()=>this.stopAutoRemove()))}setValues(){ct.switchSectionVisibility({section:this.section,visible:!0})}stopAutoRemove(){this.autoremove&&clearTimeout(this.autoremove)}doAnim(){this.section.classList.remove("show-aotw","hide-aotw","disposed"),setTimeout((()=>this.section.classList.add("show-aotw")),100),this.autoremove=setTimeout((()=>this.section.classList.add("hide-aotw")),1e4)}addGlowEffectToCard(e){var t=e.querySelector(".marker");let s;function i(s){var i=s.offsetX,n=s.offsetY,a=e.offsetHeight,o=e.offsetWidth,r=Math.abs(Math.floor(100/o*i)-100),c=Math.abs(Math.floor(100/a*n)-100);t.style.backgroundPosition=`${r}% ${c}%`}e.addEventListener("mouseenter",(e=>{s=t.getBoundingClientRect(),t.classList.remove("hidden"),t.addEventListener("mousemove",(e=>{i(e)}))})),e.addEventListener("mouseleave",(s=>{e.style.transform="",e.style.background="",t.classList.add("hidden"),e.removeEventListener("mousemove",(e=>i(e)))}))}checkCheevo({earnedAchievementIDs:e}){e?.forEach((e=>{e==this.aotwObj.ID&&(Et.CHEEVOS[e].isEarned&&(this.section.classList.add("earned"),this.aotwObj.isEarned=!0,this.doAnim()),Et.CHEEVOS[e].isHardcoreEarned&&(this.section.classList.add("earned","hardcore"),this.aotwObj.isEarnedHardcore=!0),ut.aotw=this.aotwObj)}))}async getAotwObject(){if(!ut.aotw){const e=await _t.getAotW();ut.aotw=e}return this.aotwObj=ut.aotw,this.aotwObj}showGameInfo(){pt.games.showGameInfoPopup(this.aotwObj.GameID)}async generateAotwElement(){const e=await this.getAotwObject(),t=document.createElement("section");t.classList.add("section","aotw_section","disposed","compact"),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isEarnedHardcore),t.id="aotw_section",t.innerHTML=`\n        <div class="header-container">\n            <div class="header-icon q-icon icon">\n            </div>\n  \n            <h2 class="widget-header-text">\n            <a class="" target="_blanc"\n                        href="https://retroachievements.org/achievement/${e.ID}">\n            AotW</a></h2>\n            <button class="header-button info-icon header-icon" onclick="ui.aotw.showGameInfo()">\n            </button>\n            <div class="header-button close-icon header-icon" onclick="event.target.closest('.section')?.classList.add('hide-aotw')">\n            </div>\n        </div>\n        <div class="aotw-card" data-id="4800">\n            <div class="aotw-backside aotw-side"></div>\n            <div class="aotw__container aotw-side">\n                <div class="progression_descriptions aotw_descriptions">\n                    <p class="signed-icon" title="points">\n                      <i class="progression_description-icon description-icon points-icon"></i>\n                      ${e.Points}\n                    </p>\n                    <p class="signed-icon" title="points">\n                      <i class="progression_description-icon description-icon retropoints-icon"></i>\n                      ${e.TrueRatio}\n                    </p>\n                    <p class="signed-icon" title="earned by">\n                      <i class="progression_description-icon description-icon trending-icon"></i>\n                      ${(100*e.UnlocksHardcoreCount/e.TotalPlayers).toFixed(2)}%\n                    </p>\n                    <p class="signed-icon" title="earned by"> \n                      <i class="progression_description-icon description-icon rarity-icon"></i>\n                      ${(e.TrueRatio/e.Points).toFixed(2)}\n                    </p>\n                    ${e.Type?`\n                      <div class="progression_description-icon condition ${e.Type}" title="achievement type">\n                      </div>`:""}\n                </div>\n                <div class="progression-achiv_prev-container">\n                    <img class="progression-achiv_prev-img" src="https://media.retroachievements.org/${e.BadgeURL}"\n                        alt=" ">\n                </div>\n                <h3 class="progression_achiv-name">\n                    <a class="progression_achiv-link" target="_blanc"\n                        href="https://retroachievements.org/achievement/${e.ID}">${e.Title}</a>\n                </h3>\n                <div class="progression-details">\n                ${e.Description}\n                </div>\n  \n                <div class="marker hidden"></div>\n            </div>\n          \n        </div>\n      `,pt.app.appendChild(t)}}class st extends z{widgetIcon={description:"status widget (v2)",iconID:"side-panel__status-v2",onChangeEvent:"ui.status.VISIBLE = this.checked",badgeLabel:"v2",iconClass:"status-icon"};get contextMenuItems(){return[{label:pt.lang.elements,elements:[{type:"checkbox",name:"context-show-rp",id:"context-show-rp",label:pt.lang.richPresence,checked:this.SHOW_RP,event:'onchange="ui.status.SHOW_RP = this.checked"'},{type:"checkbox",name:"context-show-ticker",id:"context-show-ticker",label:pt.lang.ticker,checked:this.SHOW_TICKER,event:'onchange="ui.status.SHOW_TICKER = this.checked"'},{type:"checkbox",name:"context-show-progression",id:"context-show-progression",label:pt.lang.progression,checked:this.SHOW_PROGRESSION,event:'onchange="ui.status.SHOW_PROGRESSION = this.checked"'},{type:"checkbox",name:"context-show-progressbar",id:"context-show-progressbar",label:pt.lang.progressbar,checked:this.SHOW_PROGRESSBAR,event:'onchange="ui.status.SHOW_PROGRESSBAR = this.checked"'}]},{label:pt.lang.time,elements:[{type:"radio",name:"context_game-time",id:"context_show-playTime",label:pt.lang.gameTime,checked:"playTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'playTime';\""},{type:"radio",name:"context_game-time",id:"context_show-sessionTime",label:pt.lang.sessionGameTime,checked:"sessionTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'sessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-totalTime",label:pt.lang.totalTime,checked:"totalSessionTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'totalSessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-timer",label:pt.lang.timer,checked:"timer"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'timer';\""},{prefix:pt.lang.timer,postfix:pt.lang.min,type:"input-number",id:"context-menu_stats-timer-duration",label:pt.lang.timer,value:~~(this.TIMER_TIME/60*100)/100,event:'onchange="ui.status.TIMER_TIME = this.value;"',onChange:"ui.status.TIMER_TIME = this.value;"}]}]}get SHOW_RP(){return ut.getUIProperty({sectionID:this.section.id,property:"showRichPresence"})??!0}set SHOW_RP(e){ut.saveUIProperty({sectionID:this.section.id,property:"showRichPresence",value:e}),this.setElementsProperties()}get SHOW_CHEEVOS_LIST(){return ut.getUIProperty({sectionID:this.section.id,property:"showcheevosList"})??!0}set SHOW_CHEEVOS_LIST(e){ut.saveUIProperty({sectionID:this.section.id,property:"showcheevosList",value:e}),this.setElementsProperties()}get SHOW_PROGRESSBAR(){return ut.getUIProperty({sectionID:this.section.id,property:"showProgressbar"})??!0}set SHOW_PROGRESSBAR(e){ut.saveUIProperty({sectionID:this.section.id,property:"showProgressbar",value:e}),this.setElementsProperties()}get SHOW_TICKER(){return ut.getUIProperty({sectionID:this.section.id,property:"showTicker"})??!0}set SHOW_TICKER(e){ut.saveUIProperty({sectionID:this.section.id,property:"showTicker",value:e}),this.setElementsProperties()}get SHOW_PROGRESSION(){return ut.getUIProperty({sectionID:this.section.id,property:"showProgression"})??!0}set SHOW_PROGRESSION(e){ut.saveUIProperty({sectionID:this.section.id,property:"showProgression",value:e}),this.setElementsProperties()}get SHOW_TIME(){return ut.getUIProperty({sectionID:this.section.id,property:"time"})??"playTime"}set SHOW_TIME(e){ut.saveUIProperty({sectionID:this.section.id,property:"time",value:e}),this.gameElements.time.innerText=this.getActiveTime()}get TIMER_TIME(){return ut.getUIProperty({sectionID:this.section.id,property:"timerTime"})??2}set TIMER_TIME(e){e<=0&&(e=1),e>1440&&(e=1440),e*=60,ut.saveUIProperty({sectionID:this.section.id,property:"timerTime",value:e})}ACHIV_DURATION=15e3;IS_HARD_MODE=!0;getActiveTime=()=>{let e=0;switch(this.SHOW_TIME){case"totalSessionTime":e=Et.playTime.sessionTime;break;case"playTime":e=Et.playTime.totalGameTime;break;case"sessionTime":e=Et.playTime.gameTime;break;case"timer":e=this.TIMER_TIME-Et.playTime.gameTime}return o(e,!0)};constructor(){super(),this.addWidgetIcon(),this.initializeElements(),ct.applyPosition({widget:this}),this.setElementsProperties(),this.addEvents()}initializeElements(){this.section=document.querySelector(".rp__section"),this.watchButton=this.section.querySelector("#rp__watch-button"),this.indicatorElement=this.section.querySelector(".rp__indicator"),this.gameElements={icon:this.section.querySelector(".rp__game-image"),title:this.section.querySelector(".rp__game-title"),platform:this.section.querySelector(".rp__game-platform"),gameIcons:this.section.querySelector(".rp__game-icons"),time:this.section.querySelector(".rp__game-time")},this.alertElements={container:this.section.querySelector(".rp__alert-container"),preview:this.section.querySelector(".rp__alert-preview"),title:this.section.querySelector(".rp__alert-title"),description:this.section.querySelector(".rp__alert-description"),badges:this.section.querySelector(".rp__alert-badges")},this.richPresenceElement=this.section.querySelector(".rp__rich-presence"),this.progressionElements={header:this.section.querySelector(".rp__progression-target"),pointsContainer:this.section.querySelector(".rp__progression-points")},this.progressbarElements={container:this.section.querySelector(".rp__progressbar-container"),title:this.section.querySelector(".rp__progressbar-title"),lastCheevos:this.section.querySelector(".rp__last-cheevos")},this.tickerElement=this.section.querySelector(".rp__ticker"),this.ticker=ke({container:this.tickerElement,textGenerator:xe}),this.cheevosList=this.section.querySelector(".rp__target-cheevos")}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".resizer")?(this.section.classList.add("resized"),j({event:e,section:this.section})):e.target.matches(".comments-button")?(e.stopPropagation(),ye(Et.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),$e().open(Et.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):q(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{pt.showContextmenu({event:e,menuItems:this.contextMenuItems})})),this.watchButton.addEventListener("click",(e=>{e.stopPropagation(),Et.isActive?Et.stop():Et.start()}))}setElementsProperties(){this.cheevosList.classList.toggle("grid-list","grid"==this.LIST_TYPE),this.section.classList.toggle("show-ticker",this.SHOW_TICKER),this.section.classList.toggle("show-cheevos-list",this.SHOW_CHEEVOS_LIST),this.section.classList.toggle("show-progression",this.SHOW_PROGRESSION),this.section.classList.toggle("show-progressbar",this.SHOW_PROGRESSBAR),this.richPresenceElement.classList.toggle("hidden",!this.SHOW_RP),this.SHOW_TICKER&&Et.GAME_DATA&&this.ticker.startScrolling()}gameChangeEvent(e=!1){e&&Et.IS_WATCHING&&this.addAlertsToQuery([{type:C.game,value:Et.GAME_DATA}]),this.fillGameData(),this.SHOW_TICKER&&this.ticker.startScrolling()}fillGameData(){(()=>{const{ImageIcon:e,FixedTitle:t,badges:s,ConsoleName:i,ID:n}=Et.GAME_DATA;this.gameElements.icon.setAttribute("src",D(e)),this.gameElements.title.innerHTML=`\n            ${t||"Some game name"}\n            ${f(s)}\n            `,this.gameElements.title.setAttribute("href",N(n)),setTimeout((()=>this.startAutoScrollElement(this.gameElements.title,!0,1e4)),1e4),this.gameElements.platform.innerHTML=i,this.richPresenceElement.innerText="Rich presence",this.gameElements.gameIcons.innerHTML=`\n                <p class="signed-icon" data-title="${pt.lang.cheevosCount}">\n                    ${y.cheevos}\n                    ${Et.GAME_DATA.NumAchievements}\n                </p>\n\n                <p class="signed-icon" data-title="${pt.lang.points}">\n                    ${y.points}\n                    ${Et.GAME_DATA.totalPoints}\n                </p>\n\n                <p class="signed-icon" data-title="${pt.lang.trueRatio}">\n                    ${y.trueratio}\n                    ${Et.GAME_DATA.retroRatio}\n                </p>\n            `;const a=this.getActiveTime();this.gameElements.time.innerHTML=a})(),(()=>{const e=e=>this.IS_HARD_MODE?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",t=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.PROGRESSION)).sort(((e,t)=>ne.default(e,t))),s=Object.values(Et.CHEEVOS).filter((e=>e.type==Y.WIN)),i=t.reduce(((t,s)=>t+=`\n                    <div class="rp__progression-point ${e(s)}" data-achiv-id=${s.ID}></div>\n                `),""),n=s?.length>0?`\n                <div class="rp__win-points">\n                    ${s.reduce(((t,s)=>t+=`\n                            <div class="rp__progression-point win ${e(s)}" data-achiv-id=${s.ID}></div>\n                        `),"")}\n                 </div>\n                `:"";this.progressionElements.pointsContainer.innerHTML=i+n;const a=Object.values(Et.CHEEVOS).filter((e=>K.progression(e))).sort(((e,t)=>ne.default(e,t))).find((t=>!e(t)));this.progressionElements.header.innerHTML=a?a.Description:Et.GAME_DATA?.progressionAward?pt.lang.gameBeatenMsg:pt.lang.noProgressionMsg;const o=this.progressionElements.pointsContainer.querySelector(`[data-achiv-id="${a?.ID}"`);o?.classList.add("focus")})(),(()=>{const e=this.IS_HARD_MODE?Et.GAME_DATA?.earnedStats?.hard?.count??0:Et.GAME_DATA?.earnedStats?.soft?.count??0,t=Et.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=(()=>{switch(Et.GAME_DATA.award){case"mastered":return pt.lang.gameMasteredMsg;case"completed":return pt.lang.gameCompletedMsg;default:const s=`${e}/${t} ${T.gold(parseInt(100*e/t)+"%")}`;return pt.lang.unlockProgressMsg?.replace("***",s)}})(),this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(Et.CHEEVOS).filter((e=>K.earned(e))).sort(((e,t)=>ne.latest(e,t))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo cheevo-popup" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="${L(t.BadgeName)}" alt=""></li>\n            `),"")})(),this.startAutoScrollElement(this.richPresenceElement,!0,1e4)}updateProgress({earnedAchievementIDs:e}){const t=()=>{const e=this.progressionElements.pointsContainer.querySelector(".rp__progression-point:not(.earned)")?.dataset?.achivId,t=Et.CHEEVOS[e];this.progressionElements.header.innerHTML=t?t.Description:Et.GAME_DATA?.progressionAward?pt.lang.gameBeatenMsg:pt.lang.noProgressionMsg},s=()=>{const e=this.IS_HARD_MODE?Et.GAME_DATA?.earnedStats?.hard?.count??0:Et.GAME_DATA?.earnedStats?.soft?.count??0,t=Et.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=(()=>{switch(Et.GAME_DATA.award){case"mastered":return pt.lang.gameMasteredMsg;case"completed":return pt.lang.gameCompletedMsg;default:const s=`${e}/${t} ${T.gold(parseInt(100*e/t)+"%")}`;return pt.lang.unlockProgressMsg?.replace("***",s)}})(),this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(Et.CHEEVOS).filter((e=>K.earned(e))).sort(((e,t)=>ne.latest(e,t))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo cheevo-popup" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="${L(t.BadgeName)}" alt=""></li>\n            `),"")};e?.length>0&&(this.IS_HARD_MODE=!!Et.CHEEVOS[e[0]].isHardcoreEarned),e.forEach((e=>{const i=Et.CHEEVOS[e]?.isHardcoreEarned?"hardcore":"-";this.section.querySelectorAll(`[data-achiv-id="${e}"]`).forEach((e=>e.classList.add("earned",i))),t(),s()}))}alertsQuery=[];addAlertsToQuery(e){this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts())}async startAlerts(){const e=()=>{this.alertElements.container.classList.remove("hide-alert","show-alert","new-game","new-achiv","new-award","stats","beaten","mastered","hardcore","mastered","beaten-softcore","completed")},t=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:c,beatenRate:l}=e;this.alertElements.preview.src=D(i),this.alertElements.title.innerHTML=`${t} ${f(s)}\n            <i class="badge">${a}</i>\n            `;let h=`\n                ${I(y.cheevos+r)}\n                ${I(y.points+n)}\n                ${I(y.retropoints+o)}\n                ${I(c+"% MASTERED RATE")}\n                ${I(l+"% BEATEN RATE")}\n            `;this.alertElements.description.innerText="",this.alertElements.badges.innerHTML=h,this.alertElements.container.classList.add("new-game")},s=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:c}=e;this.alertElements.preview.src=i,this.alertElements.title.innerHTML=`\n                ${s}`,this.alertElements.description.innerText=e.Description;let l=t?`\n                    ${I(y.points+" +"+n)}\n                    ${I(y.retropoints+" +"+a)}\n                    ${I("TOP"+r)}\n                    ${T.difficultBadge(c)}\n                `:`\n                    ${I(y.points+" +"+n)}\n                    ${I("TOP"+o)}\n                    ${T.difficultBadge(c)}\n                `,h=e.genres?.map((e=>I(e)))?.join("\n")??"";this.alertElements.badges.innerHTML=h+l,this.alertElements.container.classList.toggle("hardcore",e.isHardcoreEarned),this.alertElements.container.classList.add("new-achiv")},i=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:c,beatenRate:l,completedRate:h,beatenSoftRate:d,ID:g,NumAchievements:m,TimePlayed:u}=e,p="mastered"==t?c:"beaten"==t?l:"completed"==t?h:d,_=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(u);this.alertElements.preview.src=D(n),this.alertElements.title.innerHTML=`${s} ${f(i)}\n            ${I("GAINED AWARD")}`;let E=`\n                ${I(`${t} IN ${_}`)}\n                ${I(`TOP${p}%`)}\n                ${I(`${y.cheevos}${o.hard.count}/${m}`)}\n                ${I(`${y.points}${o.hard.points}/${a}`)}\n                ${I(`${y.retropoints}${o.hard.retropoints}/${r}`)}\n            `;this.alertElements.badges.innerHTML=E,this.alertElements.description.innerText="",this.alertElements.container.classList.add(t),this.alertElements.container.classList.add("new-award")},n=e=>{this.alertElements.preview.src=ut.userImageSrc,this.alertElements.title.innerHTML=`\n                ${ut.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${I(`Rank: ${e.rank} ${e.deltaRank}`)}\n                ${I(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`)}\n                ${I(`${y.cheevos} +${e.cheevosCount}`)}\n                ${I(`${y.points}${e.points} ${e.deltaPoints}`)}\n                ${I(`${y.retropoints}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${I(`${y.points}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.alertElements.badges.innerHTML=t,this.alertElements.description.innerText="",this.alertElements.container.classList.add("stats")},a=a=>{switch(e(),a.type){case C.game:t(a.value);break;case C.cheevo:s(a.value);break;case C.award:i(a.value,a.award);break;case C.stats:n(a.value)}};for(;this.alertsQuery.length>0;){const t=this.alertsQuery[0];if(!t.value)return void this.alertsQuery.shift();const s=()=>{a(t),this.alertElements.container.classList.add("show-alert"),setTimeout((()=>{this.startAutoScrollElement(this.alertElements.title),this.startAutoScrollElement(this.alertElements.badges),this.startAutoScrollElement(this.alertElements.description)}),2e3)},i=()=>{this.alertElements.container.classList.add("hide-alert"),setTimeout((()=>e()),500),this.alertsQuery.shift(),this.stopAutoScrollElement(this.alertElements.badges,!0),this.stopAutoScrollElement(this.alertElements.description,!0),this.stopAutoScrollElement(this.alertElements.title,!0)};await w(1e3),s(),await w(this.ACHIV_DURATION),i()}}timeWatcher(){this.watchButton.classList.toggle("active",Et.isActive),this.section.classList.toggle("watching",Et.IS_ONLINE&&Et.isActive);return{start:()=>{this.timeWatcher().stop(),this.indicatorElement.classList.add("online"),this.gameTimeInterval=setInterval((()=>{"timer"===this.SHOW_TIME&&Et.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime();e&&e!==this.gameElements.time.innerHTML&&(this.gameElements.time.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval),this.indicatorElement.classList.remove("offline","online","error","blink")}}}BLINK_ON_UPDATE=!0;blinkUpdate(){this.indicatorElement.classList.remove("offline","blink"),this.section.classList.toggle("offline",!Et.IS_ONLINE),this.indicatorElement.classList.toggle("online",Et.IS_ONLINE),this.BLINK_ON_UPDATE&&Et.IS_ONLINE||Et.IS_ONLINE}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.id||e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};const n=e;this.autoscrollAlertInterval[i].interval=setInterval((()=>{n.clientWidth==n.scrollWidth?(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(n.scrollLeft++,n.scrollLeft+n.clientWidth>=n.scrollWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),s))):(n.scrollLeft--,0==n.scrollLeft&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0);const s=e.id||e.className;clearInterval(this.autoscrollAlertInterval[s].interval),clearTimeout(this.autoscrollAlertInterval[s].timeout)}fitCheevosSize(e){let t,s;e.style.flex="1",t=e.clientHeight-2,s=e.clientWidth-10,e.style.flex="";const i=e.querySelectorAll(".target-achiv:not(.removed)").length;if(0===i)return;let n,a,o=Math.floor(Math.sqrt(s*t/i));do{o--,n=Math.floor(t/(o+2)),a=Math.floor(s/(o+2))}while(n*a<i&&o>36);o=o<36?36:o>128?128:o,e.style.setProperty("--achiv-height",o+"px")}}class it{}class nt extends z{widgetIcon={description:"game series",iconID:"side-panel__game-list",onChangeEvent:"ui.gameList.VISIBLE = this.checked",iconClass:"playlist-icon"};set VISIBLE(e){super.VISIBLE=e,Et.GAME_DATA?.ID!==this.gameSetID&&this.generateGamesSet()}get VISIBLE(){return super.VISIBLE}constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.setElementsVisibility(),this.addEvents(),ct.applyPosition({widget:this})}initializeElements(){this.section=document.getElementById("game-list"),this.content=this.section.querySelector(".widget-content__container")}gameChangeEvent(){this.VISIBLE&&this.generateGamesSet()}setElementsVisibility(){}addEvents(){super.addEvents(),this.section.querySelector(".update-icon")?.addEventListener("click",(()=>this.generateGamesSet()))}generateWidget(){const e=`\n            <div class="header-button header-icon update-icon" title="${pt.lang.forceReloadHint}"></div>\n        `,t={classes:["game-list__section","section"],id:"game-list",title:pt.lang.gameSeriesSectionName,headerElementsHtml:e},s=this.generateWidgetElement(t);pt.app.appendChild(s)}generateWidgetContent(){this.content.innerHTML=""}async generateGamesSet(){const e=this.gameSetID=Et.GAME_DATA?.ID,t=await at(e),s=(await _t.SAVED_COMPLETION_PROGRESS)?.Results,i=this.section.querySelector(".widget-header-text"),n=this.section.querySelector(".widget-content__container");t.value=(await Promise.all(t?.value?.map((async e=>{const t=await ot(e.ID);return e.Date=t?.Date,e.Award=s.find((t=>e.ID===t.GameID))?.HighestAwardKind??"",e}))))?.sort(((e,t)=>ne.date(e,t)));const a=t?.value.reduce(((t,s)=>{var i;return t+=`\n                <li class="game-info__set-item main-column-item right-bg-icon award-type ${s.Award} ${e==s.ID?"focus":""}">\n                    <img class="awards__game-preview" src="${i=s.ImageIcon,`https://media.retroachievements.org/Images/${i}.png`}" alt=" ">\n                    <h3 class="game-title">\n                        <a target="_blank" data-title="${pt.lang.goToRAHint}" href="${N(s.ID)}">\n                    ${s.Title} ${f(s?.badges)}</a></h3>\n                    <p class="awards__game-description">${s.Console}</p>\n                    <p class="awards__game-description">${s.Date??"Date unavailable"}</p>\n                </li>\n            `}),"");i.innerHTML=`${t.name} Series`,n.innerHTML=`<ul class="flex-main-list">${a}<ul>`,n.querySelector(".focus")?.scrollIntoView()}}const at=async(e=1)=>{if(!Et.gamesSets){const e=await fetch("./json/games/gamesSets.json");Et.gamesSets=await e.json()}const t=Object.keys(Et.gamesSets);for(let s=0;s<t.length;s++){const i=t[s];if(Et.gamesSets[i].find((t=>t.ID===e)))return{name:i,value:Et.gamesSets[i]}}},ot=async e=>{if(!pt.gamesExtInfo){const e=await fetch("./json/games/all_ext.json");pt.gamesExtInfo=await e.json()}return e?pt.gamesExtInfo.find((t=>t.ID==e)):void 0};class rt extends z{widgetIcon={description:"links widget",iconID:"side-panel__links",onChangeEvent:"ui.links.VISIBLE = this.checked",iconClass:"link-icon"};links=[{name:"RetroAchievements",url:"https://retroachievements.org"},{name:"RA API docs",url:"https://api-docs.retroachievements.org"},{name:"ROM Patcher",url:"https://www.marcrobledo.com/RomPatcher.js/"},{name:"WoWRoMs",url:"https://wowroms.com/en/"},{name:"Emu-Land",url:"https://www.emu-land.net/en/"},{name:"GitHub [Project]",url:"https://github.com/taras240/retro-api"},{name:"Discord [Project]",url:"https://discord.gg/apzc6kCAbH"}];constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.addEvents(),this.generateWidgetContent(),ct.applyPosition({widget:this})}generateWidget(){const e={classes:["links_section","section"],id:"links_section",title:pt.lang.linksSectionName,contentClasses:["links-container","content-container","flex-main-list"]},t=this.generateWidgetElement(e);pt.app.appendChild(t)}initializeElements(){this.section=document.querySelector("#links_section")}addEvents(){super.addEvents()}generateWidgetContent(){const e=this.section.querySelector(".links-container"),t=this.links.map((({name:e,url:t,iconUrl:s})=>`<li class="links__link-item">\n                <a class="signed-icon links__link-container" href="${t}" target="_blank">\n                    ${s?`<img class="links__link-image" src="${s}" alt="${e}">`:" "}\n                    <span class="links__link-title">${e}</span>\n                </a>\n            </li> `)).join("");e.innerHTML=`<ul class="flex-main-list links-list">${t}</ul>`}}class ct{VERSION="0.75";isCEF=!("Notification"in window);CURRENT_LEVEL;AUTOCLOSE_CONTEXTMENU=!1;STICK_MARGIN=1;STICK_TOLERANCE=7;hltb={};twitchClient=new it;gamePopup=()=>$e();constructor(){this.initUI()}async loadLang(){const e=await fetch(Be()).then((e=>e.json())),t=ut.ui?.local??Ue.en,s=t===Ue.en?{}:await fetch(Be(t)).then((e=>e.json()));this.lang={...e,...s}}async initUI(){await async function(){if("/test.html"===window.location.pathname)try{for(const e in n){const t=n[e],s=await fetch(t);if(!s.ok)throw new Error(`Failed to fetch section: ${t}`);const i=await s.text(),a=document.createElement("div");a.innerHTML=i,document.querySelector(".wrapper").appendChild(a)}}catch(e){console.error("Error loading sections:",e)}}(),await this.loadLang(),this.initializeElements(),this.addEvents(),ct.updateColors(),document.querySelector("#background-animation").style.display=ut.bgVisibility?"block":"none",ut.identConfirmed&&!this.isTest&&(ut.startOnLoad?Et.start():Et.updateGameData(),setTimeout((()=>{_t.getUserSummary({}).then((e=>{this.userInfo?.update({userSummary:e}),this.stats?.initialSetStats({userSummary:e}),this.statusPanel?.updateStatistics({userSummary:e})}))}),3e3)),setTimeout((()=>document.querySelector(".loading-section").classList.add("hidden")),500)}initializeElements(){this.app=document.querySelector(".wrapper"),this.statusPanel=new Me,this.status=new st,this.achievementsBlock=[new Se],this.createAchievementsTemplate(),this.target=new He,this.gameCard=new je,this.stats=new Ke,this.gameList=new nt,this.progression=new Ye,this.note=new Ve,this.awards=new qe,this.notifications=new Xe,this.games=new et,this.settings=new Fe,this.links=new rt,this.buttons=new Ge,this.aotw=new tt}static applyPosition({widget:e}){if(!e)return;const t=e.section.id,s=()=>{e.section.classList.add("hidden","disposed")};if(ut.ui[t]){const{x:i,y:n,width:a,height:o,hidden:r}=ut.ui[t];i&&(e.section.style.left=i<0?0:i),n&&(e.section.style.top=n<0?0:n),a&&(e.section.style.width=a),o&&(e.section.style.height=o);(r??!0)&&s()}else!e.VISIBLE&&s();e.widgetIcon?.element&&(e.widgetIcon.element.checked=!1===ut.ui?.[e.section?.id]?.hidden??!e.VISIBLE)}addEvents(){const e=e=>{e.stopPropagation();const t=e.target.closest("[data-title]")?.dataset.title,s=e.target.closest("[data-achiv-id]")?.dataset?.achivId,i=Et.CHEEVOS[s],n=document.querySelectorAll(".popup");if(t&&t===n[0]?.innerText)return;if(!t&&n[0]?.dataset.id&&n[0]?.dataset.id==s)return;(async e=>{e.forEach((e=>e.remove()))})(n);const a=t?function(e){let t=document.createElement("div");return t.classList.add("popup","hint"),t.innerHTML=`\n      <p>${e}</p>\n      `,t}(t):i?function(e){const t=e.level?.toString()?.split(".")[1],s=e.zone?t?`${e.zone} [${t}]`:e.zone:e.level?.toString()?.replace(".","-"),i=100*e.NumAwardedHardcore/e.totalPlayers;let n=document.createElement("div");return n.className="achiv-details-block popup",n.dataset.id=e.ID,n.innerHTML=`\n        <h3 class="achievement__header">${e.Title}</h3>\n        <div class="icons-row-list">\n            ${s?T.infoBadge(`LVL: ${s}`):""} \n            ${e.genres.length>0?f(e.genres,"infoBadge"):""}\n        </div>\n        <p>${e.Description}</p>\n        <div class="points">\n            ${m(e.Points)}\n            ${u(e.TrueRatio)}\n            ${p(i,e.rateEarnedHardcore)}\n            ${_(e.retroRatio)}\n            ${y.cheevoType(e.type)}\n            ${T.difficultBadge(e.difficulty)}\n        </div>\n\n        ${e.DateEarnedHardcore?`<p>${ui.lang.unlockDate}: ${r(e.DateEarnedHardcore)}</p>`:""}\n        ${e.DateEarned&&e.DateEarnedHardcore!=r(e.DateEarned)?`<p>${ui.lang.unlockDate} ${ui.lang.casual_}: ${r(e.DateEarned)}</p>`:""}\n\n        <p>${ui.lang.playersTotal}: ${e.totalPlayers}</p>\n        <p>${ui.lang.unlockedBy}: ${e.NumAwardedHardcore} (${e.NumAwarded})</p>\n        <p>${ui.lang.unlockRate}: ${e.rateEarnedHardcore} (${e.rateEarned})</p>\n\n        <p>${ui.lang.created}: ${c(e.DateCreated)} (${c(e.DateModified)})</p>\n        <p>${ui.lang.createdBy}: ${e.Author}</p>\n    `,n}(i):void 0;a&&(this.app.appendChild(a),function(e,t){const s=t.x,i=t.y;e.style.left=s+50+"px",e.style.top=i+"px";let{left:n,right:a,top:o,bottom:r}=e.getBoundingClientRect();n<0&&e.classList.remove("left-side"),a>window.innerWidth&&e.classList.add("left-side"),o<0?e.classList.remove("top-side"):r>window.innerHeight&&e.classList.add("top-side")}(a,e),setTimeout((()=>a.classList.add("visible")),333)),(e=>{e.clientX<20&&this.buttons.show()})(e)};this.app.addEventListener("mousemove",e),this.app.addEventListener("mouseleave",(()=>document.querySelectorAll(".popup").forEach((e=>e.remove())))),this.app.addEventListener("click",(()=>{document.querySelectorAll(".context-menu").forEach((e=>e.remove()))})),this.app.addEventListener("contextmenu",(e=>{this.showContextmenu({event:e,menuItems:this.settings.contextMenuItems})})),this.app.addEventListener("mousedown",(t=>{this.app.removeEventListener("mousemove",e),document.querySelectorAll(".popup")?.forEach((e=>e.remove()))})),this.app.addEventListener("mouseup",(t=>{this.app.addEventListener("mousemove",e)}))}gameChangeEvent(e){this.achievementsBlock.forEach((e=>e?.parseGameAchievements(Et.GAME_DATA))),["statusPanel","status","target","notifications","gameList","gameCard"].forEach((t=>this[t]?.gameChangeEvent(e))),this.note?.updateGame(),this.progression?.generateProgression()}updateWidgets({earnedAchievementsIDs:e}){try{this.aotw?.checkCheevo({earnedAchievementIDs:e})}catch(e){console.log(e)}const t=e?.map((e=>({type:C.cheevo,value:Et.CHEEVOS[e]})))??[];this.notifications.pushAlerts(t),this.achievementsBlock.forEach((t=>t.updateEarnedAchieves({earnedAchievementIDs:e}))),this.target.updateEarnedAchieves({earnedAchievementIDs:e}),this.target.delayedRemove(),this.awards.VISIBLE&&this.awards.updateAwards(),this.statusPanel.updateProgress({earnedAchievementIDs:e}),this.status.updateProgress({earnedAchievementIDs:e}),this.progression.update({earnedAchievementIDs:e}),this.userInfoTimeout&&clearTimeout(this.userInfoTimeout),(this.stats?.VISIBLE||this.statusPanel?.SHOW_STATISTICS_ALERT)&&(this.userInfoTimeout=setTimeout((async()=>{const e=await _t.getUserSummary({gamesCount:0,achievesCount:0});pt.stats.updateStats({currentUserSummary:e}),pt.statusPanel?.updateStatistics({userSummary:e})}),16e3*e.length))}showAwardsAlerts(e=[]){k(e),e.forEach((e=>{this.settings.DISCORD_NEW_AWARD&&W(e)})),this.statusPanel.addAlertsToQuery(e),this.status.addAlertsToQuery(e),this.gameCard.section.dataset.award=Et.GAME_DATA?.award??"-",this.gameCard.section.dataset.progressionAward=Et.GAME_DATA?.progressionAward??"-",e.length&&setTimeout((()=>pt.stats.updateChart()),4e3)}showCheevoAlerts(e=[]){let t=e.map((e=>({type:C.cheevo,value:Et.CHEEVOS[e]})));t.forEach((e=>{const t=e.value,{DISCORD_MIN_POINTS_ALERT:s,DISCORD_MIN_RETROPOINTS_ALERT:i,DISCORD_HARD_ONLY_ALERT:n,DISCORD_NEW_CHEEVO:a}=pt.settings,o=t.Points>=s||t.TrueRatio>=i,r=!n||t.isHardcoreEarned;a&&o&&r&&W(e)})),k(t),this.statusPanel.addAlertsToQuery(t),this.status.addAlertsToQuery(t)}updateWidgetsRichPresence(e="Rich presence"){this.statusPanel.frontSide.richPresence.innerText=e,this.status.richPresenceElement.innerText=e;const t=lt(e);this.CURRENT_LEVEL=t,t&&(this.target.highlightCurrentLevel(t),this.achievementsBlock.forEach((e=>e.highlightCurrentLevel(t))))}showContextmenu({event:e,menuItems:t,sectionCode:s=""}){e.preventDefault(),e.stopPropagation(),document.querySelector(".context-menu")?.remove(),this.contextMenu=b({menuItems:t,sectionCode:s}),this.app.appendChild(this.contextMenu),(()=>{this.contextMenu.style.left=e.x+"px",this.contextMenu.style.top=e.y+"px",window.innerWidth-e.x<3*this.contextMenu.offsetWidth&&this.contextMenu.classList.add("to-left"),window.innerHeight-e.y<2*this.contextMenu.offsetHeight&&this.contextMenu.classList.add("to-top")})(),this.contextMenu.classList.remove("hidden")}createAchievementsTemplate(){2===this.achievementsBlock.length?ct.switchSectionVisibility(this.achievementsBlock[1]):(this.achievementsBlock.push(new Se(!0)),Et.GAME_DATA&&this.achievementsBlock.at(-1).parseGameAchievements(Et.GAME_DATA))}stopWatching(){pt.IS_WATCHING=!1,this.statusPanel.frontSide.watchButton.classList.remove("active"),clearInterval(pt.apiTrackerInterval)}static updateColors(e){const{style:t}=document.body,{mainColor:s,secondaryColor:i,accentColor:n,fontColor:a,selectionColor:o}=ut.getColors(e||ut.colorsPreset);t.setProperty("--main-color",s),t.setProperty("--secondary-color",i),t.setProperty("--accent-color",n),t.setProperty("--font-color",a),t.setProperty("--selection-color",o)}static addDraggingEventForElements(e,t){}static switchSectionVisibility({section:e,visible:t=!1}){e.classList.contains("hidden")||t?(e.classList.remove("disposed"),setTimeout((()=>e.classList.remove("hidden")),100),ut.setNewPosition({id:e.id,hidden:!1})):(e.classList.add("hidden"),setTimeout((()=>e.classList.add("disposed")),300),ut.setNewPosition({id:e.id,hidden:!0}))}exportCompletionDataToXlsx=()=>B.completion();exportWantToPlayToCSV=()=>B.wantToPlay();exportSettingsToJson=()=>F();importSettingsFromJson(){const e=document.createElement("input");e.type="file",e.accept=".json",e.addEventListener("change",(function(e){const t=e.target.files[0];if(t){const e=new FileReader;e.onload=function(e){try{const t=JSON.parse(e.target.result);console.log("Imported Settings:",t),pt.applySettings(t)}catch(e){console.error("Error parsing JSON:",e)}},e.onerror=function(){console.error("Error reading file:",e.error)},e.readAsText(t)}else console.log("No file selected")})),e.click()}applySettings(e){e.version>=.65?(ut._cfg=e,ut.writeConfiguration(),setTimeout((()=>location.reload()),1e3)):console.log("Unsupported file")}}const lt=e=>{let t;const s=["level","levels","stage","area","world","mission","chapter","section","part","zone","phase","realm","domain","episode","act","sequence","tier","floor","dimension","region","floor","scene","🚩","in"].join("|");return t=((e,t)=>{const i=new RegExp(`(${s})(\\s|-\\s*|:\\s*)((\\d+-\\d+)|(\\d+))`,"gi"),n=new RegExp(`\\b${t?.join("\\b|\\b")}\\b`,"gi"),a=e.match(n),o=a?Et.GAME_DATA.zones?.indexOf(a[0]):void 0,r=e.matchAll(i);let c;for(const e of r)c=e[3]?.replace("-",".");return o>=0&&(c=`${o+1}${c?.includes(".")?"."+c:""}`),Number(c)})((e=>{const t={first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9,tenth:10,"1st":1,"2nd":2,"3rd":3,"4th":4,"5th":5,"6th":6,"7th":7,"8th":8,"9th":9,"10th":10},s=new RegExp(Object.keys(t).join("|"),"gi");return e.replace(s,(e=>t[e.toLowerCase()]))})(e),Et.GAME_DATA.zones),!!Number.isFinite(t)&&t},ht=Object.freeze({KILLER:"killer",PACIFIST:"pacifist",SCORE:"score",TIMETRIAL:"timetrial",NO_DEATH:"no-death",NO_DAMAGE:"no-damage",COLLECTOR:"collector",BOSSFIGHT:"bossfight"}),dt={1:167,2:83,3:79,4:26,5:24,6:43,7:49,8:null,9:119,10:117,11:74,12:27,13:46,14:null,15:77,17:112,18:9,21:15,23:null,24:null,25:23,27:12,28:null,29:null,33:null,37:null,38:41,39:107,40:106,41:17,43:111,44:null,45:null,46:null,47:null,49:null,51:28,53:null,56:null,57:null,63:null,69:null,71:null,72:null,73:null,74:null,75:null,76:null,77:null,78:13,80:null,101:null,102:null};class gt{get _savedCompletionProgress(){return ut._cfg?.apiWorker?.completionProgress??{}}get SAVED_COMPLETION_PROGRESS(){let e=this._savedCompletionProgress;if(e?.Total&&ut._cfg.apiWorker.targetUser===ut.targetUser){return new Date-this._savedCompletionProgress.Date<6e4?this._savedCompletionProgress:this.updateCompletionProgress({batchSize:10,savedArray:e.Results}).then((()=>this._savedCompletionProgress))}return this.updateCompletionProgress({batchSize:500}).then((()=>this._savedCompletionProgress))}set SAVED_COMPLETION_PROGRESS(e){e.Results=e.Results.map((e=>(delete e.ConsoleName,delete e.NumLeaderboards,e))),ut._cfg.apiWorker||(ut._cfg.apiWorker={}),ut._cfg.apiWorker.targetUser=ut.targetUser,ut._cfg.apiWorker.completionProgress=e,ut.writeConfiguration()}baseUrl="https://retroachievements.org/API/";endpoints={userProfile:"API_GetUserProfile.php",gameProgress:"API_GetGameInfoAndUserProgress.php",recentAchieves:"API_GetUserRecentAchievements.php",gameInfo:"API_GetGame.php",extendedGameInfo:"API_GetGameExtended.php",recentlyPlayedGames:"API_GetUserRecentlyPlayedGames.php",userAwards:"API_GetUserAwards.php",userGameRankAndScore:"API_GetUserGameRankAndScore.php",completionProgress:"API_GetUserCompletionProgress.php",gameList:"API_GetGameList.php",userSummary:"API_GetUserSummary.php",achievementOfTheWeek:"API_GetAchievementOfTheWeek.php",comments:"API_GetComments.php",wantToPlay:"API_GetUserWantToPlayList.php"};getUrl({endpoint:e,targetUser:t,gameID:s,minutes:i,apiKey:n,userName:a,achievesCount:o,count:r,offset:c,type:l,sort:h}){let d=new URL(e,this.baseUrl),g={y:n||ut.API_KEY,z:a||ut.USER_NAME,u:t||ut.targetUser,g:s??ut.gameID,m:i||2e3,i:s||ut.gameID,f:1,h:1,a:o||5,c:r||20,o:c||0,t:l,sort:h};return e===this.endpoints.userProfile&&delete g.i,d.search=new URLSearchParams(g),d}getAotW(){let e=this.getUrl({endpoint:this.endpoints.achievementOfTheWeek});return fetch(e).then((e=>e.json())).then((e=>{const t=e.Unlocks.find((e=>e.User.toLowerCase()===ut.targetUser?.toLowerCase()?.trim()));return{...e.Achievement,ConsoleName:e.Console.Title,ForumTopic:e.ForumTopic.ID,GameID:e.Game.ID,GameTitle:e.Game.Title,StartAt:e.StartAt,TotalPlayers:e.TotalPlayers,UnlocksHardcoreCount:e.UnlocksHardcoreCount,isEarned:!!t,isEarnedHardcore:!!t&&!!t.HardcoreMode}}))}getUserGameRank({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:this.endpoints.userRankAndScore});return fetch(s).then((e=>e.json()))}getProfileInfo({targetUser:e}){let t=this.getUrl({targetUser:e,endpoint:this.endpoints.userProfile});return fetch(t).then((e=>e.json()))}getUserCompelitionProgress({targetUser:e,count:t,offset:s}){let i=this.getUrl({targetUser:e||ut.targetUser,count:t||100,offset:s||0,endpoint:this.endpoints.completionProgress});return fetch(i).then((e=>e.json())).then((e=>(e.Results=e.Results.map((e=>(e.ID=e.GameID,e.NumAchievements=e.MaxPossible,delete e.MaxPossible,delete e.NumLeaderboards,e))),e)))}getUserAwards({targetUser:e}){let t=this.getUrl({targetUser:e||ut.targetUser,endpoint:this.endpoints.userAwards});return fetch(t).then((e=>e.json())).then((e=>(e.VisibleUserAwards=e.VisibleUserAwards.map((e=>({...e,DateEarnedHardcore:e.AwardedAt,timeString:r(e.AwardedAt),award:"Events"==e.ConsoleName?"event":"Game Beaten"==e.AwardType?"1"==e.AwardDataExtra?"beaten":"beaten_softcore":"1"==e.AwardDataExtra?"mastered":"completed"}))),e)))}getGameProgress({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:this.endpoints.gameProgress,targetUser:e||ut.targetUser,gameID:t||ut.gameID});const i={TotalRealPlayers:0,TotalRetropoints:0,totalPoints:0,progressionRetroRatio:0,beatenCount:1/0,masteredCount:1/0,beatenSoftCount:1/0,completedCount:1/0,earnedStats:{soft:{count:0,points:0,retropoints:0,progressionCount:0},hard:{count:0,points:0,retropoints:0,progressionCount:0}}};return fetch(s).then((e=>e.json())).then((e=>{e={...e,...this.parseBadges(e),...i};const t={Count:0,WinCount:0,WinAwardedCount:0,WinAwardedSoftCount:0,WinEarnedCount:0},s={isBeaten:!0,isBeatenSoftcore:!0,isWinEarned:!1,isWinEarnedSoftcore:!1};for(let i of Object.values(e.Achievements))i.type=i.Type,e.TotalRetropoints+=i.TrueRatio,e.totalPoints+=i.Points,e.TotalRealPlayers<i.NumAwarded&&(e.TotalRealPlayers=i.NumAwarded),i.DateEarned&&(e.earnedStats.soft.count+=1,e.earnedStats.soft.points+=i.Points,e.earnedStats.soft.retropoints+=i.TrueRatio,i.type!==Y.PROGRESSION&&i.type!==Y.WIN||e.earnedStats.soft.progressionCount++),i.DateEarnedHardcore&&(e.earnedStats.hard.count+=1,e.earnedStats.hard.points+=i.Points,e.earnedStats.hard.retropoints+=i.TrueRatio,i.type!==Y.PROGRESSION&&i.type!==Y.WIN||e.earnedStats.hard.progressionCount++),i.type===Y.PROGRESSION?(t.Count++,!i.DateEarned&&(s.isBeatenSoftcore=!1),!i.DateEarnedHardcore&&(s.isBeaten=!1),e.beatenCount=Math.min(i.NumAwardedHardcore,e.beatenCount),e.beatenSoftCount=Math.min(i.NumAwarded,e.beatenSoftCount)):i.type===Y.WIN&&(t.WinCount++,t.WinAwardedCount=Math.max(i.NumAwardedHardcore,t.WinAwardedCount),t.WinAwardedSoftCount=Math.max(i.NumAwarded,t.WinAwardedSoftCount),i.DateEarnedHardcore&&t.WinEarnedCount++,s.isWinEarned=!!i.DateEarnedHardcore,s.isWinEarnedSoftcore=!!i.DateEarned),e.masteredCount=Math.min(i.NumAwardedHardcore,e.masteredCount),e.completedCount=Math.min(i.NumAwarded,e.completedCount);(e={...e,winVariantCount:t.WinCount,winEarnedCount:t.WinEarnedCount,progressionSteps:t.WinCount>0?t.Count+1:t.Count}).award=e.NumAchievements===e.NumAwardedToUserHardcore?H.MASTERED:e.NumAchievements===e.NumAwardedToUser?H.COMPLETED:e.award,e.progressionSteps&&(e.progressionAward=s.isBeaten&&e.earnedStats.hard.progressionCount>=e.progressionSteps?H.BEATEN:s.isBeatenSoftcore&&e.earnedStats.soft.progressionCount>=e.progressionSteps?H.BEATEN_SOFTCORE:e.progressionAward),t.WinCount>0&&(e.beatenCount=t.WinAwardedCount,e.beatenSoftCount=t.WinAwardedSoftCount),e.beatenCount!=1/0&&(e.beatenRate=~~(1e4*e.beatenCount/e.TotalRealPlayers)/100),e.beatenSoftCount!=1/0&&(e.beatenSoftRate=~~(1e4*e.beatenSoftCount/e.TotalRealPlayers)/100),e.masteredCount!=1/0&&(e.masteryRate=~~(1e4*e.masteredCount/e.TotalRealPlayers)/100),e.completedCount!=1/0&&(e.completedRate=~~(1e4*e.completedCount/e.TotalRealPlayers)/100);const n=~~(e.TotalRetropoints/e.totalPoints*100)/100;e.retroRatio=n,this.gameData=JSON.parse(JSON.stringify(e)),this.parseCheevoLevels(e),this.parseCheevosGenres(e),Object.values(e.Achievements).map((t=>this.fixAchievement(t,e))),e={...e,TimePlayed:0,...ut.gamesDB[e?.ID]};const a=Object.values(e.Achievements);return e.masteryDifficulty=Math.max(...a.map((e=>e.difficulty))),e.progressionSteps>0&&(e.gameDifficulty=0===e.winVariantCount?Math.max(...a.filter((e=>e.type===Y.PROGRESSION)).map((e=>e.difficulty))):Math.min(...a.filter((e=>e.type===Y.WIN)).map((e=>e.difficulty)))),e}))}getRecentAchieves({targetUser:e,minutes:t}){let s=this.getUrl({endpoint:this.endpoints.recentAchieves,targetUser:e,minutes:t});return fetch(s).then((e=>e.json())).then((e=>e.map((e=>(e.localDate=r(e.Date),e)))))}getGameInfo({gameID:e,extended:t}){let s=this.getUrl({endpoint:this.endpoints[t?"extendedGameInfo":"gameInfo"],gameID:e});return fetch(s).then((e=>e.json()))}getWantToPlayGamesList({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:this.endpoints.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>e.Results||[]))}getWantToPlayGames({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:this.endpoints.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>(e.Results||[]).map((e=>e.ID))))}getRecentlyPlayedGames({targetUser:e,count:t}){let s=this.getUrl({endpoint:this.endpoints.recentlyPlayedGames,targetUser:e,count:t||50});return fetch(s).then((e=>e.json())).then((e=>e.map(((e,t)=>({...e,...this.parseBadges(e),ID:e.GameID,Points:e.ScoreAchievedHardcore+"/"+e.PossibleScore,NumAchievements:e.NumAchievedHardcore+"/"+e.AchievementsTotal,DateEarnedHardcore:e.LastPlayed})))))}getUserProfile({userName:e}){let t=this.getUrl({targetUser:e,userName:e,endpoint:this.endpoints.userProfile});return fetch(t).then((e=>e.json()))}getUserSummary({targetUser:e,gamesCount:t,achievesCount:s}){let i=this.getUrl({targetUser:e,gameID:t??3,achievesCount:s,endpoint:this.endpoints.userSummary});return fetch(i).then((e=>e.json())).then((e=>(e.RecentlyPlayed=e.RecentlyPlayed.map((t=>(t.LastPlayed=r(t.LastPlayed),e.Awarded[t.GameID]&&(t={...t,...e.Awarded[t.GameID]}),t))),e.RecentAchievements=Object.values(e.RecentAchievements).flatMap((e=>Object.values(e))).map((e=>(e.DateAwarded=r(e.DateAwarded),e))),e.RecentlyPlayed.length&&(e.isInGame=new Date-new Date(e.RecentlyPlayed[0].LastPlayed)<3e5),e)))}getComments({targetUser:e,id:t,offset:s=0,count:i=200,type:n=2,sort:a="-submitted"}){let o=this.getUrl({targetUser:e,gameID:t,type:n,offset:s,count:i,sort:a,endpoint:this.endpoints.comments});return fetch(o).then((e=>e.json())).then((e=>e.Results?.filter((e=>"Server"!==e.User))||[]))}verifyUserIdent({userName:e,apiKey:t}){let s=this.getUrl({targetUser:e,userName:e,apiKey:t,endpoint:this.endpoints.userProfile});return fetch(s).then((e=>e.json()))}getGameList({userName:e,apiKey:t,systemID:s}){let i=this.getUrl({userName:e,apiKey:t,gameID:s,endpoint:this.endpoints.gameList});return fetch(i).then((e=>e.json()))}doTestEndpoint({endpoint:e}){let t=this.getUrl({endpoint:e});return fetch(t).then((e=>e.json())).then((e=>console.log(e)))}async updateCompletionProgress({savedArray:e=[],completionProgress:t=[],batchSize:s=500}){let i=await this.getUserCompelitionProgress({count:s,offset:t.length}),n=(t=[...t,...i.Results]).at(-1);if(e.findIndex((e=>e.hasOwnProperty("GameID")&&e.GameID===n.GameID&&e.MostRecentAwardedDate===n.MostRecentAwardedDate))>=0||t.length===i.Total){const s=t.map((e=>e.GameID));e=e.filter((e=>!s.includes(e.GameID))),e=[...t,...e],this.SAVED_COMPLETION_PROGRESS={Date:new Date,Total:e.length,Results:e}}else setTimeout((()=>this.updateCompletionProgress({savedArray:e,completionProgress:t,batchSize:s})),100)}fixAchievement(e,t){const{BadgeName:s,DateEarned:i,DateEarnedHardcore:n,NumAwardedHardcore:a,NumAwarded:o,TrueRatio:r,ID:c,Points:l}=e,{NumDistinctPlayers:h,NumAwardedToUserHardcore:d,TotalRealPlayers:g}=t,m=100*(a-.5*d)/(.5*(h+g)-.5*d),u=100*a/h;t.Achievements[c]={...e,totalPlayers:h,isEarned:!!i,isHardcoreEarned:!!n,prevSrc:`https://media.retroachievements.org/Badge/${s}.png`,rateEarned:~~(100*o/h)+"%",rateEarnedHardcore:a<20?a:u<10?`${u.toFixed(1)}%`:`${u.toFixed(0)}%`,trend:m,retroRatio:(r/l).toFixed(2),difficulty:m<=.2&&r>1e3&&a<100?11:m<=1&&r>300||r>=500?10:m<=1.5&&r>300||r>=500?9:m<=3&&r>100||r>=300?8:m<8&&r>24?7:m<13&&r>10?6:m<20&&r>5||r>10?5:4,...ut.cheevosDB[c]}}parseBadges(e){let t=e.Title;const s=[/\[SUBSET[^\[]*\]/gi,/~[^~]*~/g,".HACK//"].reduce(((s,i)=>{const n=new RegExp(i,"gi"),a=e.Title.match(n);return a&&a.forEach((e=>{t=t.replace(e,"");let i=e;s.push(i.replace(/[~\.\[\]]|subset -|\/\//gi,""))})),s}),[]);return e.badges=s,e.FixedTitle=t.trim(),{badges:s,FixedTitle:t.trim()}}parseCheevoLevels(e){function t(e){const t={one:"1",first:"1",two:"2",second:"2",three:"3",third:"3",four:"4",fourth:"4",five:"5",fifth:"5",six:"6",sixth:"6",seven:"7",seventh:"7",eight:"8",eighth:"8",nine:"9",ninth:"9",ten:"10",tenth:"10",eleven:"11",eleventh:"11",twelve:"12",twelfth:"12",thirteen:"13",thirteenth:"13",fourteen:"14",fourteenth:"14",fifteen:"15",fifteenth:"15",sixteen:"16",sixteenth:"16",seventeen:"17",seventeenth:"17",eighteen:"18",eighteenth:"18",nineteen:"19",nineteenth:"19",twenty:"20",twentieth:"20"};e=e.replaceAll(/(\d)(st|nd|rd|th)/gi,((e,t)=>t));const s=new RegExp(Object.keys(t).map((e=>`\\b${e}\\b`)).join("|"),"gi");return e=e.replace(s,(e=>t[e.toLowerCase().trim()]))}const s=Object.values(e.Achievements).sort(((e,t)=>0!=e.DisplayOrder?e.DisplayOrder-t.DisplayOrder:e.ID-t.ID)),i=s.reduce(((e,s)=>{const i=(e=>{const s=["Zone","Stage","Area","Mission","Chapter","Section","World","Scene"],i=["Beat","Reach","Select","Bonus","No","Any","Mario","The"],n=["Win","Clear","Complete","Finish","Start","Enter","In"],a=function(e){const t="\\b"+[...s,...s.map((e=>e.toLowerCase()))].join("\\b|\\b")+"\\b",a="\\b"+[...n,...n.map((e=>e.toLowerCase()))].join("\\b|\\b")+"\\b",o="\\b"+i.join("\\b|\\b")+"\\b",r="[A-Z]\\w+\\s*(?:\\bof\\s)*",c=new RegExp([`(?:(?:${a})\\s+)((${r}\\s*){1,2})(?:${t}(?!\\s*\\d))`,`|(?!${a}|${o}\\s+)((${r}\\s*){1,2})(?:${t}(?!\\s*\\d))`,`|(?:(?:${a})\\s*["]((${r}\\s*){1,2})(?:["]))`,`|(?:${a}\\s*?!${t}\\s*((${r}\\s*){1,2}))`].join(""),"gm").exec(e),l=c&&(c[1]||c[3]||c[5]||c[7]);return l?.trim()}(t(` ${e.Description}.${e.Title}.`));return a})(s);i&&(e.zoneCount++,!e.zoneNames.includes(i)&&e.zoneNames.push(i));const n=(e=>{const s=["Level","Levels","Stage\\b","Stages","Area","World","Mission","Chapter","Section","Zone","Phase","Realm","Domain","Episode","Act","Acts","Tier","Floor","Floors","Dimension","Region","Scene","Screen","Round\\b","Course","Board"],i=function(e){const t=[...s,...s.map((e=>e.toLowerCase()))].join("|"),i="(?!\\d{4,}|\\d+%)(\\d{1,3}(?:-\\d{1,3}\\b){0,1})",n=new RegExp(`(?:(${t})\\s(?<level1>${i}))|(?<level2>${i})\\s(?:(${t}))|(?<level3>\\b\\d{1,3}-\\d{1,2}\\b)`,"gi").exec(e);if(n){const e=n.groups.level1||n.groups.level2||n.groups.level3;return parseFloat(e?.replace("-","."))}return null}(t(e.Description));return i})(s);return n&&(e.levelCount++,e.levelNums.add(n)),e.data.push({ID:s.ID,zone:i,level:n}),e}),{zoneCount:0,levelCount:0,levelNums:new Set,data:[],zoneNames:[]});i?.zoneNames?.forEach(((t,s)=>{Object.values(e.Achievements).forEach((e=>{const s=i.data.find((t=>t.ID===e.ID)),n=new RegExp(`\\b${t}\\b`,"gi");(n.test(e.Description)||n.test(e.Title)&&!s.zone)&&(i.zoneCount++,i.data.push({ID:e.ID,zone:t,level:s?.level}))}))})),i.zoneNames.length>=3&&i.zoneCount>4&&i.zoneNames.length>=i.levelNums.size?(i.zoneNames=((e,t)=>e.reduce(((e,s)=>(t.forEach((t=>{const i=new RegExp(`\\b${t}\\b`,"g");!e.includes(t)&&(i.test(s.Title)||i.test(s.Description))&&e.push(t)})),e)),[]))(s,i.zoneNames),e.zones=i.zoneNames,i.data.forEach((t=>{t.zone&&(e.Achievements[t.ID].zone=t.zone,e.Achievements[t.ID].level=+`${e.zones.indexOf(t.zone)+1}${t.level?"."+t.level:""}`)}))):i.levelCount>3&&i.levelNums.size>3?i.data.forEach((t=>{const s=t.ID,i=t.level,n=e.Achievements[s];n.level=i,delete n.zone})):i.data.forEach((t=>{delete e.Achievements[t.ID].zone,delete e.Achievements[t.ID].level}))}parseCheevosGenres(e){Object.values(e.Achievements).forEach((e=>{e.genres=[],(e=>{const t="\\b"+["Level","Stage","Area","World","Mission","Chapter","Section","Zone","Phase","Realm","Domain","Episode","Act","Tier","Floor","Scene","Screen","Round"].join("\\b|\\b")+"\\b",s="\\b"+["first","second","third","fourth","fifth","sixth","seventh","eighth"].join("\\b|\\b")+"\\b",i="\\b"+["(D|d)efeat(ing)*","(K|k)ill(ing)*","(B|b)eat"].join("\\b|\\b")+"\\b",n="\\b"+["(?:T|t)he\\b","\\ba\\b","(?:M|m)rs{0,1}\\b[.]*","(?:D|d)r\\b[.]*","his\\b"].join("|\\b"),a="\\b"+["All","((Hi)*(-)*(S|s)core)","((T|t)he\\s)*(G|g)ame","(P|p)ro"].join("\\b|\\b")+"\\b";return new RegExp(`((${i})\\s*(${n})*\\s*(${s})*\\s*(?!(${a}|${t}))(?:(['"]*[A-Z]\\w*\\b)|((all)*[\\s\\w]*boss(es)*)))`,"g").exec(e.Description)})(e)&&e.genres.push(ht.BOSSFIGHT),(e=>{const t="\\b"+["(?:C|c)ollect","(A|a)ccumulate","by collecting","(?:O|o)btain","(?:S|s)till","(?:P|p)ick\\sup"].join("\\b|\\b")+"\\b",s=["(?:P|p)oints","(G|g)old","(?:S|s)core","(?:O|o)ver"].join("|");return new RegExp(`(?:${t})(?![^.]*(?:${s}))[^.]+(?:.|w$)`,"g").exec(e.Description)})(e)&&e.genres.push(ht.COLLECTOR),(e=>new RegExp("(((W|w)ithout|no)\\b[\\s\\w]*((D|d)amage|(H|h)armed|(G|g)ettings(H|h)it\b)|(\\b(with)|at)\\b\\sfull\\s(\\b(health)|(life)))","gi").exec(e.Description))(e)&&e.genres.push(ht.NO_DAMAGE),(e=>{const t="("+["without\\s([\\w\\s]*or\\s)*dying","(without|\\bno(t)*)\\s[\\w\\s]*losing\\s(a)*\\slife","\\bno(t)*\\s(dying|death(s)*)"].join(")|(")+")";return new RegExp(`${t}`,"gi").exec(e.Description)})(e)&&e.genres.push(ht.NO_DEATH),(e=>{const t=["\\b(?:M|m)inute","\\b(?:S|s)econds","\\b(?:H|h)our"].join("|");return new RegExp(`((?:\\bin\\b|\\bless|\\bunder|\\bfor|\\bwith(in)*)[\\s\\w\\d:]*(?:${t}))|(.*\\d{0,2}:\\d{2})|(.*\\d+['m]\\d{2}["s])`,"g").exec(e.Description)})(e)&&e.genres.push(ht.TIMETRIAL),(e=>{const t="\\b"+["score(d|s)*","point(s)*","PTS|pts|Pts","earn","dollars"].join("\\b|\\b")+"\\b",s="\\d+[.,']{0,1}(\\d{3,}[.,']{0,1})*";return new RegExp(`((${t})[^.]+)${s}|(?:${s}[^.]+(?:${t}))|\\bbeat\\s(the\\s)*((Hi)*(\\-)*score\\b)`,"gi").exec([e.Title,e.Description].join(". "))})(e)&&e.genres.push(ht.SCORE),(e=>new RegExp("((without|no)\\b[\\s\\w]*(hitting|harming|killing))","gi").exec(e.Description))(e)&&e.genres.push(ht.PACIFIST),(e=>/(beat|kill|defeat)(ing)*\s(\d+|(your\s)*first)\s*enem(y|ies)/gi.exec(e.Description))(e)&&e.genres.push(ht.KILLER)}))}async rawgSearchGame({gameTitle:e,platformID:t}){e=e.split("|")[0];const s=dt[t];if(!s)return!1;let i=new URL("games","https://api.rawg.io/api/"),n={search:e,platforms:s,key:"179353905bcb491d975b1fc03b3c8bd6"};i.search=new URLSearchParams(n);try{const s=await fetch(i);if(!s.ok)return console.log(`HTTP error! status: ${s.status}`),!1;const n=await s.json(),a=n.results?n.results[0]:null,o=e.replace(/[^a-z0-9]/gi," ").trim(),r=a?.name.replace(/[^a-z0-9]/gi," ").trim()??"";if(!a||o!==r)return console.log(`Game not found for title: ${e} on platform: ${t}`),!1;const c=["name","playtime","released","background_image","rating","ratings","added","metacritic","score","community_rating","genres"];return Object.fromEntries(Object.entries(a).filter((([e])=>c.includes(e))))}catch(e){return console.log(`Fetch error: ${e.message}`),!1}}}class mt{RP_DATA={text:"",lastChange:""};IS_ONLINE=!0;IS_HARD_MODE=!0;IS_WATCHING=!1;RECENT_ACHIVES_RANGE_MINUTES=Math.max(5*ut.updateDelay/60,5);CHECK_FOR_ONLINE_DELAY_MS=6e4;CHECK_FOR_ONLINE_AFTER_SILENCE_MS=18e4;watcherInterval;playTime={totalGameTime:0,gameTime:0,sessionTime:0,timer:60};points={hard:0,soft:0};get CHEEVOS(){return this.GAME_DATA?.Achievements??{}}get GAME_DATA(){return this._gameData}set GAME_DATA(e){this.savePlayTime();const t=this.GAME_DATA&&e.ID!=this.GAME_DATA?.ID;this._gameData=e,this.initPlayTime(),pt.gameChangeEvent(t)}constructor(){this.isActive=!1}initPlayTime=()=>{const e=this.GAME_DATA?.ID??0,t=this.GAME_DATA?.TimePlayed;this.playTime={...this.playTime,gameID:e,totalGameTime:t,gameTime:0,timer:60}};gameChangeEvent(){}async checkForOnline(){const e=()=>{this.RP_DATA.lastChange=new Date,!this.IS_ONLINE&&(this.IS_ONLINE=!0,this.checkApiUpdates()),this.IS_ONLINE=!0};if(!pt.settings.PAUSE_ON_OFFLINE)return void e();console.log("Checking for online...");const t=(e=>{!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");return new Date(e)})((await _t.getRecentlyPlayedGames({count:1}))[0].LastPlayed);if(new Date-t<3e5)e();else{if(this.IS_ONLINE=!1,!this.IS_WATCHING)return;setTimeout((()=>this.checkForOnline()),this.CHECK_FOR_ONLINE_DELAY_MS)}}apiTrackerInterval;async checkApiUpdates(e=!1){const t=e=>{this.points.hard=e.TotalPoints,this.points.soft=e.TotalSoftcorePoints};if(!e&&!this.IS_ONLINE)return;const s=await _t.getProfileInfo({});(s.LastGameID!=this.GAME_DATA?.ID||e)&&(ut.gameID=s.LastGameID,e&&t(s),await this.updateGameData(s.LastGameID),(pt.settings.DISCORD_NEW_GAME||e&&pt.settings.DISCORD_START_SESSION)&&W({type:C.game})),(e=>e.TotalPoints!=this.points.hard||e.TotalSoftcorePoints!=this.points.soft)(s)&&(t(s),this.updateCheevos(),this.RP_DATA.lastChange=new Date);const i=s.RichPresenceMsg;pt.updateWidgetsRichPresence(i),i===this.RP_DATA.text&&pt.settings.PAUSE_ON_OFFLINE?!e&&this.RP_DATA.lastChange&&new Date-this.RP_DATA.lastChange>this.CHECK_FOR_ONLINE_AFTER_SILENCE_MS&&await this.checkForOnline():(this.RP_DATA.lastChange=new Date,this.RP_DATA.text=s.RichPresenceMsg,this.IS_ONLINE=!0)}async updateGameData(e){e||(e=await(async()=>{const e=Object.values(await _t.getRecentlyPlayedGames({count:1}))[0]?.ID;return ut.gameID=e,e})());try{const t=await _t.getGameProgress({gameID:e});this.GAME_DATA=t}catch(e){this.stop,console.error(e)}}async updateCheevos(){const e=e=>{let t=[];e.forEach((e=>{const s=this.CHEEVOS[e.AchievementID];if(s){const i=1===e.HardcoreMode&&!s?.isHardcoreEarned;(!s.isEarned||i)&&t.push(e)}})),(e=>{e.forEach((e=>{const{HardcoreMode:t,Date:s}=e,i=this.CHEEVOS[e.AchievementID],n=1==t;this.IS_HARD_MODE=n,n&&(i.isHardcoreEarned=!0,i.DateEarnedHardcore=s,this.GAME_DATA.earnedStats.hard.count++,this.GAME_DATA.earnedStats.hard.points+=i.Points,this.GAME_DATA.earnedStats.hard.retropoints+=i.TrueRatio,"progression"!=i.type&&"win_condition"!=i.type||this.GAME_DATA.earnedStats.hard.progressionCount++),this.GAME_DATA.earnedStats.soft.count++,this.GAME_DATA.earnedStats.soft.points+=i.Points,"progression"!=i.type&&"win_condition"!=i.type||this.GAME_DATA.earnedStats.soft.progressionCount++,i.isEarned=!0,i.DateEarned=i.DateEarned??s,this.CHEEVOS[e.AchievementID]=i}))})(t);const s=t?.map((e=>e.AchievementID));return s},t=()=>{let e=[];return"mastered"!==this.GAME_DATA.award&&this.GAME_DATA.earnedStats.hard.count===this.GAME_DATA.NumAchievements?(this.GAME_DATA.award="mastered",e.push({type:C.award,award:"mastered",value:this.GAME_DATA})):this.GAME_DATA.award||this.GAME_DATA.earnedStats.soft.count!==this.GAME_DATA.NumAchievements||(this.GAME_DATA.award="completed",e.push({type:C.award,award:"completed",value:this.GAME_DATA})),this.GAME_DATA.progressionSteps>0&&"beaten"!==this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.hard.progressionCount>=this.GAME_DATA.progressionSteps?(this.GAME_DATA.progressionAward="beaten",e.push({type:C.award,award:"beaten",value:this.GAME_DATA})):this.GAME_DATA.progressionSteps>0&&!this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.soft.progressionCount>=this.GAME_DATA.progressionSteps&&(this.GAME_DATA.progressionAward="beaten-softcore",e.push({type:C.award,award:"beaten-softcore",value:this.GAME_DATA})),e};try{const s=e(await _t.getRecentAchieves({minutes:this.RECENT_ACHIVES_RANGE_MINUTES})),i=t();pt.showCheevoAlerts(s),pt.showAwardsAlerts(i),pt.updateWidgets({earnedAchievementsIDs:s})}catch(e){console.error(e)}}start(){const e=()=>{this.IS_ONLINE&&(this.playTime.totalGameTime++,this.playTime.gameTime++,this.playTime.sessionTime++,this.playTime.timer--)},t=()=>{pt.statusPanel.blinkUpdate(),pt.status.blinkUpdate()};this.stop(),(()=>{this.checkApiUpdates(!0),this.IS_WATCHING=!0,this.apiTrackerInterval=setInterval((()=>{t(),this.checkApiUpdates()}),ut.updateDelayInMiliSecs)})(),(()=>{this.isActive=!0,this.initPlayTime()})(),pt.statusPanel.timeWatcher().start(),pt.status.timeWatcher().start(),this.watcherInterval=setInterval((()=>{e(),this.playTime.gameTime%60==0&&this.savePlayTime()}),1e3)}stop(){clearInterval(this.apiTrackerInterval),this.IS_WATCHING=!1,this.isActive=!1,this.playTime.totalGameTime&&this.savePlayTime(),this.watcherInterval&&clearInterval(this.watcherInterval),this.playTime.sessionTime=0,pt.statusPanel.timeWatcher().stop(),pt.status.timeWatcher().stop()}reset(){this._gameData={...this._gameData,...ut.gamesDB[this._gameData.ID]},this.initPlayTime(),(()=>{const e=!1;pt.statusPanel.gameChangeEvent(e),pt.status?.gameChangeEvent(e),pt.gameList?.gameChangeEvent(),pt.gameCard?.updateGameCardInfo(this.GAME_DATA)})()}resetCheevo(e){pt.target?.refreshCheevo(e)}savePlayTime(){const e=this.playTime.totalGameTime;e>5&&(this.GAME_DATA.TimePlayed=e,ut.gamesDB[this.GAME_DATA.ID]||(ut.gamesDB[this.GAME_DATA.ID]={}),ut.gamesDB[this.GAME_DATA.ID].TimePlayed=e,ut.writeConfiguration())}}let ut,pt,_t,Et;const vt=navigator.userAgent||navigator.vendor||window.opera;/android/i.test(vt)||/iPhone/.test(vt)&&!window.MSStream?window.location.href="./mobile/index.html":(ut=new s,pt=new ct,_t=new gt,Et=new mt,window.ui=pt,window.config=ut,window.apiWorker=_t,window.watcher=Et),ut.identConfirmed||(console.log("redirect to login"),window.location.href="./login"),document.addEventListener("keydown",(function(e){const t=["ArrowUp","ArrowUp","ArrowDown","ArrowDown","ArrowLeft","ArrowRight","ArrowLeft","ArrowRight","KeyB","KeyA"],s=e.code;s===t[St.length]?(St.push(s),St.length===t.length&&(At=1===At?2:1,function(){yt&&clearTimeout(yt),document.querySelector("#secret")?.remove();let e=document.createElement("audio");10!==St.length&&(e=null),St=[],e.id="secret",e.innerHTML=`\n    <source src="./assets/s/ss-${At}.m4a" type="audio/mpeg">\n  `,pt.app.appendChild(e),e.play();const t=document.querySelector("#background-animation");t.style.opacity=0,setTimeout((()=>{t.style.opacity=1,t.classList.add("secret"),document.querySelector("#background-animation").style.display="block"}),2e3);yt=setTimeout((()=>{t.classList.remove("secret"),document.querySelector("#background-animation").style.display=ut.bgVisibility?"block":"none"}),1e3*(2===At?240:66))}())):St=[]}));let St=[],At=0,yt=0})();