/*! For license information please see bundle.min.js.LICENSE.txt */
(()=>{"use strict";var e={d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Js:()=>et,$W:()=>Qe,ui:()=>Je,VL:()=>tt});const t="retroApiConfig";class s{get version(){return this._cfg.version??"0"}set version(e){this._cfg.version=e,this.writeConfiguration()}get API_KEY(){return this._cfg.identification.RAApi_key}set API_KEY(e){this._cfg.identification.RAApi_key=e,this.writeConfiguration()}get USER_NAME(){return this._cfg.identification.RAApi_login}set USER_NAME(e){this._cfg.identification.RAApi_login=e,this.writeConfiguration()}get identConfirmed(){return this._cfg.identification.identConfirmed??!1}set identConfirmed(e){this._cfg.identification.identConfirmed=e,this.writeConfiguration()}get DISCORD_WEBHOOK(){return this._cfg.discordWebhook}set DISCORD_WEBHOOK(e){this._cfg.discordWebhook=e,this.writeConfiguration()}get userImageSrc(){return this._cfg.identification.userImageSrc||""}set userImageSrc(e){this._cfg.identification.userImageSrc=e,this.ui.buttons&&(ui.buttons.userImage.src=e),this.writeConfiguration()}get startOnLoad(){return this._cfg.settings.startOnLoad}set startOnLoad(e){this._cfg.settings.startOnLoad=e,this.writeConfiguration()}get targetUser(){return this._cfg.settings.targetUser||this.USER_NAME}set targetUser(e){this._cfg.settings.targetUser=e,this.writeConfiguration(),this.identConfirmed&&(ui.settings.getLastGameID(),ui.awards.updateAwards())}get gameID(){return this._cfg.settings.gameID}set gameID(e){this._cfg.settings.gameID=e,this.writeConfiguration()}get updateDelay(){const e=this._cfg.settings.updateDelay;return e<5?5:e}get updateDelayInMiliSecs(){return 1e3*this._cfg.settings.updateDelay}set updateDelay(e){let t=parseInt(e)>0?e:10;this._cfg.settings.updateDelay=t,this.writeConfiguration()}get bgVisibility(){return this._cfg.settings.bgVisibility??!0}set bgVisibility(e){this._cfg.settings.bgVisibility=e,this.writeConfiguration()}get targetMoveToTop(){return this._cfg.settings.targetMoveToTop}set targetMoveToTop(e){this._cfg.settings.targetMoveToTop=e,this.writeConfiguration()}get aotw(){const e=this._cfg.aotw;return!!(e&&function(e){const t=new Date,s=new Date;return s.setDate(t.getDate()-7),new Date(e)>s}(e.StartAt))&&this._cfg.aotw}set aotw(e){this._cfg.aotw=e,this.writeConfiguration()}get ui(){return this._cfg.ui}get gamesDB(){return this._cfg.gamesDB||(this._cfg.gamesDB={}),this._cfg.gamesDB}get cheevosDB(){return this._cfg.cheevosDB||(this._cfg.cheevosDB={}),this._cfg.cheevosDB}get mainColor(){return this._cfg.settings.mainColor??i.default.mainColor}get secondaryColor(){return this._cfg.settings.secondaryColor??i.default.secondaryColor}get accentColor(){return this._cfg.settings.accentColor??i.default.accentColor}get fontColor(){return this._cfg.settings.fontColor??i.default.fontColor}get selectionColor(){return this._cfg.settings.selectionColor??i.default.selectionColor}set mainColor(e){this._cfg.settings.mainColor=e,this.writeConfiguration()}set secondaryColor(e){this._cfg.settings.secondaryColor=e,this.writeConfiguration()}set accentColor(e){this._cfg.settings.accentColor=e,this.writeConfiguration()}set fontColor(e){this._cfg.settings.fontColor=e,this.writeConfiguration()}set selectionColor(e){this._cfg.settings.selectionColor=e,this.writeConfiguration()}get colorsPreset(){return this._cfg.settings.preset||"default"}set colorsPreset(e){this._cfg.settings.preset=e,this.writeConfiguration()}constructor(){this.readConfiguration(),this.fixConfig()}fixConfig=()=>{this.ui.update_section?.playTime&&(this._cfg.playTime={...this._cfg.playTime,...this.ui.update_section?.playTime}),Object.getOwnPropertyNames(this._cfg.playTime??{}).forEach((e=>{this.gamesDB[e]={...this.gamesDB[e],TimePlayed:this._cfg.playTime[e]}})),delete this._cfg.playTime,delete this.ui.update_section?.playTime,this.ui.game_section?.contextMenuPropertiesItems&&(this.ui.game_section.contextMenuPropertiesItems.forEach((e=>{let t=e.id.replace(/context_show-/gi,"");t="show"+t.charAt(0).toUpperCase()+t.slice(1);const s=!!e.checked;this.saveUIProperty({sectionID:"game_section",property:t,value:s})})),delete this.ui.game_section?.contextMenuPropertiesItems,delete this.ui.game_section?.contextMenuItems,delete this.ui.game_section?.gameInfoElements),this.writeConfiguration()};getColors(e){return this.colorsPreset=e,"custom"===e?{mainColor:this.mainColor,secondaryColor:this.secondaryColor,accentColor:this.accentColor,fontColor:this.fontColor,selectionColor:this.selectionColor}:i[e]||i.default}setNewPosition({id:e,xPos:t,yPos:s,width:i,height:n,hidden:a}){this._cfg.ui.hasOwnProperty(e)||(this._cfg.ui[e]={id:e,x:t,y:s,width:i,height:n,hidden:a}),t&&(this._cfg.ui[e].x=t),s&&(this._cfg.ui[e].y=s),i&&(this._cfg.ui[e].width=i+"px"),n&&(this._cfg.ui[e].height=n+"px"),void 0!==a&&(this._cfg.ui[e].hidden=a),this.writeConfiguration()}readConfiguration(){let e=JSON.parse(localStorage.getItem(t));e||(e={identification:{RAApi_key:"",RAApi_login:""},settings:{updateDelay:5,sort:"default",gameID:1,ACHIV_MAX_SIZE:150,ACHIV_MIN_SIZE:30},ui:{}}),this._cfg=e,localStorage.setItem(t,JSON.stringify(this._cfg)),this.writeConfiguration()}saveUIProperty({sectionID:e,property:t,value:s}){e&&t&&(this.ui[e][t]=s,this.writeConfiguration())}saveSettingProperty(e,t){e&&(this._cfg.settings[e]=t,this.writeConfiguration())}getUIProperty({sectionID:e,property:t}){if(e&&t)return this.ui[e]?this.ui[e][t]:void 0}getSettingProperty(e){if(e)return this._cfg.settings[e]}delayedWrite;writeConfiguration(){clearTimeout(this.delayedWrite),this.delayedWrite=setTimeout((()=>{localStorage.setItem(t,JSON.stringify(this._cfg))}),1e3)}}const i={default:{mainColor:"#171A21",secondaryColor:"#202329",accentColor:"#3663D8",fontColor:"#d6d6d6",selectionColor:"#2c303d"},blue:{mainColor:"#070F2B",secondaryColor:"#1B1A55",accentColor:"#535C91",fontColor:"#eeeeee",selectionColor:"#9290C3"},retro:{mainColor:"#1D2B53",secondaryColor:"#333A73",accentColor:"#387ADF",fontColor:"#cdcdcd",selectionColor:"#FBA834"},vintage:{mainColor:"#222831",secondaryColor:"#31363F",accentColor:"#76ABAE",fontColor:"#eeeeee",selectionColor:"#EEEEEE"},pastel:{mainColor:"#51829B",secondaryColor:"#9BB0C1",accentColor:"#F6995C",fontColor:"#000",selectionColor:"#EADFB4"},lightgreen:{mainColor:"#C5EBAA",secondaryColor:"#A5DD9B",accentColor:"#F2C18D",fontColor:"#000000",selectionColor:"#F6F193"},lightblue:{mainColor:"#A0E9FF",secondaryColor:"#89CFF3",accentColor:"#00A9FF",fontColor:"#000000",selectionColor:"#CDF5FD"},synthwave:{mainColor:"#5D0E41",secondaryColor:"#A0153E",accentColor:"#FF204E",fontColor:"#dedede",selectionColor:"#00224D"},brown:{mainColor:"#481E14",secondaryColor:"#9B3922",accentColor:"#0C0C0C",fontColor:"#eeeeee",selectionColor:"#F2613F"},neon:{mainColor:"#7E2553",secondaryColor:"#FF004D",accentColor:"#FAEF5D",fontColor:"#000000",selectionColor:"#50C4ED"},gray:{mainColor:"#808080",secondaryColor:"#757575",accentColor:"#cfcfcf",fontColor:"#000000",selectionColor:"#2ab754"},black:{mainColor:"#050505",secondaryColor:"#202329",accentColor:"#0a7ff5",fontColor:"#ffffff",selectionColor:"#083b82"}},n={gameCard:"./elements/gameCard.elem",panel:"./elements/side-panel.elem",status:"./elements/status.elem",games:"./elements/games.elem",note:"./elements/note.elem",notification:"./elements/notification.elem",stats:"./elements/stats.elem",statusV2:"./elements/statusV2.elem"};const a={0:" ",1:"Compilation",2:"Strategy",3:"Casino",4:"Music",5:"Action",6:"Platformer",7:"Puzzle",8:"Quiz",9:"Shooter",10:"Vehicle Simulation",11:"Construction and Management Simulation",12:"Fighting",13:"Sports",14:"Role-Playing",15:"Racing",16:"Beat 'em Up",17:"Adventure",18:"Education",19:"Life Simulation",20:"Board Game",21:"Stealth",22:"Pinball",23:"Flight Simulator",24:"Visual Novel",25:"Horror",26:"Sandbox",27:"Party",28:"MMO"};function o(e,t=!1){if(!isFinite(e))return"";const s=e<0;e=Math.abs(e);let i=Math.floor(e/3600),n=Math.floor(e%3600/60),a=e%60;i=i.toString().padStart(2,"0"),n=n.toString().padStart(2,"0"),a=a.toString().padStart(2,"0");const o=`${s?"-":""}${i>0?i+":":""}${n}:${a}`;return t?0==i?o:`${s?"-":""}${i}<i class="time__blinked-dots">:</i>${n}`:o}function r(e){!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");return new Date(e).toLocaleDateString("uk-UA",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",hour12:!1})}function c(e){return new Date(e).toLocaleDateString()}const l='<i class="description-icon map-icon"></i>',d='<i class="description-icon points-icon  auto-font-size"></i>',h='<i class="description-icon retropoints-icon auto-font-size"></i>',g='<i class="description-icon achievements-icon auto-font-size"></i>',u=e=>` <i class="description-icon  ps-rarity-icon ${e<5?"ultra-rare":e<10?"very-rare":e<25?"rare":""}"></i>`,m=e=>`<i class="description-icon  ${e>13?"difficult-badge__hell":""}  rarity-icon"></i>`,p=e=>`<i class=" description-icon ${e??"none"}" data-title="achievement type [${e??"none"}]"></i> `,_=e=>e?`<i class="description-icon award-type__icon ${e}_icon"></i>`:"",E='<i class="description-icon link_icon apply-icon"></i>',v='<i class="description-icon link_icon search-icon google_link"></i>',S='<i class="description-icon link_icon ra-link_icon"></i>',A=e=>`<p class="signed-icon" data-title="cheevos count">${g}${e}</p>`,T=e=>`<p class="signed-icon" data-title="points">${d}${e}</p>`,f=e=>`<p class="signed-icon" data-title="retropoints">${h}${e}</p>`,y=(e,t)=>`<p class="signed-icon" data-title="earned by">${u(e)}${t}</p>`,I=e=>`<p class="signed-icon" data-title="true ratio">${m(e)}${e}</p>`;function w(e,t="gameTitle"){return e?.reduce(((e,s)=>{const i=C[t](s);return e.push(i),e}),[]).join(" ")}const b=e=>`<p class="badge badge-centered badge_gold">${e}</p>`,C={default:e=>`<i class="badge">${e.trim()}</i>`,black:e=>`<div class="badge badge_black">${e.trim()}</div>`,gold:e=>`<div class="badge badge-centered badge_gold">${e.trim()}</div>`,gameTitle:e=>`<i class="badge game-title_${e.toLowerCase().replace(/[\s\'\"\`]/g,"-")}">${e.trim()}</i>`,gameGenre:e=>`<i class="badge game-title_genre">${e.trim()}</i>`,cheevoLevel:(e,t)=>`<div \n        class="${t?"target-level-badge":""} badge badge_gold" \n        data-title="game level">\n            ${l}${e}\n        </div>`,difficultBadge:e=>`<p class="badge difficult-badge__${e}">rank ${e}</p>`};const O=({menuItems:e,sectionCode:t="",isSubmenu:s=!1})=>{const i=document.createElement("ul");return i.className=s?"context-menu_item-menu context-submenu":"achievement_context-menu context-menu hidden",e.forEach((e=>{const s=e.hasOwnProperty("elements");let n=document.createElement("li");n.className=`context-menu_item ${s&&"expandable"}`,s?(n.innerHTML+=e.label,n.appendChild(O({menuItems:e.elements,isSubmenu:!0,sectionCode:t}))):n.innerHTML+=R[e.type](e),i.appendChild(n)})),i.addEventListener("contextmenu",(e=>e.stopPropagation())),i.addEventListener("mousedown",(e=>e.stopPropagation())),Je.AUTOCLOSE_CONTEXTMENU||i.addEventListener("click",(e=>e.stopPropagation())),i},R={checkbox:({type:e,name:t,id:s,checked:i,event:n,label:a,sectionCode:o})=>`\n        <input \n            type="${e}" \n            name="${t}${o}" \n            id="${s}${o}" \n            ${n??""}\n            ${i?"checked":""} \n            ></input>\n        <label class="context-menu_${e}" for="${s}${o}">${a}</label>`,radio:e=>R.checkbox(e),"input-number":({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="number" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,"text-input":({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="text" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,range:({prefix:e,event:t,minRange:s,maxRange:i,value:n,id:a,sectionCode:o})=>`\n        ${e}\n        <input \n            class="slider" \n            id="${a}-${o}"\n            type="range" \n            ${t??""} \n            min="${s}" \n            max="${i}" \n            value="${n}">`,button:({type:e,id:t,sectionCode:s,event:i,label:n})=>`\n            <button \n                class="context-menu_${e}" \n                id="${t}-${s}" \n                ${i??""} \n                type="button"\n            >\n                ${n??"NOLABEL"}\n            </button>`},D={award:"award",cheevo:"cheevo",game:"game",stats:"stats"},L=e=>new Promise((t=>setTimeout(t,e)));let P=[];function H(e){e.forEach((e=>{P.push(e),1===P.length&&N()}))}async function N(){const{FS_NEW_CHEEVO:e,FS_NEW_AWARD:t,FS_DURATION_SEC:s}=Je.settings,{app:i}=Je,n=(e,t)=>{const{ImageIcon:s,FixedTitle:n}=e,a={mastered:"mastery unlocked",completed:`mastery unlocked ${C.default("casual")}`,beaten:"game beaten","beaten-softcore":`game beaten ${C.default("casual")}`};i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const o=document.createElement("div");return o.className="fs-alert__container",o.innerHTML=`\n        <div class="fs-alert__main-content">\n            <div class="fs-alert__border fs-alert__border-top"></div>\n            <div class="fs-alert__header">${a[t]}</div>\n            <div class="fs-alert__sub-border "></div>\n            <div class="fs-alert__image-container">\n                <div class="fs-alert__light"></div>\n                <img src="https://media.retroachievements.org${s}" alt="" class="fs-alert__image">\n                <div class="fs-alert__blick"></div>\n            </div>\n            <div class="fs-alert__description">${n}</div>\n            <div class="fs-alert__border fs-alert__border-botton"></div>\n        </div>\n    `,o},a=({isHardcoreEarned:e,Title:t,prevSrc:s,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:c,Description:l})=>{i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const d=document.createElement("div");d.className="fs-alert__container";const h=e?"Achievement unlocked":`Achievement unlocked ${C.default("casual")}`;return d.innerHTML=`\n        <div class="fs-alert__main-content">\n            <div class="fs-alert__border fs-alert__border-top"></div>\n            <div class="fs-alert__header">${h}</div>\n            <div class="fs-alert__sub-border"></div>\n            <div class="fs-alert__image-container">\n                <div class="fs-alert__light"></div>\n                <img src="${s}" alt="" class="fs-alert__image">\n                <div class="fs-alert__blick"></div>\n            </div>\n            <div class="fs-alert__title">\n                ${t}\n            </div>\n            <div class="fs-alert__border fs-alert__border-botton"></div>\n            <div class="fs-alert__description">\n                ${l}\n            </div>\n        </div>`,d};for(;P.length>0;){if(alert=P[0],alert.type===D.cheevo&&!e||alert.type===D.award&&!t){P.shift();continue}let o;switch(alert.type){case D.award:o=n(alert.value,alert.award);break;case D.cheevo:o=a(alert.value)}i.appendChild(o),await L(1e3*s).then((async()=>{o?.classList.add("hide-fs-alert"),await L(1e3)})).then((()=>{o?.remove(),P.shift()}))}}const k=16766720,x=12632256;async function M({message:e="",type:t,value:s,award:i,id:n}){const a=Qe.DISCORD_WEBHOOK;if(!a)return;let r={};const c=tt.GAME_DATA;switch(t){case D.game:r=(e=>({header:`${Qe.targetUser} has launched the game: \n${e.Title}`,description:`          \n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e.NumAwardedToUserHardcore} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints:  ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:65280,url:`https://retroachievements.org/game/${e.ID}`,image:`https://media.retroachievements.org${e.ImageIcon}`}))(c);break;case D.award:await L(2e3),r=((e,t)=>({header:`${Qe.targetUser} has ${t.toUpperCase()} the game: \n${e.Title}`,description:`\n          Earned in: ${o(e.TimePlayed)}\n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e?.earnedStats?.hard.count} / ${e?.earnedStats?.soft.count} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints: ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:"beaten"==t||"mastered"==t?k:x,url:`https://retroachievements.org/game/${e.ID}`,image:`https://media.retroachievements.org${e.ImageIcon}`}))(c,i);break;case D.cheevo:r=((e,t)=>{const s=Qe.aotw?.ID==t.ID,i=`${Qe.targetUser} unlocked ${s?"'Achievement of the Week'":"cheevo"}${t.isHardcoreEarned?"":" (casual mode)"}: \n${t.Title}`,a=`\n        Game: [${e.Title}](https://retroachievements.org/game/${e.ID})\n        Description: ${t.Description}\n        Points: ${t.Points}\n        Retropoints:  ${t.TrueRatio}\n        `;return{header:i,description:a,color:t.isHardcoreEarned?k:x,url:`https://retroachievements.org/achievement/${n}`,image:t.prevSrc}})(c,s)}const l={username:"RETROCHEEVOS",avatar_url:"https://taras240.github.io/retro-api/assets/img/overlay_sets/mario_q/q.png",embeds:[{thumbnail:{url:r.image},title:r.header,url:r.url,color:r.color,description:r.description.replace(/\n[ \t]*/g,"\n"),footer:{text:"retrocheevos.vercel.app"},timestamp:(new Date).toISOString()}]};fetch(a,{body:JSON.stringify(l),headers:{"Content-Type":"application/json"},method:"POST"}).then((function(e){})).catch((function(e){console.log(e)}))}const $={1:"Mega Drive",2:"Nintendo 64",3:"SNES",4:"Game Boy",5:"GBA",6:"GBC",7:"NES",8:"PC Engine",9:"Sega CD",10:"32X",11:"Master System",12:"PlayStation",13:"Atari Lynx",14:"Neo Geo Pocket",15:"Game Gear",16:"Game Cube",17:"Atari Jaguar",18:"Nintendo DS",21:"PS2",23:"Magnavox Odyssey 2",24:"Pokemon Mini",25:"Atari 2600",27:"Arcade",28:"Virtual Boy",29:"MSX",33:"SG-1000",37:"Amstrad CPC",38:"Apple II",39:"Saturn",40:"Dreamcast",41:"PSP",43:"3DO",44:"ColecoVision",45:"Intellivision",46:"Vectrex",47:"PC-8000/8800",49:"PC-FX",51:"Atari 7800",53:"WonderSwan",56:"Neo Geo CD",57:"Fairchild Channel F",63:"Watara Supervision",69:"Mega Duck",71:"Arduboy",72:"WASM-4",73:"Arcadia 2001",74:"Interton VC 4000",75:"Elektor TV Games Computer",76:"PC Engine CD/TurboGrafx-CD",77:"Atari Jaguar CD",78:"Nintendo DSi",80:"Uzebox",101:"Events",102:"Standalone"};function W(e,t){const s=new Blob([e],{type:"text/csv;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.csv`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}const G={completion:async function(){const e=await et.SAVED_COMPLETION_PROGRESS,t=e?.Results.map((e=>({Title:e.Title,ID:e.GameID,Platform:$[e.ConsoleID],Award:e.HighestAwardKind,AwardDate:e.HighestAwardDate&&new Date(e.HighestAwardDate).toLocaleString(),LastEarnedDate:e.MostRecentAwardedDate&&new Date(e.MostRecentAwardedDate).toLocaleString(),TotalAchievements:e.NumAchievements,EarnedAchievements:e.NumAwardedHardcore,EarnedAchievementsSoftcore:e.NumAwarded,PlayedTime:o(Qe.gamesDB[e.GameID]?.TimePlayed),Notes:Qe.ui.note_section?.game_notes&&Qe.ui.note_section.game_notes[e.GameID]?.replace(/;|\n/g," ")})));if(!t||0==t.length)return;const s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.Platform,e.Award,e.AwardDate,e.LastEarnedDate,e.TotalAchievements,e.EarnedAchievements,e.EarnedAchievementsSoftcore,e.PlayedTime,e.Notes]));W([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"completion")},wantToPlay:async function(){const e=await et.getWantToPlayGamesList({count:500}),t=e?.map((e=>({Title:e.Title,ID:e.ID,ConsoleName:$[e.ConsoleID],AchievementsPublished:e.AchievementsPublished}))),s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.ConsoleName,e.AchievementsPublished]));W([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"wantToPlay")}};async function F(){const e=localStorage.getItem("retroApiConfig"),t=JSON.parse(e);t.apiWorker&&delete t.apiWorker.completionProgress,t.version=ui.VERSION,function(e,t){const s=new Blob([JSON.stringify(e)],{type:"text/json;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}(t,`RCSettings_v${t.version}`)}function U(e,t,s,i){e.preventDefault();const n=e.clientX-t,a=e.clientY-s,{newXPos:o,newYPos:r}=function({x:e,y:t,stickySection:s}){const{clientHeight:i,clientWidth:n}=s;let a=t,o=e;if(!1===Qe.ui.isWindowsSticky)return{newXPos:o,newYPos:a};const r=Je.STICK_TOLERANCE,c=Je.STICK_MARGIN,l=[{check:e=>Math.abs(t+i-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(t-e.offsetTop)<r,action:e=>a=e.offsetTop},{check:e=>Math.abs(t-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight+c},{check:e=>Math.abs(t+i-e.offsetTop)<r,action:e=>a=e.offsetTop-i-c},{check:t=>Math.abs(e+n-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(e-t.offsetLeft)<r,action:e=>o=e.offsetLeft},{check:t=>Math.abs(e+n-t.offsetLeft)<r,action:e=>o=e.offsetLeft-n-c},{check:t=>Math.abs(e-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth+c}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&l.forEach((({check:t,action:s})=>t(e)&&s(e)))})),o=Math.abs(window.innerWidth-o-n)<r?window.innerWidth-n:o,o=Math.abs(o)<r?0:o,a=Math.abs(window.innerHeight-a-i)<r?window.innerHeight-i:a,a=Math.abs(a)<r?0:a,{newXPos:o,newYPos:a}}({x:n,y:a,stickySection:i});i.style.left=o+"px",i.style.top=r+"px"}function V(e,t){const s=t=>{U(t,l,d,e)},i=e=>{e.preventDefault(),n(),a()},n=()=>{e.classList.remove("dragable"),o.removeEventListener("mousemove",s),o.removeEventListener("mouseup",i)},a=()=>{Qe.setNewPosition({id:e.id,xPos:e.style.left,yPos:e.style.top})},{app:o}=Je,{left:r,top:c}=e.getBoundingClientRect(),l=t.clientX-r,d=t.clientY-c;e.classList.add("dragable"),o.addEventListener("mousemove",s),o.addEventListener("mouseup",i)}function B({event:e,section:t,callback:s}){const{app:i}=Je;let n={startWidth:t.clientWidth,startHeight:t.clientHeight,startX:e.clientX,startY:e.clientY};const a=e=>{t.classList.add("resized"),function(e,t,s){const{startWidth:i,startHeight:n,startX:a,startY:o}=t,r=e.clientX-a,c=e.clientY-o;let l=i+r,d=n+c,{newHeight:h,newWidth:g}=function({width:e,height:t,stickySection:s}){const{offsetTop:i,offsetLeft:n}=s;let a=e,o=t;if(!1===Qe.ui.isWindowsSticky)return{newWidth:a,newHeight:o};const{STICK_TOLERANCE:r,STICK_MARGIN:c}=Je,l=[{check:e=>Math.abs(i+t-e.offsetTop-e.clientHeight)<r,action:e=>o=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(i+t-e.offsetTop)<r,action:e=>o=e.offsetTop-i-c},{check:t=>Math.abs(n+e-t.offsetLeft-t.clientWidth)<r,action:e=>a=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(n+e-t.offsetLeft)<r,action:e=>a=e.offsetLeft-n-c}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&l.forEach((({check:t,action:s})=>t(e)&&s(e)))})),a=Math.abs(window.innerWidth-n-a)<r?window.innerWidth-n:a,o=Math.abs(window.innerHeight-i-o)<r?window.innerHeight-i:o,{newWidth:a,newHeight:o}}({width:l,height:d,stickySection:s});s.style.width=`${g}px`,s.style.height=`${h}px`}(e,n,t),s&&s()},o=e=>{t.classList.remove("resized"),r(),c()},r=()=>{i.removeEventListener("mousemove",a),i.removeEventListener("mouseup",o)},c=()=>{Qe.setNewPosition({id:t.id,width:t.clientWidth,height:t.clientHeight})};i.addEventListener("mousemove",a),i.addEventListener("mouseup",o)}class q{widgetIcon={imageSource:"../assets/img/gamepad.svg",iconID:"widget-id",iconClass:"gamepad-icon",onChangeEvent:""};get VISIBLE(){return!this.section.classList.contains("hidden")&&!!Qe.ui[this.section?.id]}set VISIBLE(e){ze.switchSectionVisibility({section:this.section,visible:e}),this.widgetIcon.element&&(this.widgetIcon.element.checked=e)}constructor(){}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".resizer")?(this.section.classList.add("resized"),B({event:e,section:this.section})):e.target.matches(".close-icon")?this.close():e.target.matches(".tweak-button")?this.contextMenuItems&&Je.settings.openSettings(this.contextMenuItems):e.target.closest(".header-container")&&V(this.section,e)}))}addWidgetIcon(){const e=!1===Qe.ui?.[this.section?.id]?.hidden??!this.VISIBLE,{iconID:t,onChangeEvent:s,description:i,iconClass:n,badgeLabel:a}=this.widgetIcon,o=document.querySelector(".buttons-block__shortcuts"),r=document.createElement("div");r.classList.add("setting-radio-group"),r.innerHTML=`\n            <input type="checkbox" name="${t}" id="${t}" onchange="${s}" ${e?"checked":""}></input>\n            <label class="side-panel_input" data-title="${i}" for="${t}">\n                    <i class="side-panel__icon ${n}"></i>\n            </label>\n            <div class="side-panel__badge">\n                ${a?C.black(a):""}\n            </div>`,o.appendChild(r),this.widgetIcon.element=document.getElementById(t)}generateWidgetElement({classes:e,id:t,title:s,headerElementsHtml:i,contentClasses:n}){const a=document.createElement("section");return a.classList.add(...e),a.id=t,a.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                ${i??""}\n                <button class="header-icon header-button close-icon"></button>\n            </div>\n            <div class="${n?n.join(" "):"widget-content__container"}"></div>\n            <div class="resizer"></div>`,a}open(){}close(){this.VISIBLE=!1}}const z={earned:e=>e.DateEarnedHardcore||e.DateEarned,notEarned:e=>!e.DateEarnedHardcore,missable:e=>"missable"===e.type,progression:e=>"progression"===e.type||"win_condition"===e.type,all:()=>!0},j="all",Y="earned",K="missable",X="progression";function Z({container:e,itemClassName:t,sortMethod:s,reverse:i}){const n=[...e.querySelectorAll(t)];e.innerHTML="",n.sort(((e,t)=>s(e.dataset,t.dataset)*i)).forEach((t=>{e.appendChild(t)}))}const Q={latest:(e,t)=>{const s=e=>{const[t,s]=e.split(", "),[i,n,a]=t.split(".").map(Number),[o,r]=s.split(":").map(Number);return new Date(a,n-1,i,o,r)},i=e.DateEarnedHardcore?s(e.DateEarnedHardcore):e.DateEarned?s(e.DateEarned):-1/0;return(t.DateEarnedHardcore?s(t.DateEarnedHardcore):t.DateEarned?s(t.DateEarned):-1/0)-i},date:(e,t)=>(e.Date?new Date(e.Date):-1/0)-(t.Date?new Date(t.Date):-1/0),earnedCount:(e,t)=>t.NumAwardedHardcore-e.NumAwardedHardcore,points:(e,t)=>parseInt(e.Points)-parseInt(t.Points),truepoints:(e,t)=>e.TrueRatio-t.TrueRatio,default:(e,t)=>0!=e.DisplayOrder?e.DisplayOrder-t.DisplayOrder:e.achivId-t.achivId,id:(e,t)=>e.ID-t.ID,disable:(e,t)=>0,rating:(e,t)=>t.Rating-e.Rating,achievementsCount:(e,t)=>parseInt(e.NumAchievements)-parseInt(t.NumAchievements),title:(e,t)=>{let s=e.FixedTitle.toUpperCase(),i=t.FixedTitle.toUpperCase();return s<i?-1:s>i?1:0},award:(e,t)=>{const s={mastered:5,completed:4,"beaten-hardcore":3,"beaten-softcore":2,started:1},i=s[t.Award]??0,n=s[e.Award]??0,a=new Date(t.MostRecentAwardedDate),o=new Date(e.MostRecentAwardedDate);return i-n!=0?i-n:a-o},level:(e,t)=>e.level||t.level?e.level?t.level?e.level-t.level:-1:1:Q.default(e,t)},J="latest",ee="earnedCount",te="points",se="truepoints",ie="disable",ne="default",ae="title",oe="level";function re({container:e,itemClassName:t,filterMethod:s,reverse:i,isHide:n}){[...e.querySelectorAll(t)].forEach((e=>{e.classList.remove("removed","hidden"),e.classList.toggle(n?"removed":"hidden",!s(e.dataset)^i)}))}class ce extends q{widgetIcon={description:"cheevos widget",iconClass:"achievements-icon"};get contextMenuItems(){return[{label:Je.lang.style,elements:[{type:"checkbox",name:"context-show-load-anim",id:"context-show-load-anim",label:Je.lang.showLoadAnimation,checked:this.SHOW_LOAD_ANIMATION,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_LOAD_ANIMATION = this.checked"`},{type:"checkbox",name:"context-show-mario",id:"context-show-mario",label:Je.lang.showMario,checked:this.SHOW_MARIO,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_MARIO = this.checked"`},{type:"checkbox",name:"context_autoscroll-achieves",id:"context_autoscroll-achieves",label:Je.lang.autoscroll,checked:this.AUTOSCROLL,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].AUTOSCROLL = this.checked;"`},{type:"checkbox",name:"context_stretch-achieves",id:"context_stretch-achieves",label:Je.lang.stretch,checked:this.ACHIV_STRETCH,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_STRETCH = this.checked;"`},{prefix:Je.lang.minSize,postfix:"px",type:"input-number",id:"context-menu_min-size",label:Je.lang.minSize,value:this.ACHIV_MIN_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MIN_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MIN_SIZE = this.value;`},{prefix:Je.lang.maxSize,postfix:"px",type:"input-number",id:"context-menu_max-size",label:Je.lang.maxSize,value:this.ACHIV_MAX_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MAX_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].ACHIV_MAX_SIZE = this.value;`}]},{label:Je.lang.elements,elements:[{label:Je.lang.showHeader,type:"checkbox",name:"context_hide-achivs-header",id:"context_hide-achivs-header",checked:this.SHOW_HEADER,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_HEADER = this.checked;"`},{label:Je.lang.showBackground,type:"checkbox",name:"context_show-bg",id:"context_show-bg",checked:this.BG_VISIBILITY,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].BG_VISIBILITY = this.checked;"`}]},{label:Je.lang.overlaySet,elements:[{type:"checkbox",name:"context-hide-unearned",id:"context-hide-unearned",label:Je.lang.showOverlay,checked:this.SHOW_PREV_OVERLAY,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SHOW_PREV_OVERLAY = this.checked"`},...Object.keys(this.overlayTypes).reduce(((e,t)=>{const s={type:"radio",name:"context-achieves-overlay",id:`context-achieves-overlay-${t}`,label:`${this.overlayTypes[t].name}`,checked:this.OVERLAY_TYPE==t,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].OVERLAY_TYPE = '${t}'"`};return e.push(s),e}),[])]},{label:Je.lang.sort,elements:[{type:"radio",name:"context-sort",id:"context-sort_latest",label:Je.lang.latest,checked:this.SORT_NAME===J,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'latest';"`},{type:"radio",name:"context-sort",id:"context-sort_rarest",label:Je.lang.rarest,checked:this.SORT_NAME===ee,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'earnedCount';"`},{type:"radio",name:"context-sort",id:"context-sort_points",label:Je.lang.points,checked:this.SORT_NAME===te,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'points';"`},{type:"radio",name:"context-sort",id:"context-sort_retropoints",label:Je.lang.retropoints,checked:this.SORT_NAME===se,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'truepoints';"`},{type:"radio",name:"context-sort",id:"context-sort_default",label:Je.lang.default,checked:this.SORT_NAME===ne,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'default';"`},{type:"radio",name:"context-sort",id:"context-sort_level",label:Je.lang.level,checked:this.SORT_NAME===oe,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'level';"`},{type:"radio",name:"context-sort",id:"context-sort_disable",label:Je.lang.disable,checked:this.SORT_NAME===ie,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].SORT_NAME = 'disable';"`},{type:"checkbox",name:"context-reverse-sort",id:"context-reverse-sort",label:Je.lang.reverse,checked:-1==this.REVERSE_SORT,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].REVERSE_SORT = this.checked"`}]},{label:Je.lang.filter,elements:[{type:"radio",name:"context-filter",id:"context_filter-progression",label:Je.lang.progression,checked:this.FILTER_NAME===X,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].FILTER_NAME = 'progression';"`},{type:"radio",name:"context-filter",id:"context_filter-missable",label:Je.lang.missable,checked:this.FILTER_NAME===K,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].FILTER_NAME = 'missable';"`},{type:"radio",name:"context-filter",id:"context_filter-earned",label:Je.lang.earned,checked:this.FILTER_NAME===Y,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].FILTER_NAME = 'earned';"`},{type:"radio",name:"context-filter",id:"context_filter-all",label:Je.lang.all,checked:this.FILTER_NAME===j,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].FILTER_NAME = 'all';"`},{type:"checkbox",name:"context-reverse-filter",id:"context-reverse-filter",label:Je.lang.reverse,checked:this.REVERSE_FILTER,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].REVERSE_FILTER = this.checked;"`},{type:"checkbox",name:"context-hide-filtered",id:"context-hide-filtered",label:Je.lang.hideFiltered,checked:this.HIDE_FILTERED,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].HIDE_FILTERED = this.checked;"`}]}]}get OVERLAY_TYPE(){return Qe?.ui[this.SECTION_NAME]?.overlayType??"border"}set OVERLAY_TYPE(e){Qe.ui[this.SECTION_NAME].overlayType=e,Qe.writeConfiguration(),this.updateOverlay()}overlayTypes={border:{name:"Border",link:"../assets/img/border/overlay_sets/",closedLink:"../assets/img/overlay_sets/border/closed-1.png",earnedSoftcoreLink:"../assets/img/overlay_sets/border/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/border/earned.png"},digger:{name:"Digger"},mario_q:{name:"Mario '?'",link:"../assets/img/mario_q/overlay_sets/",closedLink:"../assets/img/overlay_sets/mario_q/closed.webp",earnedSoftcoreLink:"../assets/img/overlay_sets/mario_q/earned_soft.webp",earnedHardcoreLink:"../assets/img/overlay_sets/mario_q/earned.webp"},cd_box:{name:"C&D Box",link:"../assets/img/cd_box/",closedLink:"../assets/img/overlay_sets/cd_box/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/cd_box/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/cd_box/earned.png"},kirby:{name:"Kirby",link:"../assets/img/kirby/",closedLink:"../assets/img/overlay_sets/kirby/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/kirby/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/kirby/earned.png"},megaman:{name:"Megaman",link:"../assets/img/megaman/",closedLink:"../assets/img/overlay_sets/megaman/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/megaman/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/megaman/earned.png"},sonic:{name:"Sonic",link:"../assets/img/sonic/",closedLink:"../assets/img/overlay_sets/sonic/closed.png",earnedSoftcoreLink:"../assets/img/overlay_sets/sonic/earned_soft.png",earnedHardcoreLink:"../assets/img/overlay_sets/sonic/earned.png"}};set SORT_NAME(e){Qe._cfg.ui[this.SECTION_NAME].sortAchievementsBy=e,Qe.writeConfiguration(),this.applySorting()}get SORT_NAME(){return Qe?.ui[this.SECTION_NAME]?.sortAchievementsBy||ne}get SORT_METHOD(){return Q[this.SORT_NAME]}set FILTER_NAME(e){Qe.ui[this.SECTION_NAME].filterBy=e,Qe.writeConfiguration(),this.applyFiltering()}get FILTER_NAME(){return Qe?.ui[this.SECTION_NAME]?.filterBy||j}get FILTER_METHOD(){return z[this.FILTER_NAME]}get HIDE_FILTERED(){return Qe?.ui[this.SECTION_NAME]?.hideFiltered??!1}set HIDE_FILTERED(e){Qe.ui[this.SECTION_NAME].hideFiltered=e,Qe.writeConfiguration(),this.applyFiltering()}get REVERSE_SORT(){return Qe?.ui[this.SECTION_NAME]?.reverseSort||1}set REVERSE_SORT(e){Qe.ui[this.SECTION_NAME].reverseSort=e?-1:1,Qe.writeConfiguration(),this.applySorting()}get REVERSE_FILTER(){return Qe?.ui[this.SECTION_NAME]?.reverseFilter??!1}set REVERSE_FILTER(e){Qe.ui[this.SECTION_NAME].reverseFilter=e,Qe.writeConfiguration(),this.applyFiltering()}get ACHIV_MIN_SIZE(){return Qe?.ui[this.SECTION_NAME]?.ACHIV_MIN_SIZE??30}set ACHIV_MIN_SIZE(e){+e>10&&(Qe.ui[this.SECTION_NAME].ACHIV_MIN_SIZE=e,Qe.writeConfiguration(),this.fitSizeVertically())}get ACHIV_MAX_SIZE(){return Qe?.ui[this.SECTION_NAME]?.ACHIV_MAX_SIZE??150}set ACHIV_MAX_SIZE(e){+e>+this.ACHIV_MIN_SIZE&&(Qe.ui[this.SECTION_NAME].ACHIV_MAX_SIZE=e,Qe.writeConfiguration(),this.fitSizeVertically())}get ACHIV_STRETCH(){return Qe?.ui[this.SECTION_NAME]?.stretchAchievements??!1}set ACHIV_STRETCH(e){Qe.ui[this.SECTION_NAME].stretchAchievements=e,Qe.writeConfiguration(),this.container.style.height=this.ACHIV_STRETCH?"100%":"auto"}get BG_VISIBILITY(){return Qe?.ui[this.SECTION_NAME]?.bgVisibility??!0}set BG_VISIBILITY(e){Qe.ui[this.SECTION_NAME].bgVisibility=e,Qe.writeConfiguration(),this.section.classList.toggle("hide-bg",!this.BG_VISIBILITY)}get SHOW_HEADER(){return Qe?.ui[this.SECTION_NAME]?.showHeader??!0}set SHOW_HEADER(e){Qe.ui[this.SECTION_NAME].showHeader=e,Qe.writeConfiguration(),this.section.classList.toggle("compact",!this.SHOW_HEADER)}get AUTOSCROLL(){return Qe?.ui[this.SECTION_NAME]?.autoscroll??!0}set AUTOSCROLL(e){Qe.ui[this.SECTION_NAME].autoscroll=e,e?this.startAutoScroll():this.stopAutoScroll()}get SMART_AUTOSCROLL(){return!1}set SMART_AUTOSCROLL(e){Qe.ui[this.SECTION_NAME].smartAutoscroll=e,this.stopAutoScroll(),this.startAutoScroll()}get SHOW_PREV_OVERLAY(){return Qe.ui[this.SECTION_NAME]?.showPrevOverlay??!0}set SHOW_PREV_OVERLAY(e){Qe.ui[this.SECTION_NAME].showPrevOverlay=e,Qe.writeConfiguration(),this.container.querySelectorAll(".achiv-block").forEach((t=>t.classList.toggle("overlay",e)))}get SHOW_MARIO(){return Qe.ui[this.SECTION_NAME]?.showMario??!0}set SHOW_MARIO(e){Qe.ui[this.SECTION_NAME].showMario=e,Qe.writeConfiguration()}get SHOW_LOAD_ANIMATION(){return Qe.ui[this.SECTION_NAME]?.showLoadAnimation??!0}set SHOW_LOAD_ANIMATION(e){Qe.ui[this.SECTION_NAME].showLoadAnimation=e,Qe.writeConfiguration()}get SECTION_NAME(){return 0===this.CLONE_NUMBER?"achievements_section":`achievements_section-${this.CLONE_NUMBER}`}get CLONE_NUMBER(){return this._cloneNumber}set CLONE_NUMBER(e){this._cloneNumber=e?.length?e.length:0,this.widgetIcon={...this.widgetIcon,iconID:`side-panel__cheevos-${this.CLONE_NUMBER}`,onChangeEvent:`ui.achievementsBlock[${this.CLONE_NUMBER}].VISIBLE = this.checked`}}constructor(e=!1){super(),this.CLONE_NUMBER=Je.achievementsBlock,this.isClone=e,this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=this.generateNewWidget({}),document.querySelector(".wrapper").appendChild(this.section),this.container=this.section.querySelector(".achievements-container"),this.resizer=this.section.querySelector(`#achivs-resizer${this.CLONE_NUMBER}`)}addEvents(){this.section.querySelector(".header-container").addEventListener("mousedown",(e=>{e.target.matches(".close-icon")?this.close():V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:this.CLONE_NUMBER})})),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),this.stopAutoScroll(),B({event:e,section:this.section,callback:()=>{this.fitSizeVertically(!0)}})})),this.resizer.addEventListener("mouseup",(()=>{this.startAutoScroll()})),new Sortable(this.container,{group:{name:"cheevos",pull:"clone",push:"false"},animation:100,chosenClass:"dragged"})}setValues(){ze.applyPosition({widget:this}),this.section.classList.toggle("hide-bg",!this.BG_VISIBILITY),this.section.classList.toggle("compact",!this.SHOW_HEADER),Qe.ui[this.SECTION_NAME]&&(this.section.style.top=Qe.ui[this.SECTION_NAME].y??"0px",this.section.style.left=Qe.ui[this.SECTION_NAME].x??"0px",this.section.style.height=Qe.ui[this.SECTION_NAME].height??"600px",this.section.style.width=Qe.ui[this.SECTION_NAME].width??"350px"),this.container.style.height=this.ACHIV_STRETCH?"100%":"auto",this.AUTOSCROLL&&this.startAutoScroll(),this.updateOverlay()}updateOverlay(){this.section.dataset.overlay=this.OVERLAY_TYPE}parseGameAchievements(e){(()=>{this.container.innerHTML=""})(),(e=>{Object.values(e.Achievements).forEach((e=>{const t=this.generateAchievement(e);this.container.appendChild(t)}))})(e),this.fitSizeVertically(),this.applyFiltering(),this.applySorting(),this.SHOW_LOAD_ANIMATION&&this.doLoadAnimation(),this.startAutoScroll()}generateAchievement(e){const t=document.createElement("li");var s;return s=this,t.classList.add("achiv-block"),t.classList.toggle("start-load-anim",s.SHOW_LOAD_ANIMATION),t.classList.toggle("overlay",s.SHOW_PREV_OVERLAY),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isHardcoreEarned),t.classList.toggle("rare",e.TrueRatio>100),t.dataset.achivId=e.ID,t.dataset.Points=e.Points,t.dataset.TrueRatio=e.TrueRatio,e.TrueRatio>50&&(t.dataset.rarity="normal"),e.TrueRatio>150&&(t.dataset.rarity="rare"),e.TrueRatio>300&&(t.dataset.rarity="mythycal"),t.dataset.DisplayOrder=e.DisplayOrder,t.dataset.type=e.type,e.level&&(t.dataset.level=e.level),t.dataset.NumAwardedHardcore=e.NumAwardedHardcore,e.DateEarnedHardcore&&(t.dataset.DateEarnedHardcore=e.DateEarnedHardcore),e.DateEarned&&(t.dataset.DateEarned=e.DateEarned),t.innerHTML=`\n        <div class="preview-container">\n          <img class="achiv-preview" src="${e.prevSrc}"  alt="${e.Title} icon"/>\n        </div>\n        `,t}async moveToTop(e){if(this.container.offsetHeight<this.container.scrollHeight)return void this.applySorting();const t=-1===this.REVERSE_SORT;this.container.style.setProperty("--duration","1000ms");const s=e,i=this.container.querySelector(".achiv-block"),n=this.container.querySelector(".achiv-block:last-of-type"),a=document.createElement("li"),o=document.createElement("li");a.classList.add("shrink-element"),o.classList.add("grow-element");const r=t?n.offsetLeft:i.offsetLeft,c=t?n.offsetTop:i.offsetTop,l=s.offsetLeft,d=s.offsetTop;s.style.left=l+"px",s.style.top=d+"px",s.classList.add("move"),t?this.container.append(o):this.container.prepend(o),this.container.insertBefore(a,s),await L(50),s.style.left=r+"px",s.style.top=c+"px",await L(1100),o.remove(),a.remove(),s.classList.remove("move"),s.style.left="auto",s.style.top="auto",t?this.container.append(s):this.container.prepend(s),this.applyFiltering()}fitSizeVertically(e=!1){const{section:t,container:s}=this;let i,n;s.style.flex="1",e||!Qe.ui[this.SECTION_NAME]?.height?(i=s.clientHeight,n=s.clientWidth):(i=parseInt(Qe.ui[this.SECTION_NAME].height)-t.querySelector(".header-container").clientHeight,n=parseInt(Qe.ui[this.SECTION_NAME].width)),s.style.flex="";const a=s.querySelectorAll(".achiv-block:not(.removed)").length;if(0===a)return;let o,r,c=Math.floor(Math.sqrt(n*i/a));do{c--,o=Math.floor(i/(c+2)),r=Math.floor(n/(c+2))}while(o*r<a&&c>this.ACHIV_MIN_SIZE);c=c<this.ACHIV_MIN_SIZE?this.ACHIV_MIN_SIZE:c>this.ACHIV_MAX_SIZE?this.ACHIV_MAX_SIZE:c,this.section.style.setProperty("--achiv-height",c+"px")}autoscrollInterval={};async updateEarnedAchieves({earnedAchievementIDs:e}){await L(500),this.stopAutoScroll();for(let t of e){const e=this.container.querySelector(`.achiv-block[data-achiv-id="${t}"]`);this.SHOW_MARIO&&this.isAchieveVisible(e)&&tt.CHEEVOS[t].isHardcoreEarned?await this.marioAction(e):e.classList.add("earned",tt.CHEEVOS[t].isHardcoreEarned?"hardcore":"f"),this.SORT_NAME==J&&await this.moveToTop(e),tt.CHEEVOS[t].DateEarnedHardcore&&(e.dataset.DateEarnedHardcore=tt.CHEEVOS[t].DateEarnedHardcore)}this.applyFiltering(),this.startAutoScroll()}async marioAction(e){const t=document.createElement("div");t.classList.add("mario__container","stand"),this.container.appendChild(t);const s=t.getBoundingClientRect().width,i=e?.getBoundingClientRect(),n={xPos:i.left,yPos:i.top+s},a=2*s,o=i.left>window.innerWidth/2,r={xPos:o?window.innerWidth+s:-s,yPos:n.yPos+a},c=70;let l=Math.sqrt(20*a);t.style.top=r.yPos+"px",t.style.left=r.xPos+"px";const d=()=>{const t=document.createElement("div");t.classList.add("coin__container"),t.innerHTML=`\n        <div class='coins__points'>+${e.dataset.TrueRatio}RP</div>\n        <div class='coins__coin'></div>\n        `,this.container.appendChild(t),t.style.top=i.top-i.height/2+"px",t.style.left=n.xPos+"px",e?.classList.add("earned","hardcore","mario-dumb"),setTimeout((()=>e?.classList.remove("mario-dumb")),500),setTimeout((()=>t.remove()),5e3)};await(async()=>{let e=r.xPos;for(t.classList.remove("stand"),t.classList.add("walk"),t.classList.toggle("to-left",o),t.style.setProperty("--frame-duration","70ms");e!==n.xPos;)o?(e-=20,e<n.xPos&&(e=n.xPos)):(e+=20,e>n.xPos&&(e=n.xPos)),t.style.left=e+"px",await L(c);t.classList.remove("walk"),t.classList.add("stand"),await L(500)})(),await(async()=>{t.classList.remove("stand"),t.classList.add("jump");let e=r.yPos;for(;~~l>0;)e-=l,l-=10,e<n.yPos?(e=n.yPos-2,t.style.top=e+"px"):(t.style.top=e+"px",await L(c));for(d(),l=0;e<r.yPos;)e+=l,l+=10,e>r.yPos&&(e=r.yPos),t.style.top=e+"px",await L(c);t.classList.remove("jump"),t.classList.add("stand"),await L(500),t.classList.toggle("to-left",!o),await L(500)})(),await(async()=>{let e=t.getBoundingClientRect().left;for(t.style.setProperty("--frame-duration","52.5ms"),t.className=`mario__container walk ${o?"":"to-left"} `;e!==r.xPos;)o?(e+=20,e>r.xPos&&(e=r.xPos)):(e-=20,e<r.xPos&&(e=r.xPos)),t.style.left=e+"px",await L(52.5)})(),t.remove(),await L(100)}startAutoScroll(e=!0){if(clearTimeout(this.autoscrollInterval.timeout),clearInterval(this.autoscrollInterval.interval),this.SMART_AUTOSCROLL&&this.isAllEarnedAchievesVisible())return void(this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(e)),3e4));let t=this.container,s=1;this.AUTOSCROLL&&(this.autoscrollInterval.interval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!1)),5e3))):(t.scrollTop-=s,0===t.scrollTop&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!0)),5e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval.interval),clearTimeout(this.autoscrollInterval.timeout)}isAllEarnedAchievesVisible(){let e=!0;return this.container.querySelectorAll(".earned").forEach((t=>{!this.isAchieveVisible(t)&&(e=!1)})),e}isAchieveVisible(e){let t=!0;const s=this.container.getBoundingClientRect().top,i=this.container.getBoundingClientRect().height,n=e.getBoundingClientRect().top-s,a=e.getBoundingClientRect().top-s+e.getBoundingClientRect().height;return(n<0||a>i)&&(t=!1),t}highlightCurrentLevel(e){[...this.container.querySelectorAll(".achiv-block")].forEach((t=>{if(t.classList.remove("highlight"),t.dataset.level==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}}))}applySorting(){Z({container:this.container,itemClassName:".achiv-block",sortMethod:this.SORT_METHOD,reverse:this.REVERSE_SORT})}applyFiltering(){re({container:this.container,itemClassName:".achiv-block",filterMethod:this.FILTER_METHOD,reverse:this.REVERSE_FILTER,isHide:this.HIDE_FILTERED}),this.fitSizeVertically()}doLoadAnimation(){const e=this.container,t=e.querySelectorAll(".achiv-block");const s=e=>new Promise((t=>setTimeout(t,e)));setTimeout((()=>function(){const i=e.scrollHeight;e.style.setProperty("--top-position",-i+"px");let n=0;[...t].reverse().forEach((async e=>{const t=100*n+200;!e.classList.contains("removed")&&n++;const i=t+1e3;e.style.setProperty("--load-delay",t+"ms"),e.classList.add("start-load-anim"),await s(50),e.classList.add("show-load-anim"),await s(i+500),e.classList.remove("show-load-anim","start-load-anim")}))}()),0)}generateNewWidget({}){const e=document.createElement("section");return e.id=`${this.SECTION_NAME}`,e.classList.add("achivs","section"),e.style.width=Qe.ui.achievements_section?.width??"350px",e.style.height=Qe.ui.achievements_section?.height??"650px",e.innerHTML=`\n        <div class="header-container achievements-header_container">\n          <div class="header-icon achievements-icon">\n          </div>\n          <h2 class="widget-header-text achivs-header-text">Cheevos${0===this.CLONE_NUMBER?"":" ~"}</h2>\n        <button class="header-button header-icon tweak-icon tweak-button" onclick="ui.settings.openSettings(ui.achievementsBlock[${this.CLONE_NUMBER}].contextMenuItems)">\n               \n        </button>\n          <button class="header-button header-icon close-icon">\n          </button>\n        </div>\n        <ul class="achievements-container content-container"></ul>\n        <div class="resizer" id="achivs-resizer${this.CLONE_NUMBER}"></div>\n      `,e}}class le extends q{widgetIcon={iconClass:"info-icon"};constructor(e){super(),this.generatePopupElement(e),this.initializeElements(),this.addEvents(),this.VISIBLE=!0,ze.applyPosition({widget:this})}generatePopupElement({id:e,classList:t=[],title:s,content:i}){this.close(e);const n=document.createElement("section");n.classList.add("popup-section","section",...t),n.id=e,n.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                <button class="header-icon header-button close-icon"></button>\n            </div>\n            <div class="widget-content__container">\n                ${i}\n            </div>\n            <div class="resizer"></div>`,this.section=n,Je.app.appendChild(n)}initializeElements(){}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{if(e.target.matches(".comment__copy-button")){const t=e.target.parentElement?.innerText;navigator.clipboard.writeText(t||"")}else if(e.target.matches(".comment__note-button")){const t=e.target.parentElement?.innerText,s=tt.GAME_DATA?.ID||"main";let i=Qe.getUIProperty({sectionID:"note_section",property:"game_notes"})[s]||"";i+="\n-----------------\n"+t+"\n-----------------\n",Je.note.saveNoteValue({id:s,value:i.trim()}),Je.note.switchActiveTab(),Je.note.switchActiveTab()}}))}close(e){e?document.querySelector(`#${e}`)?.remove():super.close()}}async function de(e,t=2){const s=await(et?.getComments({id:e,type:t}))||[];let i="";i=s.length>0?`\n            <ul class="comments-list scrollable">\n                ${s.map((e=>`\n                    <li class="comment">\n                        <div class="comment__header">\n                            <h3 class="comment__user-name">${e.User}</h3>\n                            <div class="comment__date">${ge(e)}</div>\n                        </div>\n                        <div class="comment__comment">\n                          <button data-title="copy to clipboard" class="icon-button description-icon copy-icon comment__copy-button"></button>\n                          <button data-title="copy to note" class="icon-button description-icon note-icon comment__note-button"></button>\n                          ${he(e)}\n                        </div>\n                    </li>\n                `)).join("\n")}\n            </ul>`:'<h2 style="width: 100%;padding: 1rem; font-size: 2rem; text-align:center">No comments yet</h2>';new le({title:(1===t?"Game":2===t?"Cheevo":"User")+" comments",content:i,id:`comments_type-${t}`})}const he=({CommentText:e})=>e?.replace(/\bhttp(?:s)*:\/\/[^\s]*\b/g,(e=>`<a href='${e}' target='_blank'>${e}</a>`)),ge=({Submitted:e})=>new Date(e).toLocaleString(),ue=({event:e,onChange:t,id:s,checked:i,label:n,name:a,isRadio:o})=>`\n        <div class="${o?"radio":"checkbox"}-input_container">\n            <input ${[`type="${o?"radio":"checkbox"}"`,s&&`id="${s}"`,a&&`name="${a}"`,e,t&&`onchange="${t}"`,i&&"checked"].filter(Boolean).join(" ")}\n            >\n            <label class="checkbox-input" ${s?`for="${s}"`:""}>\n                ${n}\n            </label>\n        </div>\n    `,me=e=>ue({...e,isRadio:!0}),pe=({prefix:e,title:t,id:s,value:i,label:n,onChange:a,isNumber:o,isSearch:r})=>`\n        <input ${[`type="${o?"number":r?"search":"text"}"`,(t||e)&&`data-title="${t||e}"`,'class="text-input"',s&&`id="${s}"`,void 0!==i&&`value="${i}"`,n&&`placeholder="${n}"`,a&&`onchange="${a}"`].filter(Boolean).join(" ")}\n        />\n    `,_e=e=>pe({...e,isNumber:!0}),Ee=e=>pe({...e,isSearch:!0}),ve=({id:e,label:t,selectValues:s})=>`\n        <button class="select-button" id="${e}" onclick="this.classList.toggle('extended'); event.stopPropagation();">\n            <div class="select-label">${t}</div>\n            <div class="select-menu">\n                ${s.map((e=>(({name:e,checked:t,event:s,label:i,id:n})=>`<li class="context-menu_item">\n                    <input ${[n&&`id="${n}"`,'type="radio"',e&&`name="${e}"`,t&&"checked",s].filter(Boolean).join(" ")}></input>\n                    <label class="context-menu_radio" for="${n}">\n                        ${i}\n                    </label>\n                </li>\n            `)(e))).join("\n")}\n            </div>\n        </button>\n    `,Se=({event:e,onClick:t,label:s,id:i})=>`\n        <button ${[i&&`id="${i}"`,'class="button-input"',e,t&&`onclick="${t}"`].filter(Boolean).join(" ")}>\n            ${s}\n        </button>\n    `,Ae=e=>{switch(e.type){case"text":return pe(e);case"search":case"selector":return Ee(e);case"number":return _e(e);case"button":return Se(e);case"checkbox":return ue(e);case"radio":return me(e);default:return`[${e.type} N/A]`}};function Te(){const e=e=>[{label:"Title",elements:[{type:"text",title:"cheevo title",id:"cheevo-props-title",value:e?.Title??""}]},{label:"Description",elements:[{type:"text",title:"cheevo description",id:"cheevo-props-description",value:e?.Description??""}]},{label:"Genres",elements:[{type:"text",title:"cheevo genres. if more then one - separate with ','",id:"cheevo-props-genres",value:e?.genres?.join(",")??""}]},{label:"Zone Name",elements:[{type:"text",title:"cheevo zone name",id:"cheevo-props-zonename",value:e?.zone??""}]},{label:"Zone Number",elements:[{type:"number",title:"zone number in [d.d] format. First number for level, second for sublevel. For example level 1-3: you'd write as '1.3'",id:"cheevo-props-level",value:e?.level??""}]},{elements:[{id:"reset-cheevo-props",label:"Reset Cheevo Data",type:"button"},{id:"save-cheevo-props",label:"Save Data",type:"button"}]}];let t;const s=(e,t)=>{Object.keys(e).length>0?Qe.cheevosDB[t]=e:delete Qe.cheevosDB[t],Qe.writeConfiguration()},i=(e,i)=>{e.querySelector("#save-cheevo-props")?.addEventListener("click",(()=>((e,t)=>{const i=t.ID,n=et.gameData?.Achievements[i],a=(e=>({Title:e.querySelector("#cheevo-props-title")?.value,Description:e.querySelector("#cheevo-props-description")?.value,zone:e.querySelector("#cheevo-props-zonename")?.value,level:e.querySelector("#cheevo-props-level")?.value,genres:e.querySelector("#cheevo-props-genres").value?.length>1?e.querySelector("#cheevo-props-genres").value.split(","):[]}))(e);Object.keys(a).forEach((e=>{tt.CHEEVOS[i][e]=a[e],a[e]==n[e]&&delete a[e]})),s(a,i),tt.resetCheevo(i)})(e,i))),e.querySelector("#reset-cheevo-props")?.addEventListener("click",(()=>(async(e,i)=>{const a=i.ID,o=et.gameData?.Achievements[a];tt.CHEEVOS[a].Title=o.Title,tt.CHEEVOS[a].Description=o.Description,tt.CHEEVOS[a].zone=o.zone,tt.CHEEVOS[a].level=o.level,tt.CHEEVOS[a].genres=o.genres||[],s({},a),tt.resetCheevo(a),t?.section?.remove(),n(o)})(0,i)))},n=s=>{var n;t=new le({title:s?.Title,content:(n=e(s),`\n    <ul class="game-props__list flex-column-list">\n      ${n.map((e=>`\n          <li class="game-props__item">${e.label??""}\n              ${e.elements.map((e=>Ae(e))).join("\n")}\n          </li>\n      `)).join("\n")}\n    </ul>`),id:"cheevo-data-popup",classList:["game-data__section"]}),i(t.section,s)};return{open:n}}class fe extends q{sectionCode="-target";widgetIcon={description:"target widget",iconID:"side-panel__target",onChangeEvent:"ui.target.VISIBLE = this.checked",iconClass:"target-icon"};get contextMenuItems(){return[{label:Je.lang.style,elements:[{label:Je.lang.showBackground,type:"checkbox",name:"context_hide-target-bg",id:"context_hide-target-bg",checked:!this.HIDE_BG,event:'onchange="ui.target.HIDE_BG = !this.checked;"'},{type:"checkbox",name:"context_fixed-count-switcher",id:"context_fixed-count-switcher",label:Je.lang.fixedSize,checked:this.IS_FIXED_SIZE,event:'onchange="ui.target.IS_FIXED_SIZE = this.checked;"'},{prefix:Je.lang.count,postfix:"",type:"input-number",name:"context-fixed-count",id:"context-fixed-count",label:Je.lang.cheevosCount,value:this.FIXED_COUNT,event:'onchange="ui.target.FIXED_COUNT = this.value;"',onChange:"ui.target.FIXED_COUNT = this.value;"},{type:"checkbox",name:"context_autoscroll-target",id:"context_autoscroll-target",label:Je.lang.autoscroll,checked:this.AUTOSCROLL,event:'onchange="ui.target.AUTOSCROLL = this.checked;"'}]},{label:Je.lang.elements,elements:[{label:Je.lang.showHeader,type:"checkbox",name:"context_hide-target-header",id:"context_hide-target-header",checked:this.SHOW_HEADER,event:'onchange="ui.target.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context-show-genre-badge",id:"context-show-genre-badge",label:Je.lang.showGenreBadges,checked:this.SHOW_GENRE,event:'onchange="ui.target.SHOW_GENRE = this.checked;"'},{type:"checkbox",name:"context-show-level",id:"context-show-level",label:Je.lang.showLevel,checked:this.SHOW_LEVEL,event:'onchange="ui.target.SHOW_LEVEL = this.checked"'},{type:"checkbox",name:"context-show-events-checkbox",id:"context-show-events-checkbox",label:Je.lang.showEvents,checked:this.SHOW_EVENTS,event:'onchange="ui.target.SHOW_EVENTS = this.checked"'},{type:"checkbox",name:"context-show-difficult",id:"context-show-difficult",label:Je.lang.showDifficult,checked:this.SHOW_DIFFICULT,event:'onchange="ui.target.SHOW_DIFFICULT = this.checked"'}]},{label:Je.lang.sort,elements:[{type:"radio",name:"context-sort",id:"context-sort_latest",label:Je.lang.latest,checked:this.SORT_NAME===J,event:"onchange=\"ui.target.SORT_NAME = 'latest';\""},{type:"radio",name:"context-sort",id:"context-sort_rarest",label:Je.lang.rarest,checked:this.SORT_NAME===ee,event:"onchange=\"ui.target.SORT_NAME = 'earnedCount';\""},{type:"radio",name:"context-sort",id:"context-sort_points",label:Je.lang.points,checked:this.SORT_NAME===te,event:"onchange=\"ui.target.SORT_NAME = 'points';\""},{type:"radio",name:"context-sort",id:"context-sort_retropoints",label:Je.lang.retropoints,checked:this.SORT_NAME===se,event:"onchange=\"ui.target.SORT_NAME = 'truepoints';\""},{type:"radio",name:"context-sort",id:"context-sort_default",label:Je.lang.default,checked:this.SORT_NAME===ne,event:"onchange=\"ui.target.SORT_NAME = 'default';\""},{type:"radio",name:"context-sort",id:"context-sort_level",label:Je.lang.level_test,checked:this.SORT_NAME===oe,event:"onchange=\"ui.target.SORT_NAME = 'level';\""},{type:"radio",name:"context-sort",id:"context-sort_dont-sort",label:Je.lang.disable,checked:this.SORT_NAME===ie,event:"onchange=\"ui.target.SORT_NAME = 'disable';\""},{type:"checkbox",name:"context-reverse-sort",id:"context-reverse-sort",label:Je.lang.reverse,checked:-1==this.REVERSE_SORT,event:'onchange="ui.target.REVERSE_SORT = this.checked"'}]},{label:Je.lang.filter,elements:[{type:"radio",name:"context-filter",id:"context_filter-progression",label:Je.lang.progression,checked:this.FILTER_NAME===X,event:"onchange=\"ui.target.FILTER_NAME = 'progression';\""},{type:"radio",name:"context-filter",id:"context_filter-missable",label:Je.lang.missable,checked:this.FILTER_NAME===K,event:"onchange=\"ui.target.FILTER_NAME = 'missable';\""},{type:"radio",name:"context-filter",id:"context_filter-earned",label:Je.lang.earned,checked:this.FILTER_NAME===Y,event:"onchange=\"ui.target.FILTER_NAME = 'earned';\""},{type:"radio",name:"context-filter",id:"context_filter-all",label:Je.lang.all,checked:this.FILTER_NAME===j,event:"onchange=\"ui.target.FILTER_NAME = 'all';\""},{type:"checkbox",name:"context-reverse-filter",id:"context-reverse-filter",label:Je.lang.reverse,checked:this.REVERSE_FILTER,event:'onchange="ui.target.REVERSE_FILTER = this.checked;"'},{type:"checkbox",name:"context-hide-filtered",id:"context-hide-filtered",label:Je.lang.hideFiltered,checked:this.HIDE_FILTERED,event:'onchange="ui.target.HIDE_FILTERED = this.checked;"'}]},{label:Je.lang.level_test,elements:[{type:"checkbox",name:"context-hide-passed-levels",id:"context-hide-passed-levels",label:Je.lang.hidePassedLevels,checked:this.HIDE_PASSED_LEVELS,event:'onchange="ui.target.HIDE_PASSED_LEVELS = this.checked;"'},{type:"checkbox",name:"context-highlight-passed",id:"context-highlight-passed",label:Je.lang.highLightPassedLevels,checked:this.HIGHLIGHT_PASSED_LEVELS,event:'onchange="ui.target.HIGHLIGHT_PASSED_LEVELS = this.checked;"'}]},{label:Je.lang.data,elements:[{type:"button",name:"context-fill",id:"context-fill",label:Je.lang.fillAll,event:'onclick="ui.target.fillItems()"'},{type:"checkbox",name:"context-autofill",id:"context-autofill",label:Je.lang.autofill,checked:this.AUTOFILL,event:'onchange="ui.target.AUTOFILL = this.checked;"'},{type:"button",name:"context-clear-all",id:"context-clear-all",label:Je.lang.clearAll,event:'onclick="ui.target.clearAllAchivements();"'},{type:"checkbox",name:"context-autoclear",id:"context-autoclear",label:Je.lang.autoclearEarned,checked:this.AUTOCLEAR,event:'onchange="ui.target.AUTOCLEAR = this.checked;"'},{prefix:Je.lang.clearDelay,postfix:"sec",type:"input-number",name:"context-autoclear-delay",id:"context-autoclear-delay",label:Je.lang.clearDelay,value:this.AUTOCLEAR_DELAY,event:'onchange="ui.target.AUTOCLEAR_DELAY = this.value;"',onChange:"ui.target.AUTOCLEAR_DELAY = this.value;"}]}]}get IS_FIXED_SIZE(){return Qe.getUIProperty({sectionID:this.section.id,property:"isFixedSize"})??!1}set IS_FIXED_SIZE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"isFixedSize",value:e}),this.section.classList.toggle("fixed-size",this.IS_FIXED_SIZE)}get FIXED_COUNT(){const e=~~Qe.getUIProperty({sectionID:this.section.id,property:"fixedSizeCount"});return e>0?e:2}set FIXED_COUNT(e){e=e>0?~~e:3,Qe.saveUIProperty({sectionID:this.section.id,property:"fixedSizeCount",value:e}),this.container.style.setProperty("--max-count",this.FIXED_COUNT)}get SHOW_HEADER(){return Qe.getUIProperty({sectionID:this.section.id,property:"showHeader"})??!0}set SHOW_HEADER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showHeader",value:e}),this.section.classList.toggle("compact",!this.SHOW_HEADER)}get HIDE_BG(){return Qe.getUIProperty({sectionID:this.section.id,property:"hideBg"})??!1}set HIDE_BG(e){Qe.saveUIProperty({sectionID:this.section.id,property:"hideBg",value:e}),this.section.classList.toggle("hide-bg",this.HIDE_BG)}set SORT_NAME(e){Qe._cfg.settings.sortTargetBy=e,Qe.writeConfiguration(),this.applySort()}get SORT_NAME(){return Qe._cfg.settings.sortTargetBy||ne}get SORT_METHOD(){return Q[this.SORT_NAME]}get REVERSE_SORT(){return Qe._cfg.settings.reverseSortTarget||1}set REVERSE_SORT(e){Qe._cfg.settings.reverseSortTarget=e?-1:1,Qe.writeConfiguration(),this.applySort()}get FILTER_NAME(){return Qe._cfg.settings.filterTargetBy||j}set FILTER_NAME(e){Qe._cfg.settings.filterTargetBy=e,Qe.writeConfiguration(),this.applyFilter()}get FILTER_METHOD(){return z[this.FILTER_NAME]}get REVERSE_FILTER(){return Qe._cfg.settings.reverseFilterTarget??!1}set REVERSE_FILTER(e){Qe._cfg.settings.reverseFilterTarget=e,Qe.writeConfiguration(),this.applyFilter()}get HIDE_FILTERED(){return Qe._cfg.settings.hideFilteredTarget??!1}set HIDE_FILTERED(e){Qe._cfg.settings.hideFilteredTarget=e,Qe.writeConfiguration(),this.filterByGenre(this.genreFilter,!0)}get AUTOCLEAR(){return Qe._cfg.settings.autoClearTarget??!1}set AUTOCLEAR(e){Qe._cfg.settings.autoClearTarget=e,Qe.writeConfiguration()}get AUTOFILL(){return Qe._cfg.settings.autoFillTarget??!0}set AUTOFILL(e){Qe._cfg.settings.autoFillTarget=e,Qe.writeConfiguration()}get AUTOCLEAR_DELAY(){return Number(Qe._cfg.settings.autoClearTargetTime??5)}set AUTOCLEAR_DELAY(e){Qe._cfg.settings.autoClearTargetTime=e>=0?e:0,Qe.writeConfiguration()}get AUTOSCROLL(){return Qe?.ui?.target_section?.autoscroll??!1}set AUTOSCROLL(e){Qe.saveUIProperty({sectionID:this.section.id,property:"autoscroll",value:e}),e?this.startAutoScroll():this.stopAutoScroll()}get SHOW_PREV_BORDER(){return!0}set SHOW_PREV_BORDER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPrevBorder",value:e})}get SHOW_PREV_OVERLAY(){return!0}set SHOW_PREV_OVERLAY(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPrevOverlay",value:e})}get SHOW_DIFFICULT(){return Qe.getUIProperty({sectionID:this.section.id,property:"showDifficult"})??!0}set SHOW_DIFFICULT(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showDifficult",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-difficult",e)))}get SHOW_LEVEL(){return Qe.getUIProperty({sectionID:this.section.id,property:"showLevel"})??!0}set SHOW_LEVEL(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showLevel",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-level",e)))}get SHOW_GENRE(){return Qe.getUIProperty({sectionID:this.section.id,property:"showGenre"})??!0}set SHOW_GENRE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showGenre",value:e}),this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-genre",e)))}get HIDE_PASSED_LEVELS(){return Qe.getUIProperty({sectionID:this.section.id,property:"hidePassedLevels"})??!0}set HIDE_PASSED_LEVELS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"hidePassedLevels",value:e}),this.section.classList.toggle("hide-passed",e)}get HIGHLIGHT_PASSED_LEVELS(){return Qe.getUIProperty({sectionID:this.section.id,property:"highlightPassedLevels"})??!0}set HIGHLIGHT_PASSED_LEVELS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"highlightPassedLevels",value:e}),this.section.classList.toggle("highlight-passed",e)}get SHOW_EVENTS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showEvents"})??!0}set SHOW_EVENTS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showEvents",value:e}),this.section.classList.toggle("show-events",e)}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues(),this.showAotwEvent({cheevo:Qe.aotw})}initializeElements(){this.section=document.querySelector("#target_section"),this.header=document.querySelector(".target-header_container"),this.container=document.querySelector(".target-container"),this.searchInput=this.section.querySelector("#target__searchbar")}generateWidget(){const e={classes:["target_section","section"],id:"target_section",title:"Target",headerElementsHtml:'\n            <button class="header-button header-icon tweak-button tweak-icon"></button>\n            <input type="search" name="" id="target__searchbar" class="text-input target__search-bar" placeholder="Search...">\n        ',contentClasses:["target-container","content-container","flex-main-list"]},t=this.generateWidgetElement(e);Je.app.appendChild(t)}addEvents(){super.addEvents(),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:""})})),this.container.addEventListener("click",(e=>{if(e.target.closest(".comments-button")){const t=e.target.closest(".target-achiv")?.dataset.achivId;t&&de(t,2)}else if(e.target.matches(".edit-cheevo-button")){const t=e.target.dataset.cheevoId,s=tt.CHEEVOS[t];s&&Te().open(s)}else if(e.target.matches(".delete-from-target")){const t=e.target.closest(".target-achiv");Je.target.deleteFromTarget(t)}}));var e,t;e=this.container,t=e=>{Je.target.addAchieveToTarget(e),this.section.querySelector(".achiv-block")?.remove()},new Sortable(e,{group:{name:"cheevos",pull:!1},animation:100,chosenClass:"dragged",onAdd:function(e){const s=e.item.dataset.achivId;t&&t(s)}}),this.searchInput?.addEventListener("input",this.searchInputEvent)}searchInputEvent(e){e.stopPropagation();[...Je.target.container.querySelectorAll(".target-achiv")].forEach((e=>{const t=e.dataset.achivId,s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");s&&(s.innerText=tt.CHEEVOS[t]?.Description),i&&(i.innerText=tt.CHEEVOS[t]?.Title)})),Je.target.applySort();const t=e.target.value;if(t){(e=>{const t=new RegExp(`(${e})`,"gi");[...Je.target.container.querySelectorAll(".target-achiv")].reverse().forEach((e=>{const s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");i.innerText.match(t)&&(Je.target.moveToTop(s.closest(".target-achiv")),i.innerHTML=i.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`))),s.innerText.match(t)&&(Je.target.moveToTop(s.closest(".target-achiv")),s.innerHTML=s.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`)))}))})(t);const e=document.querySelector(".badge.highlight-badge");e&&e.scrollIntoView({behavior:"smooth",block:"center"})}}setValues(){ze.applyPosition({widget:this}),this.section.classList.toggle("show-events",this.SHOW_EVENTS),this.section.classList.toggle("compact",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",this.HIDE_BG),this.section.classList.toggle("hide-passed",this.HIDE_PASSED_LEVELS),this.section.classList.toggle("highlight-passed",this.HIGHLIGHT_PASSED_LEVELS),this.section.classList.toggle("fixed-size",this.IS_FIXED_SIZE),this.container.style.setProperty("--max-count",this.FIXED_COUNT),this.startAutoScroll()}gameChangeEvent(){this.genreFilter="",this.AUTOCLEAR&&this.clearEarned(),this.AUTOFILL&&this.fillItems()}updateEarnedAchieves({earnedAchievementIDs:e}){e.forEach((e=>{const t=this.container.querySelector(`.target-achiv[data-achiv-id='${e}']`);tt.CHEEVOS[e].isHardcoreEarned&&t?(t.classList.add("earned","hardcore","show-hard-anim"),t.dataset.DateEarnedHardcore=tt.CHEEVOS[e].DateEarnedHardcore):t?.classList.add("earned","show-hard-anim"),setTimeout((()=>t?.classList.remove("show-hard-anim")),5e3)})),this.applyFilter(),this.applySort(),this.genreFilter&&this.filterByGenre(this.genreFilter,!0)}autoscrollInterval;startAutoScroll(e=!0){this.stopAutoScroll();let t=this.container,s=1;this.AUTOSCROLL&&(this.autoscrollInterval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!1)),2e3))):(t.scrollTop-=s,0===t.scrollTop&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!0)),2e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval)}isAchievementInTargetSection({ID:e,targetContainer:t=this.container}){return[...t.querySelectorAll(".target-achiv")].filter((t=>t.dataset.achivId==e)).length>0}addAchieveToTarget(e){if(this.isAchievementInTargetSection({ID:e}))return;const t=tt.CHEEVOS[e],s=document.createElement("li");(()=>{s.classList.add("target-achiv","main-column-item","right-bg-icon"),s.classList.toggle("border",this.SHOW_PREV_BORDER),s.classList.toggle("overlay",this.SHOW_PREV_OVERLAY),s.classList.toggle("show-difficult",this.SHOW_DIFFICULT),s.classList.toggle("show-level",this.SHOW_LEVEL),s.classList.toggle("show-genre",this.SHOW_GENRE),s.classList.toggle("earned",t.isEarned),s.classList.toggle("hardcore",t.isHardcoreEarned)})(),s.dataset.type=t.type,s.dataset.Points=t.Points,s.dataset.TrueRatio=t.TrueRatio,s.dataset.DisplayOrder=t.DisplayOrder,t.DateEarnedHardcore&&(s.dataset.DateEarnedHardcore=t.DateEarnedHardcore),t.DateEarned&&(s.dataset.DateEarned=t.DateEarned),s.dataset.NumAwardedHardcore=t.NumAwardedHardcore,s.dataset.achivId=e,t.level&&(s.dataset.level=t.level),(()=>{const i=t.level?.toString()?.split(".")[1],n=t.zone?i?`${t.zone} [${i}]`:t.zone:t.level?.toString()?.replace(".","-"),a=100*t.NumAwardedHardcore/t.totalPlayers;s.innerHTML=`\n            <div class="target__buttons-container">\n                <button class="header-button header-icon  target__comments-button edit-cheevo-button edit-icon" data-title="edit props" data-cheevo-id="${t.ID}">\n                <button class="header-button header-icon  target__comments-button comments-button chat-icon" data-title="show comments">\n                <button class="header-button header-icon  delete-icon delete-from-target" data-title="remove from target">\n                </button>\n            </div>\n            </button>\n            <div class="prev">\n                <img\n                class="prev-img"\n                src="${t.prevSrc}"\n                alt="${t.Title}"\n                />\n            </div>\n            <div class="target__cheevo-details">\n                <h3 class="target__cheevo-header">\n                    ${n?C.cheevoLevel(n,!0):""}\n                    ${t.genres.length>0?t.genres?.map((e=>`<p class="target-genre-badge badge badge-bold badge_gold badge-button" data-title="achievement genre" onclick="ui.target.filterByGenre('${e}')">${e.trim()}</p>`)).join(""):""}<a target="_blanc" data-title="go to RA cheevo-page" href="https://retroachievements.org/achievement/${e}">\n                        ${t.Title}\n                    </a>\n                </h3>\n                <p class="achiv-description">${t.Description}</p>\n                <div class="target-other-descriptions icons-row-list">\n                    ${p(t.type)}\n                    ${T(t.Points)}\n                    ${f(t.TrueRatio)}\n                    ${y(a,t.rateEarnedHardcore)}\n                    ${I(t.retroRatio)}\n                    ${C.difficultBadge(t.difficulty)}\n                </div>\n            </div>\n            `})(),this.container.appendChild(s),this.isDynamicAdding||(this.applyFilter(),this.applySort()),this.delayedRemove()}refreshCheevo(e){this.container.querySelector(`.target-achiv[data-achiv-id="${e}"]`)?.remove(),this.addAchieveToTarget(e)}moveToTop(e){1==this.REVERSE_SORT?this.container.prepend(e):this.container.append(e),this.applyFilter()}applyFilter(){re({container:this.container,itemClassName:".target-achiv",filterMethod:this.FILTER_METHOD,reverse:this.REVERSE_FILTER,isHide:this.HIDE_FILTERED})}filterByGenre(e,t=!1){(()=>{this.container.querySelectorAll(".hidden").forEach((e=>e.classList.remove("hidden")))})(),!t&&this.genreFilter===e||!e?(this.genreFilter="",this.applyFilter()):(this.genreFilter=e,re({container:this.container,itemClassName:".target-achiv",filterMethod:t=>tt.CHEEVOS[t.achivId].genres.includes(e),reverse:!1,isHide:this.HIDE_FILTERED}))}applySort(){Z({container:this.container,itemClassName:".target-achiv",sortMethod:this.SORT_METHOD,reverse:this.REVERSE_SORT})}highlightCurrentLevel(e){[...this.container.querySelectorAll(".target-achiv")].forEach((t=>{t.classList.remove("highlight"),t.classList.remove("passed");const s=t.dataset.level;if(s==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}Number.isInteger(+s)?s<parseInt(e)&&t.classList.add("passed"):s<e&&t.classList.add("passed")}))}deleteFromTarget(e){const t=e.closest(".target-achiv");t?.classList.add("removing"),setTimeout((()=>t?.remove()),0)}clearEarned(){this.container.querySelectorAll(".target-achiv").forEach((e=>{e.classList.contains("hardcore")&&e.remove()}))}clearAllAchivements(){this.container.innerHTML=""}delayedRemove(){this.AUTOCLEAR&&this.container.querySelectorAll(".earned").forEach((e=>{setTimeout((()=>e.remove()),1e3*this.AUTOCLEAR_DELAY)}))}fillItems(){this.isDynamicAdding=!0,this.clearAllAchivements(),Object.keys(tt.CHEEVOS).forEach((e=>{this.addAchieveToTarget(e)})),this.applyFilter(),this.applySort(),this.isDynamicAdding=!1,Qe.aotw&&this.container.querySelector(`.target-achiv[data-achiv-id='${Qe.aotw?.ID}']`)?.classList.add("target__aotw")}showAotwEvent({cheevo:e}){if(!e||e.wasShown)return;const t=100*e.UnlocksHardcoreCount/e.TotalPlayers;this.section.querySelector(".target__aotw-container")?.remove(),this.container.querySelector(`.target-achiv[data-achiv-id='${e.ID}']`)?.classList.add("target__aotw");const s=document.createElement("div");s.classList.add("target__aotw-container","target__aotw","show-difficult","show-level"),s.innerHTML=`\n        <button class="description-icon close-icon target__hide-aotw" \n          onclick="ui.target.hideAotw()"></button>\n        <div class="prev">\n          <img class="prev-img" src="https://media.retroachievements.org${e.BadgeURL}" alt=" ">\n        </div>\n        <div class="target__cheevo-details">\n          <h3 class="target__cheevo-header">\n            <a target="_blanc" href="https://retroachievements.org/achievement/${e.ID}">\n              ${e.Title}\n            </a>\n            in\n            <a target="_blanc" href="https://retroachievements.org/game/${e.GameID}">\n              ${e.GameTitle}\n            </a>\n          </h3>\n          <div class="achiv-description">\n          ${C.black("AotW Event")}\n            ${e.Description}\n          </div>\n          <div class="target-other-descriptions  icons-row-list">\n            ${p(e?.type)}\n            ${T(e.Points)}\n            ${f(e.TrueRatio)}\n            ${y(t,t.toFixed(2)+"%")}\n            ${I((e.TrueRatio/e.Points).toFixed(2))}\n           \n          </div>\n        </div>\n      `,this.section.querySelector(".target__aotw-container")?.remove(),this.section.insertBefore(s,this.container)}hideAotw(){this.section.querySelector(".target__aotw-container")?.remove(),Qe.aotw={...Qe?.aotw,wasShown:!0}}}function ye(){const e=e=>[{label:"Title",elements:[{type:"text",title:"game title",id:"game-props-title",value:e?.FixedTitle??""}]},{label:"Platform",elements:[{type:"text",title:"game platform",id:"game-props-platform",value:e?.ConsoleName??""}]},{label:"Genre",elements:[{type:"text",title:"game genre",id:"game-props-genre",value:e?.Genre??""}]},{label:"Time played",elements:[{type:"number",title:"time played",id:"game-props-time",value:e?.TimePlayed??"0"}]},{elements:[{id:"reset-game-props",label:"Reset Data",type:"button"},{id:"save-game-props",label:"Save Data",type:"button"}]}];let t;const s=(e,t)=>{Qe.gamesDB[t]=e,Qe.writeConfiguration()},i=(e,i)=>{e.querySelector("#save-game-props")?.addEventListener("click",(()=>((e,t)=>{const i=et.gameData,n=(e=>({FixedTitle:e.querySelector("#game-props-title")?.value,ConsoleName:e.querySelector("#game-props-platform")?.value,Genre:e.querySelector("#game-props-genre")?.value,TimePlayed:e.querySelector("#game-props-time")?.value}))(e);Object.getOwnPropertyNames(n).forEach((e=>{tt.GAME_DATA[e]=n[e],n[e]==i[e]&&delete n[e]})),s(n,t.ID),tt.reset()})(e,i))),e.querySelector("#reset-game-props")?.addEventListener("click",(()=>(async(e,i)=>{const a=et.gameData;tt.GAME_DATA.FixedTitle=a.FixedTitle,tt.GAME_DATA.ConsoleName=a.ConsoleName,tt.GAME_DATA.Genre=a.Genre,s({TimePlayed:tt.GAME_DATA.TimePlayed},i.ID),tt.reset(),t?.section?.remove(),n(a)})(0,i)))},n=s=>{var n;t=new le({title:s?.FixedTitle,content:(n=e(s),`\n    <ul class="game-props__list flex-column-list">\n      ${n.map((e=>`\n          <li class="game-props__item">${e.label??""}\n              ${e.elements.map((e=>Ae(e))).join("\n")}\n          </li>\n      `)).join("\n")}\n    </ul>`),id:"game-data-popup",classList:["game-data__section"]}),i(t.section,s)};return{open:n}}class Ie extends q{widgetIcon={description:"status widget",iconID:"side-panel__status",onChangeEvent:"ui.statusPanel.VISIBLE = this.checked",badgeLabel:"v1",iconClass:"status-icon"};get contextMenuItems(){return[{label:Je.lang.gameTime,elements:[{type:"checkbox",name:"context_show-time",id:"context_show-time",label:Je.lang.showTimeBar,checked:this.SHOW_TIME_BAR,event:'onchange="ui.statusPanel.SHOW_TIME_BAR = this.checked;"'},{type:"radio",name:"context_game-time",id:"context_show-playTime",label:Je.lang.gameTime,checked:"playTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'playTime';\""},{type:"radio",name:"context_game-time",id:"context_show-sessionTime",label:Je.lang.sessionGameTime,checked:"sessionTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'sessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-full-time",label:Je.lang.totalTime,checked:"totalSessionTime"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'totalSessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-timer",label:Je.lang.timer,checked:"timer"==this.SHOW_TIME,event:"onclick=\"ui.statusPanel.SHOW_TIME = 'timer';\""},{prefix:Je.lang.timer,postfix:Je.lang.min,type:"input-number",id:"context-menu_stats-timer-duration",label:Je.lang.timer,value:~~(this.TIMER_TIME/60*100)/100,event:'onchange="ui.statusPanel.TIMER_TIME = this.value;"',onChange:"ui.statusPanel.TIMER_TIME = this.value;"}]},{label:Je.lang.elements,elements:[{type:"checkbox",name:"context_show-target-preview",id:"context_show-target-preview",label:Je.lang.focusCheevoPreview,checked:this.SHOW_TARGET_PREVIEW,event:'onchange="ui.statusPanel.SHOW_TARGET_PREVIEW = this.checked;"'},{type:"radio",name:"context_description-variant-radio",id:"context_show-progression-description",label:Je.lang.progression,checked:"progression"===this.STATUS_DESCRIPTION_VARIANT,event:"onchange=\"ui.statusPanel.STATUS_DESCRIPTION_VARIANT = 'progression';\""},{type:"radio",name:"context_description-variant-radio",id:"context_show-game-info-description",label:Je.lang.richPresence,checked:"gameInfo"===this.STATUS_DESCRIPTION_VARIANT,event:"onchange=\"ui.statusPanel.STATUS_DESCRIPTION_VARIANT = 'gameInfo';\""},{type:"checkbox",name:"context_show-mastery-rate",id:"context_show-mastery-rate",label:Je.lang.showMasteryRate,checked:this.SHOW_MASTERY_RATE,event:'onclick="ui.statusPanel.SHOW_MASTERY_RATE = this.checked;"'}]},{label:Je.lang.progressionStyleTypes,elements:[{type:"radio",name:"context_progression-variant",id:"context_progression-variant-dots",label:Je.lang.dots,checked:"dots"===this.PROGRESSION_VARIANT,event:"onchange=\"ui.statusPanel.PROGRESSION_VARIANT = 'dots';\""},{type:"radio",name:"context_progression-variant",id:"context_progression-variant-rects",label:Je.lang.rects,checked:"rects"===this.PROGRESSION_VARIANT,event:"onchange=\"ui.statusPanel.PROGRESSION_VARIANT = 'rects';\""}]},{label:Je.lang.alerts,elements:[{type:"checkbox",name:"context_show-new-cheevos",id:"context_show-new-cheevos",label:Je.lang.showAlerts,checked:this.SHOW_NEW_ACHIV,event:'onchange="ui.statusPanel.SHOW_NEW_ACHIV = this.checked;"'},{prefix:Je.lang.duration,postfix:Je.lang.sec,type:"input-number",id:"context-menu_stats-earned-duration",label:Je.lang.duration,value:this.NEW_ACHIV_DURATION,event:'onchange="ui.statusPanel.NEW_ACHIV_DURATION = this.value;"',onChange:"ui.statusPanel.NEW_ACHIV_DURATION = this.value;"},{type:"checkbox",name:"context_show-stats-alert",id:"context_show-stats-alert",label:Je.lang.statsAlerts,checked:this.SHOW_STATISTICS_ALERT,event:'onchange="ui.statusPanel.SHOW_STATISTICS_ALERT = this.checked;"'}]},{type:"checkbox",name:"context_show-update-blink",id:"context_show-update-blink",label:Je.lang.showUpdateBlink,checked:this.BLINK_ON_UPDATE,event:'onchange="ui.statusPanel.BLINK_ON_UPDATE = this.checked;"'},{type:"checkbox",name:"context_hard-mode",id:"context_hard-mode",label:Je.lang.hardcoreMode,checked:this.IS_HARD_MODE,event:'onchange="ui.statusPanel.IS_HARD_MODE = this.checked; ui.statusPanel.generateProgressionBlock()"'},{type:"checkbox",name:"context_game-bg",id:"context_game-bg",label:Je.lang.gameBg,checked:this.SHOW_GAME_BG,event:'onchange="ui.statusPanel.SHOW_GAME_BG = this.checked;"'}]}get SHOW_TIME_BAR(){return Qe.getUIProperty({sectionID:this.section.id,property:"showTimeBar"})??!0}set SHOW_TIME_BAR(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showTimeBar",value:e}),this.setElementsValues()}get IS_HARD_MODE(){return Qe.getUIProperty({sectionID:this.section.id,property:"hardMode"})??!0}set IS_HARD_MODE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"hardMode",value:e})}get BLINK_ON_UPDATE(){return Qe.ui.update_section?.showUpdateBlink??!0}set BLINK_ON_UPDATE(e){Qe.ui.update_section.showUpdateBlink=e,Qe.writeConfiguration()}get SHOW_TICKER(){return!1}set SHOW_TICKER(e){Qe.ui.update_section.showTicker=e,Qe.writeConfiguration(),this.setElementsValues(),this.SHOW_TICKER?this.infiniteLine.startScrolling():this.infiniteLine.stopScrolling()}get SHOW_RP(){return!1}set SHOW_RP(e){Qe.ui.update_section.showRP=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_HP(){return!1}set SHOW_HP(e){Qe.ui.update_section.showHP=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_SP(){return!1}set SHOW_SP(e){Qe.ui.update_section.showSP=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_STATISTICS_ALERT(){return Qe.ui.update_section?.showStatisticsAlert??!0}set SHOW_STATISTICS_ALERT(e){Qe.ui.update_section.showStatisticsAlert=e,Qe.writeConfiguration()}get SHOW_CHEEVOS(){return!1}set SHOW_CHEEVOS(e){Qe.ui.update_section.showCheevos=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_PROGRESSION(){return!1}set SHOW_PROGRESSION(e){Qe.ui.update_section.showProgression=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_PLATFORM(){return!0}set SHOW_PLATFORM(e){Qe.ui.update_section.showPlatform=e,Qe.writeConfiguration(),this.setElementsValues()}get SHOW_RICH_PRESENCE(){return!0}set SHOW_RICH_PRESENCE(e){Qe.ui.update_section.showRichPresence=e,Qe.writeConfiguration(),this.setElementsValues()}get STATS_DURATION(){const e=Qe.ui.update_section?.statsDuration??30;return e<5?5:e}set STATS_DURATION(e){Qe.ui.update_section.statsDuration=e,Qe.writeConfiguration(),this.startStatsAnimation()}get SHOW_NEW_ACHIV(){return Qe.ui.update_section?.showNewAchiv??!0}set SHOW_NEW_ACHIV(e){Qe.ui.update_section.showNewAchiv=e,Qe.writeConfiguration()}get CHANGE_PROGRESS_AUTO(){return"auto"==Qe.ui.update_section?.progressBarPropertyName}get PROGRESSBAR_PROPERTY_NAME(){return Qe.ui.update_section?.progressBarPropertyName??"auto"}set PROGRESSBAR_PROPERTY_NAME(e){Qe.ui.update_section.progressBarPropertyName=e,Qe.writeConfiguration(),this.setProgressBarValue()}get NEW_ACHIV_DURATION(){const e=Qe.ui.update_section?.newAchivDuration??15;return e<5?5:e}set NEW_ACHIV_DURATION(e){Qe.ui.update_section.newAchivDuration=e,Qe.writeConfiguration()}get AUTOSCROLL_RICHPRESENCE(){return!0}get SHOW_GAME_PREV_BORDER(){return!1}set SHOW_GAME_PREV_BORDER(e){Qe.ui.update_section.showGamePrevBorder=e,Qe.writeConfiguration(),this.container.classList.toggle("game-border",e)}get SHOW_GAME_RATIO(){return!1}set SHOW_GAME_RATIO(e){this.SHOW_GAME_RATIO&&e?(e=!1,document.getElementById("context_show-game-ratio").checked=!1):Qe.ui.update_section.showMasteryRate=!e,Qe.ui.update_section.showGameRatio=e,Qe.writeConfiguration(),this.setElementsValues()}get SHOW_MASTERY_RATE(){return Qe?.ui?.update_section?.showMasteryRate??!1}set SHOW_MASTERY_RATE(e){this.SHOW_MASTERY_RATE&&e?(e=!1,document.getElementById("context_show-mastery-rate").checked=!1):Qe.ui.update_section.showGameRatio=!e,Qe.ui.update_section.showMasteryRate=e,Qe.writeConfiguration(),this.setElementsValues()}get SHOW_TIME(){return Qe.ui.update_section?.time??"playTime"}set SHOW_TIME(e){Qe.ui.update_section.time=e,Qe.writeConfiguration(),this.startStatsAnimation()}get TIMER_TIME(){return Qe.ui.update_section?.timerTime??2}set TIMER_TIME(e){e<=0&&(e=1),e>1440&&(e=1440),Qe.ui.update_section.timerTime=60*e,Qe.writeConfiguration(),this.timerTime=this.TIMER_TIME,this.startStatsAnimation()}get STATUS_DESCRIPTION_VARIANT(){return Qe?.ui?.update_section?.statusDescriptionVariant??"gameInfo"}set STATUS_DESCRIPTION_VARIANT(e){const t={gameInfo:"show-game-info",progression:"show-game-progress"};Qe.ui.update_section.statusDescriptionVariant=e,Qe.writeConfiguration(),Object.values(t).forEach((e=>this.section.classList.remove(e))),this.section.classList.add(t[e])}get SHOW_TARGET_PREVIEW(){return Qe.ui.update_section?.showTargetPreview??!1}set SHOW_TARGET_PREVIEW(e){Qe.ui.update_section.showTargetPreview=e,Qe.writeConfiguration(),this.generateProgressionBlock()}get SHOW_GAME_BG(){return Qe.ui.update_section?.showGameBg??!0}set SHOW_GAME_BG(e){Qe.ui.update_section.showGameBg=e,Qe.writeConfiguration(),this.container.classList.toggle("game-bg",this.SHOW_GAME_BG)}get PROGRESSION_VARIANT(){return Qe.ui.update_section?.progressionVariant??"dots"}set PROGRESSION_VARIANT(e){Qe.ui.update_section.progressionVariant=e,Qe.writeConfiguration(),this.generateProgressionBlock()}stats={userName:Qe.targetUser,gameTitle:tt.GAME_DATA?.Title??"Title",gamePlatform:tt.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:`https://media.retroachievements.org${tt.GAME_DATA?.ImageIcon}`,totalPoints:tt.GAME_DATA?.totalPoints??0,totalAchievesCount:tt.GAME_DATA?.NumAchievements??0,totalSoftpoints:0,earnedPoints:0,earnedAchievesCount:0,totalRetropoints:tt.GAME_DATA?.TotalRetropoints,earnedRetropoints:0,earnedSoftpoints:0};awards={award:"",progressionAward:""};timerTime=this.TIMER_TIME;gameTimeInterval;getActiveTime=()=>{let e=0;switch(this.SHOW_TIME){case"playTime":e=tt.playTime.totalGameTime;break;case"sessionTime":e=tt.playTime.gameTime;break;case"totalSessionTime":e=tt.playTime.sessionTime,e=e<0?0:e;break;case"timer":e=this.TIMER_TIME-tt.playTime.gameTime}return o(e,!0)};get statusTextValues(){const e={};return this.SHOW_HP&&(e.progressionInPointsStats=`${this.stats.earnedPoints}/${this.stats.totalPoints} HP`),this.SHOW_CHEEVOS&&(e.cheevosStats=`${this.stats.earnedAchievesCount}/${this.stats.totalAchievesCount} CHEEVOS`),this.SHOW_PROGRESSION&&(e.cheevosStats=`${this.stats.earnedProgressionCount}/${this.stats.totalProgressionCount} STEPS`),this.SHOW_RP&&(e.retroPointsStats=`${this.stats.earnedRetropoints}/${this.stats.totalRetropoints} RP`),this.SHOW_SP&&(e.softPointsStats=`${this.stats.earnedSoftpoints}/${this.stats.totalPoints-this.stats.earnedPoints} SP`),this.SHOW_TIME&&(e.gameTime=this.getActiveTime()),e}constructor(){super(),this.addWidgetIcon(),!Qe.ui.update_section&&(Qe.ui.update_section={}),this.initializeElements(),this.addEvents(),ze.applyPosition({widget:this}),this.infiniteLine=be({container:this.section.querySelector("#magic-line"),textGenerator:we}),setTimeout((()=>{this.fitFontSize()}),1e3)}initializeElements(){this.section=document.querySelector("#update-section"),this.container=this.section.querySelector(".status__container"),this.guideLink=this.section.querySelector("#status-game-guide"),this.progresBar=this.section.querySelector("#status-progress-bar"),this.progresBarDelta=this.section.querySelector("#status_progress-bar-delta"),this.progressStatusText=this.section.querySelector("#status-progress-text"),this.resizer=this.section.querySelector("#status-resizer"),this.frontSide={container:this.section.querySelector(".status__front-side"),gamePreview:this.section.querySelector("#game-preview"),retroRatioElement:this.section.querySelector(".status__retro-ratio"),gameTitle:this.section.querySelector("#game-title"),gamePlatform:this.section.querySelector("#game-platform"),richPresence:this.section.querySelector("#rich-presence"),watchButton:this.section.querySelector("#watching-button"),sideBlock:this.section.querySelector(".status__sideblock-container"),iconsContainer:this.section.querySelector("#status__sideblock-icons")},this.backSide={container:this.section.querySelector(".status__back-side"),imgElement:this.section.querySelector("#update_achiv-preview"),titleElement:this.section.querySelector("#update_achiv-title"),descriptionElement:this.section.querySelector("#update_achiv-description"),badgesElement:this.section.querySelector("#update_achiv-earned-points")}}setElementsValues(){this.STATUS_DESCRIPTION_VARIANT=this.STATUS_DESCRIPTION_VARIANT,this.progressStatusText.innerText="";const e=tt.GAME_DATA.ImageIngame;this.container.style.setProperty("--bg-image",`url(https://media.retroachievements.org${e})`),(()=>{this.container.classList.toggle("game-border",this.SHOW_GAME_PREV_BORDER),this.container.classList.toggle("show-game-ratio",this.SHOW_GAME_RATIO||this.SHOW_MASTERY_RATE),this.container.classList.toggle("game-bg",this.SHOW_GAME_BG),this.container.classList.toggle("show-ticker",this.SHOW_TICKER),this.container.classList.toggle("show-time-bar",this.SHOW_TIME_BAR),this.frontSide.gamePlatform.classList.toggle("hidden",!this.SHOW_PLATFORM),this.frontSide.richPresence.classList.toggle("hidden",!this.SHOW_RICH_PRESENCE)})(),(()=>{const e=tt.GAME_DATA.retroRatio,t=tt.GAME_DATA.masteryRate;this.frontSide.retroRatioElement.innerText=this.SHOW_MASTERY_RATE?t:e,this.frontSide.retroRatioElement.className=`status__retro-ratio difficult-badge__${tt.GAME_DATA.gameDifficulty}`})(),(()=>{const{ImageIcon:e,FixedTitle:t,ConsoleName:s,ConsoleID:i,badges:n,ID:a,GuideURL:o}=tt.GAME_DATA,{gamePreview:r,gameTitle:c,gamePlatform:l,richPresence:d}=this.frontSide;r.setAttribute("src",`https://media.retroachievements.org${e}`),c.innerHTML=`\n                <a target="_blank" class="status__game-title" href="https://retroachievements.org/game/${a}">${t}</a>\n                ${w(n)} \n                ${w([$[i||1]])}\n\n            `,setTimeout((()=>{this.startAutoScrollElement(c,!0,6e4),this.startAutoScrollElement(d,!0,6e4)}),1e4),this.guideLink.setAttribute("href",o),this.guideLink.classList.toggle("hidden",!o),l.innerText=s||"",this.generateProgressionBlock()})(),this.fillSidebarIcons(),this.setProgressBarValue(),this.startStatsAnimation(),this.SHOW_TICKER&&this.infiniteLine.startScrolling()}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".resizer")?(e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section,callback:()=>this.fitFontSize(!0)})):e.target.matches(".status__watch-button")?(e.stopPropagation(),tt.isActive?tt.stop():tt.start()):e.target.matches(".comments-button")?(e.stopPropagation(),de(tt.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),ye().open(tt.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems})}))}fillSidebarIcons(){const e=this.IS_HARD_MODE?{...tt.GAME_DATA.earnedStats.hard}:{...tt.GAME_DATA.earnedStats.soft};this.frontSide.iconsContainer.innerHTML=`\n            <p class="signed-icon auto-font-size" data-title="cheevos count"><i\n                class="description-icon achievements-icon  auto-font-size"></i>\n                ${e.count}/${tt.GAME_DATA.NumAchievements}\n            </p>\n\n            <p class="signed-icon auto-font-size" data-title="total points"><i\n                class="description-icon points-icon  auto-font-size"></i>\n                ${e.points}/${tt.GAME_DATA.totalPoints}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="true ratio">\n            <i class="description-icon rarity-icon  auto-font-size"></i>\n            ${tt.GAME_DATA.retroRatio}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="total retropoints"><i\n                class="description-icon retropoints-icon  auto-font-size"></i>\n                ${e.retropoints}/${tt.GAME_DATA.TotalRetropoints}\n            </p>\n        `}updateGameData(e=!1){this.stats={userName:Qe.targetUser,gameTitle:tt.GAME_DATA?.FixedTitle??"Title",gamePlatform:tt.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:`https://media.retroachievements.org${tt.GAME_DATA?.ImageIcon}`,totalPoints:tt.GAME_DATA?.totalPoints??0,totalSoftPoints:tt.GAME_DATA.totalPoints-tt.GAME_DATA.earnedStats.soft.points,totalAchievesCount:tt.GAME_DATA?.NumAchievements??0,totalProgressionCount:tt.GAME_DATA?.progressionSteps,earnedPoints:tt.GAME_DATA.earnedStats.hard.points,earnedAchievesCount:tt.GAME_DATA.earnedStats.hard.count,earnedProgressionCount:tt.GAME_DATA.earnedStats.soft.progressionCount,totalRetropoints:tt.GAME_DATA?.TotalRetropoints,earnedRetropoints:tt.GAME_DATA.earnedStats.hard.retropoints,earnedSoftpoints:tt.GAME_DATA.earnedStats.soft.points-tt.GAME_DATA.earnedStats.hard.points},e&&(this.awards.award=tt.GAME_DATA.award,this.awards.progressionAward=tt.GAME_DATA.progressionAward)}gameChangeEvent(e=!1){e&&tt.IS_WATCHING&&this.addAlertsToQuery([{type:D.game,value:tt.GAME_DATA}]),this.updateGameData(!0),this.setElementsValues()}timeWatcher(){this.frontSide.watchButton.classList.toggle("active",tt.isActive),this.section.classList.toggle("watching",tt.IS_ONLINE&&tt.isActive);return{start:()=>{Je.statusPanel.timeWatcher().stop(),this.gameTimeInterval=setInterval((()=>{"timer"===this.SHOW_TIME&&tt.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval)}}}setProgressBarValue(){let e=0;switch(this.PROGRESSBAR_PROPERTY_NAME){case"points":e=this.stats.earnedPoints/tt.GAME_DATA?.totalPoints;break;case"retropoints":e=this.stats.earnedRetropoints/tt.GAME_DATA?.TotalRetropoints;break;case"achives":e=this.stats.earnedAchievesCount/tt.GAME_DATA?.NumAchievements;break;case"progression":e=this.stats.earnedProgressionCount/tt.GAME_DATA?.progressionSteps;break;case"softpoints":e=this.stats.earnedSoftpoints/this.stats.totalSoftPoints}this.section.style.setProperty("--progress-points",100*(e||0)+"%")}generateProgressionBlock(){const e=this.section.querySelector(".status__progression-container"),t=this.section.querySelector(".status__description-text"),s=e=>this.IS_HARD_MODE?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",i={dots:()=>{const e=Object.values(tt.CHEEVOS).filter((e=>"progression"==e.type)).sort(((e,t)=>Q.default(e,t))),t=Object.values(tt.CHEEVOS).filter((e=>"win_condition"==e.type));return e.reduce(((e,t)=>e+=`\n                            <div class="progression-point progression-point__dot  ${s(t)}" data-achiv-id=${t.ID}></div>\n                        `),"")+(t?.length>0?`\n                        <div class="win-points win-points__dots">\n                            ${t.reduce(((e,t)=>e+=`\n                                <div class="progression-point progression-point__dot-win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                         </div>\n                        `:"")},rects:()=>{const e=Object.values(tt.CHEEVOS).filter((e=>"progression"==e.type)).sort(((e,t)=>Q.default(e,t))),t=Object.values(tt.CHEEVOS).filter((e=>"win_condition"==e.type));return e.reduce(((e,t)=>e+=`\n                        <div class="rp__progression-point ${s(t)}" data-achiv-id=${t.ID}></div>\n                    `),"")+(t?.length>0?`\n                    <div class="rp__win-points">\n                        ${t.reduce(((e,t)=>e+=`\n                                <div class="rp__progression-point win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                     </div>\n                    `:"")}},n=Object.values(tt.CHEEVOS).filter((e=>z.progression(e))).sort(((e,t)=>Q.default(e,t))).find((e=>!s(e)));e.classList.remove("progression-points__dots","progression-points__rects"),e.classList.add(`progression-points__${this.PROGRESSION_VARIANT}`),e.innerHTML=i[this.PROGRESSION_VARIANT](),t.innerHTML=n?n.Description:tt.GAME_DATA?.progressionAward?"You have beaten the game "+(tt.GAME_DATA.winVariantCount>1?"for all possible endings":""):"Progression is not available";const a=e.querySelector(`[data-achiv-id="${n?.ID}"`);a?.scrollIntoView({behavior:"smooth",block:"end",inline:"center"}),a?.classList.add("focus"),this.frontSide.gamePreview.src=this.SHOW_TARGET_PREVIEW&&n?`https://media.retroachievements.org/Badge/${n?.BadgeName}.png`:`https://media.retroachievements.org${tt.GAME_DATA.ImageIcon}`}updateProgress({earnedAchievementIDs:e}){e.length>0&&(this.IS_HARD_MODE=!!tt.CHEEVOS[e[0]].isHardcoreEarned),this.updateGameData(),this.generateProgressionBlock(),this.fillSidebarIcons(),this.progresBarDelta?.classList.remove("hidden"),setTimeout((()=>this.progresBarDelta?.classList.add("hidden")),50),this.initialStats&&(this.initialStats.cheevosCount+=e.length)}initialStats;currentStats;deltaStats;updateStatistics({userSummary:e}){function t(e){return 0==e?"":(e>0?"+":"")+e}if(this.initialStats){this.currentStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked};const s=this.currentStats.rank-this.initialStats.rank,i=(this.currentStats.percentile-this.initialStats.percentile).toFixed(3),n={deltaPoints:t(this.currentStats.points-this.initialStats.points),deltaRetroPoints:t(this.currentStats.retroPoints-this.initialStats.retroPoints),deltaSoftPoints:t(this.currentStats.softPoints-this.initialStats.softPoints),deltaRank:t(s),deltaPercentile:t(i)};this.deltaStats=n;const a={type:D.stats,value:{...this.currentStats,...n,cheevosCount:this.initialStats.cheevosCount}};!this.alertsQuery.find((e=>e.type===D.stats))&&this.addAlertsToQuery([a]),Je.status.addAlertsToQuery([a]),this.SHOW_TICKER&&this.infiniteLine.startScrolling(),this.infiniteLine.startScrolling()}else this.initialStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked,cheevosCount:0},this.currentStats=this.initialStats}alertsQuery=[];addAlertsToQuery(e){this.SHOW_NEW_ACHIV&&(this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts()))}async startAlerts(){const e=()=>{this.container.classList.remove("new-game-info","new-achiv","new-award","stats","beaten","mastered"),this.backSide.container.classList.remove("hardcore","beaten","mastered","beaten-softcore","completed")},t=()=>{const e=this.section.querySelector(".status_glass-effect");e.classList.remove("update"),setTimeout((()=>e.classList.add("update")),20)},s=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:c,beatenRate:l}=e;this.backSide.imgElement.src=`https://media.retroachievements.org${i}`,this.backSide.titleElement.innerHTML=`${t} ${w(s)}\n            <i class="badge">${a}</i>\n            `;let u=`\n                ${b(g+r)}\n                ${b(d+n)}\n                ${b(h+o)}\n                ${b(c+"% MASTERED")}\n                ${b(l+"% BEATEN")}\n            `;this.backSide.descriptionElement.innerText="",this.backSide.badgesElement.innerHTML=u,this.container.classList.add("new-game-info")},i=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:c}=e;this.backSide.imgElement.src=i,this.backSide.titleElement.innerHTML=s,this.backSide.descriptionElement.innerText=e.Description;let l=t?`\n                    ${b(d+" +"+n)}\n                    ${b(h+" +"+a)}\n                    ${b("TOP"+r)}\n                    ${C.difficultBadge(c)}\n                `:`\n                    ${b(d+" +"+n)}\n                    ${b("TOP"+o)}\n                    ${C.difficultBadge(c)}\n                `,g=e.genres?.map((e=>b(e))).join("\n")??"";this.backSide.badgesElement.innerHTML=g+l,this.backSide.container.classList.toggle("hardcore",e.isHardcoreEarned),setTimeout((()=>this.container.classList.add("new-achiv")),2e3)},n=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:c,beatenRate:l,completedRate:u,beatenSoftRate:m,ID:p,NumAchievements:_,TimePlayed:E}=e,v="mastered"==t?c:"beaten"==t?l:"completed"==t?u:m,S=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(E);this.backSide.imgElement.src=`https://media.retroachievements.org${n}`,this.backSide.titleElement.innerHTML=`${s} ${w(i)}\n                ${b("GAINED AWARD")}\n            `;let A=`\n                ${b(`${t} IN ${S}`)}\n                ${b(`TOP${v}%`)}\n                ${b(`${g}${o.hard.count}/${_}`)}\n                ${b(`${d}${o.hard.points}/${a}`)}\n                ${b(`${h}${o.hard.retropoints}/${r}`)}\n            `;this.backSide.badgesElement.innerHTML=A,this.backSide.descriptionElement.innerText="",this.backSide.container.classList.add(t),setTimeout((()=>this.container.classList.add("new-award")),1e3)},a=e=>{this.backSide.imgElement.src=Qe.userImageSrc,this.backSide.titleElement.innerHTML=`\n                ${Qe.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${b(`Rank: ${e.rank} ${e.deltaRank}`)}\n                ${b(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`)}\n                ${b(`${g} +${e.cheevosCount}`)}\n                ${b(`${d}${e.points} ${e.deltaPoints}`)}\n                ${b(`${h}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${b(`${d}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.backSide.badgesElement.innerHTML=t,this.backSide.descriptionElement.innerText="",this.container.classList.add("stats")},o=t=>{switch(e(),t.type){case D.game:s(t.value);break;case D.cheevo:i(t.value);break;case D.award:n(t.value,t.award);break;case D.stats:a(t.value)}};for(;this.alertsQuery.length>0;){const e=this.alertsQuery[0];if(!e.value)return void this.alertsQuery.shift();const s=()=>{o(e),this.container.classList.add("show-back"),t(),setTimeout((()=>{this.startAutoScrollElement(this.backSide.titleElement),this.startAutoScrollElement(this.backSide.badgesElement)}),2e3)},i=()=>{this.container.classList.remove("show-back"),this.alertsQuery.shift(),this.stopAutoScrollElement(this.backSide.badgesElement,!0),this.stopAutoScrollElement(this.backSide.titleElement,!0)};await L(1e3),s(),await L(1e3*this.NEW_ACHIV_DURATION),i()}}statsAnimationInterval;startStatsAnimation(){this.stopStatsAnimation(),this.section.classList.remove("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e,this.frontSide.sideBlock.classList.toggle("long-time",e.length>6))}stopStatsAnimation(){clearInterval(this.statsAnimationInterval),this.currentStatusTextIndex=0}changeStatsElementValues({className:e,text:t}){this.progressStatusText.innerText=t,this.progressStatusText.className=`status__big-text ${e}`,this.CHANGE_PROGRESS_AUTO&&"gameTime"!=e&&this.section.style.setProperty("--progress-points",this.convertToPercentage(t)||"0%")}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};this.autoscrollAlertInterval[i].interval=setInterval((()=>{e.clientWidth==e.scrollWidth?(this.stopAutoScrollElement(e,!0),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(e.scrollLeft++,e.scrollWidth-e.scrollLeft<=e.clientWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),5e3))):(e.scrollLeft--,e.scrollLeft<=0&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0),clearInterval(this.autoscrollAlertInterval[e.className].interval),clearTimeout(this.autoscrollAlertInterval[e.className].timeout)}convertToPercentage(e){const t=e.split("/");return(parseInt(t[0],10)/parseInt(t[1],10)*100).toFixed(2)+"%"}fitFontSize(e=!1){const t=this.section.querySelector(".status__container");let s=Qe.ui["update-section"]?.height??this.section.getBoundingClientRect().height;e&&(s=this.section.getBoundingClientRect().height);const i=(parseInt(s)-10)/5.5+"px";t.style.fontSize=i}blinkUpdate(){this.section.classList.remove("offline","blink"),this.BLINK_ON_UPDATE&&tt.IS_ONLINE?(this.section.classList.add("blink"),setTimeout((()=>this.section.classList.remove("blink","offline")),1e3)):tt.IS_ONLINE||this.section.classList.add("offline")}}function we(){const e={...tt.GAME_DATA?.earnedStats,user:Qe?.targetUser,game:tt.GAME_DATA?.FixedTitle,console:tt.GAME_DATA?.ConsoleName,totalCheevos:tt.GAME_DATA?.NumAchievements,totalPoints:tt.GAME_DATA?.totalPoints,totalRetropoints:tt.GAME_DATA?.TotalRetropoints},t="&nbsp;&nbsp;&middot;&nbsp;&nbsp;\n    ",s=`retrocheevos.vercel.app${t}`,i=`\n        ${e.user} is playing ${e.game} for ${e.console}${t}`,n=`\n        Game statistics: \n        ${e.hard.count>0?e.hard.count+"/":""}${e.soft.count>0?e.soft.count+"/":""}${e.totalCheevos} achievements, \n        ${e.hard.points>0?e.hard.points+"/":""}${e.soft.points>0?e.soft.points+"/":""}${e.totalPoints} points, \n        ${e.hard.retropoints?e.hard.retropoints+"/":""}${e.totalRetropoints} retropoints${t}`,a=!!Je.statusPanel?.deltaStats?.deltaPoints,o=!!Je.statusPanel?.deltaStats,r=a?`${Je.statusPanel.deltaStats.deltaPoints} hardpoints and ${Je.statusPanel.deltaStats.deltaRetroPoints} retropoints`:`and ${Je.statusPanel?.deltaStats?.deltaSoftPoints} softpoints`,c=o?`Session statistics: +${Je.statusPanel.initialStats.cheevosCount} achievements, ${r}${t}`:"",l=Je.statusPanel?.currentStats||Je.statusPanel?.initialStats;return i+n+c+(l?`User statistics: position ${l?.rank} in RA rank system (TOP${l?.percentile.toFixed(2)}%), \n        ${l?.points} total hardpoints, \n        ${l?.retroPoints} total retropoints and\n        ${l?.softPoints} total softpoints\n        ${t}`:"")+s}function be({container:e,textGenerator:t}){const s=e=>`<p class="infinite-line">${e}</p>`;let i;const n=()=>{i&&clearInterval(i),e.innerHTML=""};return{startScrolling:()=>{n(),(()=>{for(;e.scrollWidth/e.offsetWidth<2||e.querySelectorAll("p").length<3;)e.innerHTML+=s(t())})(),i=setInterval((()=>{e.scrollLeft++,(e=>e.scrollLeft)(e)+e.offsetWidth>=e.scrollWidth&&(e.querySelector(".infinite-line").remove(),e.scrollTo(e.scrollWidth,0),e.innerHTML+=s(t()))}),40)},stopScrolling:n}}class Ce{get VISIBLE(){return!this.section.classList.contains("hidden")}constructor(){this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=document.querySelector("#side_panel"),this.header=this.section.querySelector("#buttons-header_container"),this.settings=this.section.querySelector("#open-settings-button"),this.achievements=this.section.querySelector("#open-achivs-button"),this.gameCard=this.section.querySelector("#open-game-card-button"),this.target=this.section.querySelector("#open-target-button"),this.status=this.section.querySelector("#open-status-button"),this.awards=this.section.querySelector("#open-awards-button"),this.games=this.section.querySelector("#open-games-button"),this.progression=this.section.querySelector("#open-progression-button"),this.userImage=this.section.querySelector("#side-panel-user-image"),this.note=this.section.querySelector("#open-note-button"),this.notifications=this.section.querySelector("#open-notifications-button"),this.user=this.section.querySelector("#open-user-button"),this.stats=this.section.querySelector("#open-stats-button")}addEvents(){this.sidePanel=document.querySelector("#side_panel"),setTimeout((()=>Je.buttons.section.classList.remove("expanded")),2e3),document.addEventListener("touchstart",(e=>this.touchVisibilityHandler(e))),this.settings.addEventListener("click",(e=>{const t=document.querySelector("#settings_section");t?t.remove():Je.settings.openSettings()}))}setValues(){this.userImage.src=Qe.userImageSrc}touchVisibilityHandler(e){e.touches[0].clientX<50&&(this.section.classList.add("expanded"),this.section.addEventListener("blur",(e=>{setTimeout((()=>Je.buttons.section.classList.remove("expanded")),0)})))}generatePanel(){const e=document.createElement("section");e.id="side_panel",e.classList.add("buttons-block","expanded")}}class Oe extends q{widgetIcon={iconClass:"settings-icon"};get settingsItems(){return[{label:Je.lang.style,elements:[{type:"select",label:Je.lang.selectColors,id:"settings_colors-selector",selectValues:[...Object.keys(i).map((e=>({type:"radio",name:"settings_color-scheme",id:`settings_color-scheme-${e}`,label:e,checked:Je.settings.COLOR_SCHEME===e,event:`onchange="ui.settings.COLOR_SCHEME = '${e}'"`}))),{type:"radio",name:"settings_color-scheme",id:"settings_color-scheme-custom",label:"custom",checked:"custom"===Je.settings.COLOR_SCHEME,event:"onchange=\"ui.settings.COLOR_SCHEME = 'custom'\""}]},{type:"checkbox",label:Je.lang.showBgAnimation,id:"settings_show-bg",onChange:"ui.settings.BG_ANIMATION = this.checked;",checked:this.BG_ANIMATION},{type:"checkbox",label:Je.lang.stickyWindows,id:"settings_sticky-windows",onChange:"ui.settings.IS_WINDOWS_STICKY = this.checked;",checked:this.IS_WINDOWS_STICKY}]},{label:Je.lang.customColors,elements:[{type:"color",id:"main-color-input",label:"main color",value:Qe.mainColor,onChange:"config.mainColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"secondary-color-input",label:"secondary color",value:Qe.secondaryColor,onChange:"config.secondaryColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"accent-color-input",label:"accent color",value:Qe.accentColor,onChange:"config.accentColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"selection-color-input",label:"selection color",value:Qe.selectionColor,onChange:"config.selectionColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"},{type:"color",id:"font-color-input",label:"font color",value:Qe.fontColor,onChange:"config.fontColor = this.value; ui.settings.COLOR_SCHEME = ui.settings.COLOR_SCHEME"}]},{label:Je.lang.fontFamily,elements:[{type:"select",label:Je.lang.selectFont,id:"settings_font-family",selectValues:[{type:"radio",name:"settings_font-family",id:"settings_font-family-default",label:"default",checked:"default"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('default');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Oxygen",label:"Oxygen",checked:"Oxygen"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('oxygen');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Shadows",label:"Shadows",checked:"Shadows"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('shadows');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Pixelify",label:"Pixelify",checked:"Pixelify Sans"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('pixelifySans');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Jaro",label:"Jaro",checked:"Jaro"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('jaro');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Jacquard",label:"Jacquard",checked:"Jacquard"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('jacquard');\""},{type:"radio",name:"settings_font-family",id:"settings_font-family-Custom",label:"Custom",checked:"custom"===Je.settings.FONT_NAME,event:"onchange=\"ui.settings.selectFont('custom');\""}]},{type:"search",label:Je.lang.pasteHere,id:"settings_font-input",value:"",onChange:"ui.settings.FONT_FAMILY = this.value; this.value = '';"},{type:"button",label:"-",id:"settings_font-size-decrease",onClick:"ui.settings.FONT_SIZE = parseFloat(ui.settings.FONT_SIZE) - 0.5;"},{type:"button",label:"+",id:"settings_font-size-increase",onClick:"ui.settings.FONT_SIZE = parseFloat(ui.settings.FONT_SIZE) + 0.5;"}]},{label:Je.lang.targetUser,elements:[{type:"search",label:Qe.targetUser,id:"settings_target-user-input",value:Qe.targetUser,onChange:"config.targetUser = this.value"}]},{label:Je.lang.gameID,elements:[{type:"button",label:Je.lang.checkGameID,id:"settings_check-game-id",onClick:"watcher.updateGameData(config.gameID)"},{type:"button",label:Je.lang.getLastID,id:"settings_get-last-id",onClick:"ui.settings.getLastGameID()"},{type:"number",label:Je.lang.gameID,id:"settings_game-id-input",value:Qe.gameID,onChange:"config.gameID = this.value;"}]},{label:Je.lang.autoupdate,elements:[{type:"checkbox",label:Je.lang.startOnLoad,id:"settings_start-on-load",onChange:"ui.settings.START_ON_LOAD = this.checked;",checked:this.START_ON_LOAD},{type:"checkbox",label:Je.lang.pauseIfOffline,id:"settings_autopause",onChange:"ui.settings.PAUSE_ON_OFFLINE = this.checked;",checked:this.PAUSE_ON_OFFLINE},{type:"number",label:"sec",id:"settings_update-delay-input",value:Qe.updateDelay,onChange:"config.updateDelay = this.value",title:"autoupdate interval in secs"}]},{label:Je.lang.fsAlerts,elements:[{type:"checkbox",label:Je.lang.earnCheevoAlert,id:"settings_fsalert-cheevo",onChange:"ui.settings.FS_NEW_CHEEVO = this.checked;",checked:this.FS_NEW_CHEEVO},{type:"checkbox",label:Je.lang.earnAwardAlert,id:"settings_fsalert-award",onChange:"ui.settings.FS_NEW_AWARD = this.checked;",checked:this.FS_NEW_AWARD},{type:"number",label:Je.lang.duration,id:"settings_fsakert-duration-input",value:this.FS_DURATION_SEC,onChange:"ui.settings.FS_DURATION_SEC = this.value",title:"alert duration in secs"}]},{label:"Discord Alerts",elements:[{type:"text-input",label:Je.lang.pasteWebhook,id:"settings_discord-hook-input",value:this.DISCORD_WEBHOOK??"",onChange:"ui.settings.DISCORD_WEBHOOK = value;"},{type:"checkbox",label:Je.lang.startGameAlert,id:"settings_discord-start-game",onChange:"ui.settings.DISCORD_NEW_GAME = this.checked;",checked:this.DISCORD_NEW_GAME},{type:"checkbox",label:Je.lang.startSession,id:"settings_discord-start-session",onChange:"ui.settings.DISCORD_START_SESSION = this.checked;",checked:this.DISCORD_START_SESSION},{type:"checkbox",label:Je.lang.earnCheevoAlert,id:"settings_discord-new-cheevo",onChange:"ui.settings.DISCORD_NEW_CHEEVO = this.checked;",checked:this.DISCORD_NEW_CHEEVO},{type:"number",label:Je.lang.points,id:"settings_min-points-alert",title:"Min points for Alert",value:this.DISCORD_MIN_POINTS_ALERT,onChange:"ui.settings.DISCORD_MIN_POINTS_ALERT = this.value;"},{type:"number",label:Je.lang.retropoints,title:"Min retroPoints for Alert",id:"settings_min-retropoints-alert",value:this.DISCORD_MIN_RETROPOINTS_ALERT,onChange:"ui.settings.DISCORD_MIN_RETROPOINTS_ALERT = this.value;"},{type:"checkbox",label:"Hardcore Only",id:"settings_discord-hard-award",onChange:"ui.settings.DISCORD_HARD_ONLY_ALERT = this.checked;",checked:this.DISCORD_HARD_ONLY_ALERT},{type:"checkbox",label:Je.lang.earnAwardAlert,id:"settings_discord-new-award",onChange:"ui.settings.DISCORD_NEW_AWARD = this.checked;",checked:this.DISCORD_NEW_AWARD}]},{label:"Language",elements:[{name:"settings-language",type:"radio",label:"English",id:"settings_lang-en",onChange:"ui.settings.LANG = 'en';",checked:"en"===this.LANG},{name:"settings-language",type:"radio",label:"Українська",id:"settings_lang-ua",onChange:"ui.settings.LANG = 'ua';",checked:"ua"===this.LANG}]},{label:Je.lang.data,elements:[{label:Je.lang.exportCompletion,type:"button",name:"context_export-completion",id:"context_export-completion",onClick:"ui.exportCompletionDataToXlsx()"},{label:Je.lang.exportWantToPlay,type:"button",name:"context_export-wtp-list",id:"context_export-wtp-list",onClick:"ui.exportWantToPlayToCSV()"},{label:Je.lang.exportSettings,type:"button",name:"context_export-settings",id:"context_export-settings",onClick:"ui.exportSettingsToJson()"},{label:Je.lang.importSettings,type:"button",name:"context_import-settings",id:"context_import-settings",onClick:"ui.importSettingsFromJson()"}]}]}get FS_DURATION_SEC(){return Qe.getSettingProperty("fsAlertDuration")??15}set FS_DURATION_SEC(e){e=!isFinite(e)||e<5?5:e>60?60:e,Qe.saveSettingProperty("fsAlertDuration",e)}get FS_NEW_CHEEVO(){return Qe.getSettingProperty("fsNewCheevo")??!0}set FS_NEW_CHEEVO(e){Qe.saveSettingProperty("fsNewCheevo",e)}get FS_NEW_AWARD(){return Qe.getSettingProperty("fsNewAward")??!0}set FS_NEW_AWARD(e){Qe.saveSettingProperty("fsNewAward",e)}set DISCORD_MIN_POINTS_ALERT(e){Qe._cfg.settings.minPointsDiscordAlert=e>0?e:0,Qe.writeConfiguration()}get DISCORD_MIN_POINTS_ALERT(){return+Qe._cfg.settings?.minPointsDiscordAlert??0}set DISCORD_HARD_ONLY_ALERT(e){Qe._cfg.settings.hardOnlyDiscordAlert=e,Qe.writeConfiguration()}get DISCORD_HARD_ONLY_ALERT(){return Qe._cfg.settings?.hardOnlyDiscordAlert??!1}set DISCORD_MIN_RETROPOINTS_ALERT(e){Qe._cfg.settings.minRetroPointsDiscordAlert=e>0?e:0,Qe.writeConfiguration()}get DISCORD_MIN_RETROPOINTS_ALERT(){return+Qe._cfg.settings?.minRetroPointsDiscordAlert??0}get LANG(){return Qe.ui?.local??"en"}set LANG(e){Qe.ui.local=e,Qe.writeConfiguration(),setTimeout((()=>location.reload()),1e3)}get PAUSE_ON_OFFLINE(){return!0}set PAUSE_ON_OFFLINE(e){Qe.ui.pauseOffline=e,Qe.writeConfiguration()}get IS_WINDOWS_STICKY(){return Qe.ui.isWindowsSticky??!0}set IS_WINDOWS_STICKY(e){Qe.ui.isWindowsSticky=e,Qe.writeConfiguration()}get DISCORD_WEBHOOK(){return Qe.DISCORD_WEBHOOK??""}set DISCORD_WEBHOOK(e){Qe.DISCORD_WEBHOOK=e,Qe.writeConfiguration()}get DISCORD_NEW_GAME(){return Qe._cfg?.discordNewGame??!0}set DISCORD_NEW_GAME(e){Qe._cfg.discordNewGame=e,Qe.writeConfiguration()}get DISCORD_NEW_CHEEVO(){return Qe._cfg?.discordNewCheevo??!0}set DISCORD_NEW_CHEEVO(e){Qe._cfg.discordNewCheevo=e,Qe.writeConfiguration()}get DISCORD_NEW_AWARD(){return Qe._cfg?.discordNewAward??!0}set DISCORD_NEW_AWARD(e){Qe._cfg.discordNewAward=e,Qe.writeConfiguration()}get DISCORD_START_SESSION(){return Qe._cfg?.discordStartSession??!0}set DISCORD_START_SESSION(e){Qe._cfg.discordStartSession=e,Qe.writeConfiguration()}get VISIBLE(){return!this.section.classList.contains("hidden")}get contextMenuItems(){return[{label:Je.lang.selectColors,elements:Object.keys(i).map((e=>({type:"radio",name:"context_color-scheme",id:`context_color- scheme - ${e}`,label:e,checked:Je.settings.COLOR_SCHEME===e,event:`onchange ="ui.settings.COLOR_SCHEME = '${e}'"`})))},{label:Je.lang.showBgAnimation,type:"checkbox",name:"context_show-bg-animation",id:"context_show-bg-animation",checked:Je.settings.BG_ANIMATION,event:'onchange="ui.settings.BG_ANIMATION = this.checked;"'},{label:Je.lang.startOnLoad,type:"checkbox",name:"context_show-start-on-load",id:"context_show-start-on-load",checked:Je.settings.START_ON_LOAD,event:'onchange="ui.settings.START_ON_LOAD = this.checked;"'}]}get FONT_SIZE(){return Qe?._cfg.settings?.fontSize??14}set FONT_SIZE(e){Qe._cfg.settings.fontSize=e,Qe.writeConfiguration(),document.documentElement.style.setProperty("font-size",`${this.FONT_SIZE}px`)}get FONT_FAMILY(){return this.fonts[Qe._cfg?.fontSelectorName??"default"]}get FONT_NAME(){let e=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim),t="default";return e.test(this.FONT_FAMILY)&&(t=this.FONT_FAMILY.match(e)[0].replaceAll("+"," ")),t}set FONT_FAMILY(e){let t=new RegExp(/https:\/\/[^'");]*/gim),s=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim);if(t.test(e)){let i=e.match(t)[0],n=e.match(s)[0].replaceAll("+"," ");const a=document.createElement("link");a.rel="stylesheet",a.href=i,document.head.appendChild(a),document.documentElement.style.setProperty("--font-family",`"${n}", system-ui, sans-serif`)}"def"==e&&document.documentElement.style.setProperty("--font-family"," system-ui, sans-serif")}loadCustomFont(e){const t=this.parseFontUrl(e);t&&(Qe._cfg.settings.customFontFamily=t.fontFamily,this.fontColorInput.value=t.fontName,this.FONT_FAMILY=t.fontFamily,this.fontSelector.value="custom",Qe._cfg.fontSelectorName="custom",Qe.writeConfiguration()),"def"==e&&(Qe._cfg.settings.fontFamily="",Qe.writeConfiguration(),document.documentElement.style.setProperty("--font-family"," system-ui, sans-serif"))}parseFontUrl(e){let t=new RegExp(/https:\/\/[^'");]*/gim),s=new RegExp(/(?<=family=)([A-Za-z0-9+);])*/gim);if(t.test(e)){return{fontFamily:e.match(t)[0],fontName:e.match(s)[0].replaceAll("+"," ")}}}get COLOR_SCHEME(){return Qe._cfg.settings.preset||"default"}set COLOR_SCHEME(e){Qe._cfg.settings.preset=e,Qe.writeConfiguration(),ze.updateColors(e)}get BG_ANIMATION(){return Qe._cfg.settings.bgVisibility??!0}set BG_ANIMATION(e){Qe._cfg.settings.bgVisibility=e,Qe.writeConfiguration(),document.querySelector("#background-animation").style.display=Qe.bgVisibility?"block":"none"}get START_ON_LOAD(){return Qe._cfg.settings.startOnLoad??!1}set START_ON_LOAD(e){Qe._cfg.settings.startOnLoad=e,Qe.writeConfiguration()}fonts={default:"def",pixelifySans:"https://fonts.googleapis.com/css2?family=Pixelify+Sans",jaro:"https://fonts.googleapis.com/css2?family=Jaro",oxygen:"https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700",jacquard:"https://fonts.googleapis.com/css2?family=Jacquard+24",shadows:"https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap",custom:Qe._cfg?.settings?.customFontFamily??"def"};constructor(){super(),this.setValues()}setValues(){this.FONT_SIZE=this.FONT_SIZE,this.FONT_FAMILY=this.fonts[Qe._cfg?.fontSelectorName??"default"]}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{this.section.querySelectorAll(".extended").forEach((e=>e.classList.remove("extended")))}))}generateWidget(e){const t=this.generateWidgetElement({classes:["prefs_section","section"],id:"settings_section",title:"Settings",contentClasses:["settings_container","content-container"]});Je.app.appendChild(t),this.section=t,this.section.querySelector(".resizer")?.remove(),(e=>{const t=this.section.querySelector(".content-container");t.innerHTML="";const s=e=>{switch(e.type){case"button":return Se(e);case"checkbox":return ue(e);case"radio":return me(e);case"select":return ve(e);case"number":case"input-number":return _e(e);case"text-input":return pe(e);case"search":return Ee(e);case"color":return`\n                            <input \n                                type="color" \n                                class="color-input" \n                                onchange="${e.onChange}" \n                                value="${e.value}" \n                                id="${e.id}" \n                                data-title="${e.label}" \n                            />`;default:return"default"}};e.forEach((e=>{if(e.elements){const i=document.createElement("li");i.classList.add("settings_setting-line"),i.innerHTML=`\n                    <h3 class="settings_setting-header">\n                        ${e?.label}\n                    </h3>`,e.elements.forEach((e=>{i.innerHTML+=s(e)})),t.appendChild(i)}else t.innerHTML+=s(e)}))})(e)}openSettings(e=this.settingsItems){this.close(),this.generateWidget(e),this.addEvents(),Qe.ui.settings_section&&(Qe.ui.settings_section.x&&(this.section.style.left=Qe.ui.settings_section.x),Qe.ui.settings_section.y&&(this.section.style.top=Qe.ui.settings_section.y)),Je.buttons.settings.checked=!0}close(){Je.buttons.settings.checked=!1,this.section&&this.section.remove()}getLastGameID(){apiWorker.getProfileInfo({}).then((e=>{document.getElementById("settings_game-id-input").value=e.LastGameID,Qe.gameID=e.LastGameID,watcher.updateGameData()}))}selectFont(e){const t=e;this.FONT_FAMILY=this.fonts[t],Qe._cfg.fontSelectorName=t,Qe.writeConfiguration()}}class Re extends q{widgetIcon={description:"notes widget",iconID:"side-panel__note",onChangeEvent:"ui.note.VISIBLE = this.checked",iconClass:"note-icon"};AUTOSAVE_INTERVAL_MILISECS=2e3;get notesTabs(){return[{type:"radio",name:"note__tabs",id:"notes__main-tab",label:Je.lang.mainNote,checked:"main"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'main'"},{type:"radio",name:"note__tabs",id:"notes__game-tab",label:Je.lang.gameNote,checked:"game"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'game'"}]}get NOTES_VALUE(){return Qe._cfg.ui?.note_section?.notes??""}set NOTES_VALUE(e){Qe._cfg.ui.note_section.notes=e,Qe.writeConfiguration()}get GAME_NOTES_VALUE(){return Qe._cfg.ui.note_section.game_notes||(Qe._cfg.ui.note_section.game_notes={}),Qe._cfg.ui?.note_section?.game_notes[Qe.gameID]??""}set GAME_NOTES_VALUE(e){Qe._cfg.ui.note_section.game_notes[Qe.gameID]=e,Qe.writeConfiguration()}get CURRENT_TAB(){return Qe._cfg.ui?.note_section?.currentTab??"main"}set CURRENT_TAB(e){Qe._cfg.ui.note_section.currentTab=e,Qe.writeConfiguration(),this.switchActiveTab()}constructor(){super(),this.addWidgetIcon(),Qe._cfg.ui.note_section||(Qe._cfg.ui.note_section={}),this.initializeElements(),this.generateTabs(),this.addEvents(),this.setValues(),ze.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#note_section"),this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#note-resizer"),this.textarea=this.section.querySelector(".note-textaria")}generateTabs(){const e=this.notesTabs.reduce(((e,t)=>e+=`\n          <div class="checkbox-input_container" onmousedown="event.stopPropagation()">\n            <input  onchange="${t.onChange}" type="radio" id="${t.id}" ${t.checked?"checked":""} name="${t.name}">\n            <label class="radio-tab" for="${t.id}">${t.label}</label>\n          </div>\n        `),"");document.querySelector(".note__tabs-container").innerHTML=e}addEvents(){this.delayedSave={},this.textarea.addEventListener("input",this.textInputHandler),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section})})),this.header.addEventListener("mousedown",(e=>{e.target.matches(".close-icon")?this.close():V(this.section,e)}))}textInputHandler(e){const t="main"==Je.note.CURRENT_TAB?"main":Qe.gameID,s=Je.note.textarea.value;clearTimeout(Je.note.delayedSave[t]),Je.note.delayedSave[t]=setTimeout((()=>{Je.note.saveNoteValue({id:t,value:s})}),Je.note.AUTOSAVE_INTERVAL_MILISECS)}saveNoteValue({id:e,value:t}){if("main"===e)this.NOTES_VALUE=t;else Qe._cfg.ui.note_section.game_notes[e]=t,Qe.writeConfiguration()}setValues(){this.switchActiveTab()}switchActiveTab(){switch(this.CURRENT_TAB){case"main":this.textarea.value=this.NOTES_VALUE;break;case"game":this.textarea.value=this.GAME_NOTES_VALUE}}updateGame(){"game"===this.CURRENT_TAB&&(this.textarea.value=this.GAME_NOTES_VALUE)}async copyNoteText(){const e=this.textarea.value.substring(this.textarea.selectionStart,this.textarea.selectionEnd),t=e||this.textarea.value;try{await navigator.clipboard.writeText(t),this.textInputHandler()}catch(e){console.error(e)}}async pasteTextToNote(){try{const e=await navigator.clipboard.readText();this.textarea.value+=e,this.textInputHandler()}catch(e){console.error(e)}}clearTextNote(){this.textarea.value="",this.textInputHandler()}}class De extends q{widgetIcon={description:"awards widget",iconID:"side-panel__awards",onChangeEvent:"ui.awards.VISIBLE = this.checked",iconClass:"awards-icon"};awardTypes={mastery:"mastery",completion:"completion",beatenSoftcore:"beatenSoftcore",beatenHardcore:"beatenHardcore"};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),ze.applyPosition({widget:this})}generateWidget(){const e={classes:["awards_section","section"],id:"awards_section",title:"Awards",headerElementsHtml:'\n            <div class="get-awards_button header-button header-icon update-icon" title="force reload"></div>\n        ',contentClasses:["awards-content_container","content-container"]},t=this.generateWidgetElement(e);Je.app.appendChild(t)}initializeElements(){this.section=document.querySelector(".awards_section"),this.container=this.section.querySelector(".awards-content_container")}addEvents(){super.addEvents(),this.section.querySelector(".update-icon")?.addEventListener("click",(()=>this.updateAwards()))}async updateAwards(){const e=await et.getUserAwards({});this.parseAwards(e)}parseAwards(e){if(!e?.TotalAwardsCount)return;this.container.innerHTML="";const{dataset:t}=this.container;t.total=e.TotalAwardsCount,t.beatenSoftcore=e.BeatenSoftcoreAwardsCount,t.beatenHard=e.BeatenHardcoreAwardsCount,t.completion=e.CompletionAwardsCount,t.mastery=e.MasteryAwardsCount;let s=[...e.VisibleUserAwards];s=this.fixGamesProperties(s);const i=this.generateAwardsGroupsArray(s);this.generateConsolesAwards(i)}fixGamesProperties(e){return e.map((e=>(e.awardedDate=new Date(e.AwardedAt),e.awardeTypeFixed="Game Beaten"===e.AwardType?1===e.AwardDataExtra?this.awardTypes.beatenHardcore:this.awardTypes.beatenSoftcore:1===e.AwardDataExtra?this.awardTypes.mastery:this.awardTypes.completion,e))).sort(((e,t)=>t.awardedDate-e.awardedDate))}generateAwardsGroupsArray(e){return e.reduce(((e,t)=>(e.hasOwnProperty(t.ConsoleName)||(e[t.ConsoleName]=[]),e[t.ConsoleName].push(t),e.Total.push(t),e)),{Total:[]})}generateConsolesAwards(e){Object.getOwnPropertyNames(e).forEach((t=>{let s=document.createElement("li");s.classList.add("console-awards"),"Total"!==t&&s.classList.add("collapsed"),s.dataset.consoleName=t;let i=e[t].length;const n=({awardType:e,gamesArray:t})=>t.filter((t=>t.awardeTypeFixed===e)).length;let a=n({awardType:this.awardTypes.beatenSoftcore,gamesArray:e[t]}),o=n({awardType:this.awardTypes.beatenHardcore,gamesArray:e[t]}),r=n({awardType:this.awardTypes.completion,gamesArray:e[t]}),c=n({awardType:this.awardTypes.mastery,gamesArray:e[t]});s.innerHTML=`\n          <h3 class="awards-console_header" onclick="ui.awards.expandAwards(this)">${t}</h3>\n          <ul class="console-awards-values">      \n            <li class="awarded-games total" title="total awards" onclick="ui.awards.filterAwards('all')">${i}</li>\n            <li class="awarded-games beaten-softcore" title="beaten softcore" onclick="ui.awards.filterAwards('${this.awardTypes.beatenSoftcore}')">${a}</li>\n            <li class="awarded-games beaten"  title="beaten"  onclick="ui.awards.filterAwards('${this.awardTypes.beatenHardcore}')">${o}</li>\n            <li class="awarded-games completed"  title="completed" onclick="ui.awards.filterAwards('${this.awardTypes.completion}')">${r}</li>\n            <li class="awarded-games mastered"  title="mastered" onclick="ui.awards.filterAwards('${this.awardTypes.mastery}')">${c}</li>\n          </ul>\n          <button class="expand-awards_button" onclick="ui.awards.expandAwards(this)"> </button>\n          <ul class="flex-main-list awarded-games_list ${"Total"==t?"":"hidden"} total">\n          </ul>\n          `,this.container.appendChild(s);let l=s.querySelector(".flex-main-list");e[t].forEach((e=>{l.appendChild(this.generateAwardElement(e))}))}))}generateAwardElement(e){let t=document.createElement("li");return t.classList.add("awarded-game","awards__game-item","main-column-item","right-bg-icon",e.awardeTypeFixed),t.dataset.title=`Award type: ${e.awardeTypeFixed}`,t.innerHTML=`\n            <img class="awards__game-preview" src="https://media.retroachievements.org${e.ImageIcon}" alt=" ">\n            <h3 class="game-title">${e.Title}</h3>\n            <p class="awards__game-description">${e.ConsoleName}</p>\n            <p class="awards__game-description">${e.timeString}</p>\n        `,t}expandAwards(e){const t=e.parentNode,s=t.querySelector(".awarded-games_list");s.classList.contains("hidden")?(t.classList.remove("collapsed"),s.classList.remove("hidden")):(t.classList.add("collapsed"),s.classList.add("hidden"))}filterAwards(e){this.container.querySelectorAll(".awarded-game").forEach((t=>{t.classList.remove("hidden"),t.classList.contains(e)||"all"===e||t.classList.add("hidden")}))}}class Le extends q{widgetIcon={description:"game info widget",iconID:"side-panel__gamecard",onChangeEvent:"ui.gameCard.VISIBLE = this.checked",iconClass:"game-info-icon"};get SHOW_BADGES(){return Qe.ui?.game_section?.showBadges??!0}set SHOW_BADGES(e){Qe.ui.game_section.showBadges=e,Qe.writeConfiguration(),this.updateGameCardInfo()}get SHOW_COMPLETION(){return Qe.getUIProperty({sectionID:this.section.id,property:"showCompletion"})??!0}set SHOW_COMPLETION(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showCompletion",value:e}),this.updateGameCardInfo()}get SHOW_DEVELOPER(){return Qe.getUIProperty({sectionID:this.section.id,property:"showDeveloper"})??!0}set SHOW_DEVELOPER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showDeveloper",value:e}),this.updateGameCardInfo()}get SHOW_GENRE(){return Qe.getUIProperty({sectionID:this.section.id,property:"showGenre"})??!0}set SHOW_GENRE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showGenre",value:e}),this.updateGameCardInfo()}get SHOW_PLAYERS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showPlayers"})??!0}set SHOW_PLAYERS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPlayers",value:e}),this.updateGameCardInfo()}get SHOW_POINTS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showPoints"})??!0}set SHOW_POINTS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPoints",value:e}),this.updateGameCardInfo()}get SHOW_PUBLISHER(){return Qe.getUIProperty({sectionID:this.section.id,property:"showPublisher"})??!0}set SHOW_PUBLISHER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPublisher",value:e}),this.updateGameCardInfo()}get SHOW_RELEASED(){return Qe.getUIProperty({sectionID:this.section.id,property:"showReleased"})??!0}set SHOW_RELEASED(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showReleased",value:e}),this.updateGameCardInfo()}get SHOW_CHEEVOS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showAchievements"})??!0}set SHOW_CHEEVOS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showAchievements",value:e}),this.updateGameCardInfo()}get SHOW_PLATFORM(){return Qe.getUIProperty({sectionID:this.section.id,property:"showPlatform"})??!0}set SHOW_PLATFORM(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showPlatform",value:e}),this.updateGameCardInfo()}get contextMenuItems(){return[{label:Je.lang.showTitleBadges,type:"checkbox",name:"game-card_show-badges",id:"game-card_show-badges",event:"onchange=\"ui.gameCard.SHOW_BADGES = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_BADGES},{label:Je.lang.platform,type:"checkbox",name:"context_show-platform",id:"context_show-platform",event:"onchange=\"ui.gameCard.SHOW_PLATFORM = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_PLATFORM},{label:Je.lang.developer,type:"checkbox",name:"context_show-developer",id:"context_show-developer",event:"onchange=\"ui.gameCard.SHOW_DEVELOPER = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_DEVELOPER},{label:Je.lang.publisher,type:"checkbox",name:"context_show-publisher",id:"context_show-publisher",event:"onchange=\"ui.gameCard.SHOW_PUBLISHER = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_PUBLISHER},{label:Je.lang.genre,type:"checkbox",name:"context_show-genre",id:"context_show-genre",event:"onchange=\"ui.gameCard.SHOW_GENRE = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_GENRE},{label:Je.lang.released,type:"checkbox",name:"context_show-released",id:"context_show-released",event:"onchange=\"ui.gameCard.SHOW_RELEASED = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_RELEASED},{label:Je.lang.points,type:"checkbox",name:"context_show-points",id:"context_show-points",event:"onchange=\"ui.gameCard.SHOW_POINTS = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_POINTS},{label:Je.lang.players,type:"checkbox",name:"context_show-players",id:"context_show-players",event:"onchange=\"ui.gameCard.SHOW_PLAYERS = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_PLAYERS},{label:Je.lang.completion,type:"checkbox",name:"context_show-completion",id:"context_show-completion",event:"onchange=\"ui.gameCard.SHOW_COMPLETION = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_COMPLETION},{label:Je.lang.cheevos,type:"checkbox",name:"context_show-achievements",id:"context_show-achievements",event:"onchange=\"ui.gameCard.SHOW_CHEEVOS = this.parentNode.querySelector('input').checked\"",checked:this.SHOW_CHEEVOS}]}gameInfoElements=()=>({Platform:{title:Je.lang.platform,id:"game-card-platform",visible:this.SHOW_PLATFORM,value:()=>tt.GAME_DATA?.ConsoleName??""},Developer:{title:Je.lang.developer,id:"game-card-developer",visible:this.SHOW_DEVELOPER,value:()=>tt.GAME_DATA?.Developer??""},Publisher:{title:Je.lang.publisher,id:"game-card-publisher",visible:this.SHOW_PUBLISHER,value:()=>tt.GAME_DATA?.Publisher??""},Genre:{title:Je.lang.genre,id:"game-card-genre",visible:this.SHOW_GENRE,value:()=>tt.GAME_DATA?.Genre??""},Released:{title:Je.lang.released,id:"game-card-released",visible:this.SHOW_RELEASED,value:()=>{const{Released:e}=tt?.GAME_DATA??!1;return e?c(e):""}},Completion:{title:Je.lang.completion,id:"game-card-completion",value:"",visible:this.SHOW_COMPLETION,value:()=>{const e=tt.GAME_DATA?.earnedStats?.hard.count,t=tt.GAME_DATA?.NumAchievements;return t?`${e} / ${t} cheevos`:"n/a"}},Points:{title:Je.lang.points,id:"game-card-points-total",visible:this.SHOW_POINTS,value:()=>tt.GAME_DATA?.totalPoints??""},Players:{title:Je.lang.players,id:"#game-card-players-total",visible:this.SHOW_PLAYERS,value:()=>tt.GAME_DATA?.NumDistinctPlayers??""},Achievements:{title:Je.lang.cheevos,id:"game-card-achivs-count",visible:this.SHOW_CHEEVOS,value:()=>tt.GAME_DATA?.NumAchievements??""}});constructor(){super(),this.addWidgetIcon(),this.initializeElements(),this.generateInfo(),this.addEvents(),ze.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector(".game-card_section"),this.header=document.querySelector("#game-card-header"),this.descriptions=document.querySelector(".game-card-description"),this.preview=document.querySelector("#game-card-image"),this.iconsContainer=this.section.querySelector(".game-card__icons-container"),this.resizer=document.querySelector("#game-card-resizer")}addEvents(){this.section.addEventListener("mousedown",(e=>{if(e.target.matches(".close-icon"))this.close();else if(e.target.closest(".comments-button")){const e=tt.GAME_DATA?.ID;e&&de(e,1)}else e.target.matches(".game-props-button")?(e.stopPropagation(),ye().open(tt.GAME_DATA)):V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{e.preventDefault(),e.stopPropagation(),document.querySelector(".context-menu")?.remove(),this.contextMenu=O({menuItems:this.contextMenuItems,sectionCode:""}),this.section.appendChild(this.contextMenu),e.x+this.contextMenu.offsetWidth>window.innerWidth?this.contextMenu.style.left=e.x-this.contextMenu.offsetWidth+"px":this.contextMenu.style.left=e.x+"px",e.y+this.contextMenu.offsetHeight>window.innerHeight?this.contextMenu.style.top=e.y-this.contextMenu.offsetHeight+"px":this.contextMenu.style.top=e.y+"px",this.contextMenu.classList.remove("hidden")})),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section})}))}generateInfo(){this.descriptions.innerHTML="";const e=this.gameInfoElements(),t=Object.keys(e).map((t=>{const s=e[t];return`\n                <div class="game-card-info ${s.visible?"":"hidden"}">\n                    <h3 class="game-info-header">${s.title}</h3>\n                    <p class="game-card-text" id="${s.id}">${s.value()}</p>\n                </div>\n            `})).join("\n");this.descriptions.innerHTML=t}async updateGameCardInfo(e=tt.GAME_DATA){const{FixedTitle:t,ID:s,ImageBoxArt:i,Genre:n,TotalRetropoints:a,NumAchievements:o,totalPoints:r,badges:c,retroRatio:l}=e;this.generateInfo(),(async()=>{this.section.dataset.award=tt.GAME_DATA?.award??"-",this.section.dataset.progressionAward=tt.GAME_DATA?.progressionAward??"-",this.header.innerHTML=`${t.replaceAll(/\,\s*the$/gi,"")}`,this.header.href=`https://retroachievements.org/game/${s}`,this.preview.src=`https://media.retroachievements.org${i}`,this.preview.alt=`${t} boxart`;const e=await Pe(s),a=e?.Genres,o=this.section.querySelector(".game-card__genres-container");o.innerHTML="",this.SHOW_BADGES&&(o.innerHTML=`\n                ${c?w(c):""} ${a?je(a):n?w(n.split(",")):""}`)})(),(()=>{this.iconsContainer.innerHTML=`\n            ${C.black(A(o))}\n            ${C.black(T(r))}\n            ${C.black(f(a))}\n            ${C.black(I(l))}\n            `})()}}const Pe=async e=>{if(!Je.gamesExtInfo){const e=await fetch("./json/games/all_ext.json");Je.gamesExtInfo=await e.json()}return e?Je.gamesExtInfo.find((t=>t.ID==e)):void 0};class He extends q{widgetIcon={description:"progression widget",iconID:"side-panel__progression",onChangeEvent:"ui.progression.VISIBLE = this.checked",iconClass:"progression"};get contextMenuItems(){return[{label:Je.lang.elements,elements:[{type:"checkbox",name:"context_show-header",id:"context_show-header",label:Je.lang.showHeader,checked:this.SHOW_HEADER,event:'onchange="ui.progression.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context_show-bg",id:"context_show-bg",label:Je.lang.showBackground,checked:this.SHOW_BG,event:'onchange="ui.progression.SHOW_BG = this.checked;"'}]},{label:Je.lang.style,elements:[{type:"checkbox",name:"context_progression-description",id:"context_show-all-descr",label:Je.lang.showAllDesc,checked:this.SHOW_DESCRIPTIONS,event:'onchange="ui.progression.SHOW_DESCRIPTIONS = this.checked;"'},{type:"checkbox",name:"context_show-sublevels",id:"context_show-sublevels",label:Je.lang.showSublevels,checked:this.SHOW_SUBLEVELS,event:'onchange="ui.progression.SHOW_SUBLEVELS = this.checked;"'}]}]}get SHOW_BG(){return Qe.getUIProperty({sectionID:this.section.id,property:"showBG"})??!0}set SHOW_BG(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showBG",value:e}),this.setElementsVisibility()}get SHOW_HEADER(){return Qe.getUIProperty({sectionID:this.section.id,property:"showHeader"})??!0}set SHOW_HEADER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showHeader",value:e}),this.setElementsVisibility()}get IS_HARD_MODE(){return Qe.getUIProperty({sectionID:this.section.id,property:"hardMode"})??!0}set IS_HARD_MODE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"hardMode",value:e})}get SHOW_SUBLEVELS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showSublevels"})??!0}set SHOW_SUBLEVELS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showSublevels",value:e}),this.setElementsVisibility()}get SHOW_DESCRIPTIONS(){return Qe.getUIProperty({sectionID:this.section.id,property:"showAllDescriptions"})??!1}set SHOW_DESCRIPTIONS(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showAllDescriptions",value:e}),this.setElementsVisibility()}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.setElementsVisibility(),this.addEvents(),ze.applyPosition({widget:this}),this.generateProgression()}initializeElements(){this.section=document.querySelector("#progression_section"),this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#progression-resizer")}setElementsVisibility(){this.section.classList.toggle("compact",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",!this.SHOW_BG),this.section.classList.toggle("show-all-descriptions",this.SHOW_DESCRIPTIONS),this.section.classList.toggle("show-sublevels",this.SHOW_SUBLEVELS)}addEvents(){super.addEvents(),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:""})}))}IS_HARD_MODE=!0;update({earnedAchievementIDs:e}){e[0]&&(this.IS_HARD_MODE=tt.CHEEVOS[e[0]].isHardcoreEarned),this.generateProgression()}generateWidget(){const e=this.generateWidgetElement({classes:["progression_section","section"],id:"progression_section",title:"Progression",contentClasses:["progression__list","content-container"]});Je.app.appendChild(e)}generateProgression(){const e=this.section.querySelector(".progression__list");const t=Object.values(tt.CHEEVOS)?.filter((e=>"progression"==e.type||"win_condition"==e.type)).sort(((e,t)=>0===e.DisplayOrder?e.ID-t.ID:e.DisplayOrder-t.DisplayOrder)),s=t.find((e=>this.IS_HARD_MODE?!e.isHardcoreEarned:!e.isEarned))?.ID;e.innerHTML=t?.reduce(((e,i)=>(e+=function(e,t){const i=e.level,n=t?.find((e=>e.level>i))?.level??i+1,a=null!=i?Object.values(tt.CHEEVOS).filter((e=>e.level&&!["progression","win_condition"].includes(e.type)&&e.level>=i&&e.level<n)):[],o=`\n                <li class="progression__item ${s===e.ID?"focus":""} ${e.type}-cheevo">\n                    <p class="cheevo-date">${function(e){if(!e)return"";const[t,s]=e.split(", ");let[i,n,a]=t.split(".");return a=a.slice(2),`${i}.${n}.${a} ${s}`}(e.DateEarnedHardcore||e.DateEarned)}</p>\n                    <div class="mark ${e.isEarned?"earned":""} ${e.isHardcoreEarned?"hardcore":""}"></div>\n                    <div class="cheevo-container">\n                        <h3 class="cheevo-title" data-achiv-id="${e.ID}">${e.Title}</h3>\n                        <p class="cheevo-description">\n                            ${e.Description}</p>\n                        <div class="subcheevos-container">\n                            ${a?.reduce(((e,t)=>e+`<h3 class="progression__subcheevo ${t.isEarned?"earned":""} ${t.isHardcoreEarned?"hardcore":""}" data-achiv-id="${t.ID}">${t.Title}</h3>`),"")}\n                        </div>\n                    </div>\n                </li>\n            `;return o}(i,t),e)),"")??"",function(){const e=Je.progression?.listContainer?.querySelector(".focus")||Je.progression?.listContainer?.querySelector(".win_condition-cheevo");e?.scrollIntoView({behavior:"auto",block:"center"})}()}}class Ne extends q{widgetIcon={description:"user statistics widget",iconID:"side-panel__stats",onChangeEvent:"ui.stats.VISIBLE = this.checked",iconClass:"stats-icon"};get contextMenuItems(){return[{label:Je.lang.showStats,elements:[{type:"checkbox",name:"context_show-points",id:"context_show-points",label:Je.lang.points,checked:this.SHOW_HP,event:'onchange="ui.stats.SHOW_HP = this.checked;"'},{type:"checkbox",name:"context_show-retropoints",id:"context_show-retropoints",label:Je.lang.retropoints,checked:this.SHOW_RP,event:'onchange="ui.stats.SHOW_RP = this.checked;"'},{type:"checkbox",name:"context_show-softpoints",id:"context_show-softpoints",label:Je.lang.softpoints,checked:this.SHOW_SP,event:'onchange="ui.stats.SHOW_SP = this.checked;"'},{type:"checkbox",name:"context_show-rank",id:"context_show-rank",label:Je.lang.rank,checked:this.SHOW_RANK,event:'onchange="ui.stats.SHOW_RANK = this.checked;"'},{type:"checkbox",name:"context_show-percentile",id:"context_show-percentile",label:Je.lang.percentile,checked:this.SHOW_PERCENTILE,event:'onchange="ui.stats.SHOW_PERCENTILE = this.checked;"'},{type:"checkbox",name:"context_show-true-ratio",id:"context_show-true-ratio",label:Je.lang.trueRatio,checked:this.SHOW_TR,event:'onchange="ui.stats.SHOW_TR = this.checked;"'},{type:"checkbox",name:"context_show-completion-chart",id:"context_show-completion-chart",label:Je.lang.completionChart,checked:this.SHOW_COMPLETION_CHART,event:'onchange="ui.stats.SHOW_COMPLETION_CHART = this.checked;"'}]},{label:Je.lang.style,elements:[{type:"checkbox",name:"context_show-header",id:"context_show-header",label:Je.lang.showHeader,checked:this.SHOW_HEADER,event:'onchange="ui.stats.SHOW_HEADER = this.checked;"'},{type:"checkbox",name:"context_show-bg",id:"context_show-bg",label:Je.lang.showBackground,checked:this.SHOW_BG,event:'onchange="ui.stats.SHOW_BG = this.checked;"'}]},{type:"checkbox",name:"context_show-session-progress",id:"context_show-session-progress",label:Je.lang.showSessionProgress,checked:this.SHOW_SESSION_PROGRESS,event:'onchange="ui.stats.SHOW_SESSION_PROGRESS = this.checked;"'}]}get SHOW_BG(){return Qe.ui?.stats_section?.showBG??!0}set SHOW_BG(e){this.saveProppertySetting("showBG",e),this.setElementsVisibility()}get SHOW_HEADER(){return Qe.ui?.stats_section?.showHeader??!0}set SHOW_HEADER(e){this.saveProppertySetting("showHeader",e),this.setElementsVisibility()}get SHOW_HP(){return Qe.ui?.stats_section?.showHP??!0}set SHOW_HP(e){this.saveProppertySetting("showHP",e),this.setElementsVisibility()}get SHOW_RP(){return Qe.ui?.stats_section?.showRP??!0}set SHOW_RP(e){this.saveProppertySetting("showRP",e),this.setElementsVisibility()}get SHOW_SP(){return Qe.ui?.stats_section?.showSP??!0}set SHOW_SP(e){this.saveProppertySetting("showSP",e),this.setElementsVisibility()}get SHOW_RANK(){return Qe.ui?.stats_section?.showRank??!0}set SHOW_RANK(e){this.saveProppertySetting("showRank",e),this.setElementsVisibility()}get SHOW_PERCENTILE(){return Qe.ui?.stats_section?.showPercentile??!0}set SHOW_PERCENTILE(e){this.saveProppertySetting("showPercentile",e),this.setElementsVisibility()}get SHOW_TR(){return Qe.ui?.stats_section?.showTrueRatio??!0}set SHOW_TR(e){this.saveProppertySetting("showTrueRatio",e),this.setElementsVisibility()}get SHOW_SESSION_PROGRESS(){return Qe.ui?.stats_section?.showSessionProgress??!0}set SHOW_SESSION_PROGRESS(e){this.saveProppertySetting("showSessionProgress",e),this.setElementsVisibility()}get SHOW_COMPLETION_CHART(){return Qe.ui?.stats_section?.completionChart??!1}set SHOW_COMPLETION_CHART(e){this.saveProppertySetting("completionChart",e),this.setElementsVisibility(),this.updateChart()}saveProppertySetting(e,t){Qe.ui.stats_section||(Qe.ui.stats_section={}),Qe.ui.stats_section[e]=t,Qe.writeConfiguration()}initialUserSummary;userSummary;constructor(){super(),this.addWidgetIcon(),this.initializeElements(),this.setElementsVisibility(),this.addEvents(),ze.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#stats_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".stats-container"),this.generateStatsElements(),this.rankRateElement=this.section.querySelector("#stats_rank-rate"),this.rankElement=this.section.querySelector("#stats_rank"),this.pointsElement=this.section.querySelector("#stats_points"),this.retropointsElement=this.section.querySelector("#stats_retropoints"),this.softpointsElement=this.section.querySelector("#stats_softpoints"),this.trueRatioElement=this.section.querySelector("#stats_true-ratio"),this.completionElement=this.section.querySelector(".stats__chart-container"),this.masteredCountElement=this.section.querySelector("#stats_mastered-count"),this.beatenCountElement=this.section.querySelector("#stats_beaten-count"),this.playedCountElement=this.section.querySelector("#stats_played-count"),this.resizer=this.section.querySelector(".resizer")}setElementsVisibility(){this.pointsElement.closest("li").classList.toggle("hidden",!this.SHOW_HP),this.retropointsElement.closest("li").classList.toggle("hidden",!this.SHOW_RP),this.softpointsElement.closest("li").classList.toggle("hidden",!this.SHOW_SP),this.rankElement.closest("li").classList.toggle("hidden",!this.SHOW_RANK),this.rankRateElement.closest("li").classList.toggle("hidden",!this.SHOW_PERCENTILE),this.trueRatioElement.closest("li").classList.toggle("hidden",!this.SHOW_TR),this.completionElement.classList.toggle("hidden",!this.SHOW_COMPLETION_CHART),this.section.classList.toggle("compact",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",!this.SHOW_BG),this.container.classList.toggle("show-session-progress",this.SHOW_SESSION_PROGRESS)}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".close-icon")?this.close():V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:""})})),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section})}))}initialSetStats({userSummary:e,completionProgress:t}){this.initialData={Rank:e.Rank,rankRate:+(100*e.Rank/e.TotalRanked).toFixed(2),TotalPoints:e.TotalPoints,TotalSoftcorePoints:e.TotalSoftcorePoints,TotalTruePoints:e.TotalTruePoints,trueRatio:+(e.TotalTruePoints/e.TotalPoints).toFixed(2)},e&&(this.userSummary=e,this.initialUserSummary=e,this.rankElement.innerText=e.Rank,this.rankRateElement.innerText=(100*e.Rank/e.TotalRanked).toFixed(2)+"%",this.pointsElement.innerText=e.TotalPoints,this.softpointsElement.innerText=e.TotalSoftcorePoints,this.retropointsElement.innerText=e.TotalTruePoints,this.trueRatioElement.innerText=(e.TotalTruePoints/e.TotalPoints).toFixed(2)),setTimeout((()=>this.updateChart()),1e3)}async updateStats({currentUserSummary:e}){e||(e=await et.getUserSummary({gamesCount:"0",achievesCount:0}));const t=(t,s)=>{let i=0,n=0,a=0,o=0;switch(s){case"rankRate":a=(100*e.Rank/e.TotalRanked).toFixed(2),o=(100*this.userSummary.Rank/this.userSummary.TotalRanked).toFixed(2),i=+(a-o).toFixed(2),n=+(a-this.initialData.rankRate).toFixed(2),a+="%";break;case"trueRatio":a=(e.TotalTruePoints/e.TotalPoints).toFixed(2),o=(this.userSummary.TotalTruePoints/this.userSummary.TotalPoints).toFixed(2),i=+(a-o).toFixed(2),n=+(a-this.initialData.trueRatio).toFixed(2);break;default:i=e[s]-this.userSummary[s],n=e[s]-this.initialData[s],a=e[s]}if(0===i)return;const r=i<0,c=n<0;t.classList.add("delta"),t.classList.toggle("negative",r),t.dataset.delta=`${r?"":"+"}${i}`;setTimeout((()=>{t.innerHTML=a+` <span class="session-progress ${c?"negative":""}">\n            ${c?"":"+"}${n}</span>`,t.classList.remove("delta")}),5e3)};t(this.rankRateElement,"rankRate"),t(this.rankElement,"Rank"),t(this.pointsElement,"TotalPoints"),t(this.softpointsElement,"TotalSoftcorePoints"),t(this.retropointsElement,"TotalTruePoints"),t(this.trueRatioElement,"trueRatio"),this.userSummary=e}async updateChart(){if(!this.SHOW_COMPLETION_CHART)return;const e=this.section.querySelector(".stats__chart-container"),t=await et.SAVED_COMPLETION_PROGRESS,s=t?.Results??[],i=s.length,n=s.filter((e=>"mastered"===e.HighestAwardKind)).length/i*100,a=s.filter((e=>"completed"===e.HighestAwardKind)).length/i*100,o=s.filter((e=>"beaten-hardcore"===e.HighestAwardKind)).length/i*100,r=s.filter((e=>"beaten-softcore"===e.HighestAwardKind)).length/i*100;e.style.setProperty("--m",n+"%"),e.style.setProperty("--c",a+"%"),e.style.setProperty("--b",o+"%"),e.style.setProperty("--b-s",r+"%"),this.section.querySelector(".legend__value-mastered").innerText=n.toFixed(2)+"%",this.section.querySelector(".legend__value-completed").innerText=a.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten").innerText=o.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten-soft").innerText=r.toFixed(2)+"%",this.section.querySelector(".legend__value-progress").innerText=(100-n-a-o-r).toFixed(2)+"%"}statusProperties={percentile:{label:Je.lang.percentile,id:"stats_rank-rate",class:"stats__rank-value"},rank:{label:Je.lang.rank,id:"stats_rank",class:"stats__rank-value"},points:{label:Je.lang.points,id:"stats_points"},retropoints:{label:Je.lang.retropoints,id:"stats_retropoints"},trueRatio:{label:Je.lang.trueRatio,id:"stats_true-ratio"},softpoints:{label:Je.lang.softpoints,id:"stats_softpoints"}};generateStatsElements(){const e=Object.values(this.statusProperties).reduce(((e,t)=>e+=`\n          <li class="stats__stat-container">\n              <h2 class="stats__title">${t.label}</h2>\n              <p id="${t.id}" class="stats__value ${t.class}"></p>\n          </li>\n          `),""),t=`\n      <li class="stats__stat-container stats__chart-container">\n      <h2 class="stats__title">${Je.lang.completionChart}</h2>\n      <div class="round-stat__container ">\n        <div class="circle">\n          <div class="round-stat__total" id="sector"></div>\n        </div>\n          <div class="round-stat__legend">\n              <div class="legend__award legend__mastered">mastered: <span class="legend__value-mastered">0%</span></div>\n              <div class="legend__award legend__completed">completed: <span class="legend__value-completed">0%</div>\n              <div class="legend__award legend__beaten">beaten: <span class="legend__value-beaten">0%</div>\n              <div class="legend__award legend__beaten-soft">beaten soft: <span class="legend__value-beaten-soft">0%</div>\n              <div class="legend__award legend__started">in progress: <span class="legend__value-progress">0%</div>\n          </div>\n      </div>\n      </li>\n      `;this.container.innerHTML=e+t}}class ke extends q{widgetIcon={description:"notifications widget",iconID:"side-panel__notifications",onChangeEvent:"ui.notifications.VISIBLE = this.checked",iconClass:"notification-icon"};get contextMenuItems(){return[{label:"Show header",type:"checkbox",name:"context_hide-notification-header",id:"context_hide-notification-header",checked:this.SHOW_HEADER,event:'onchange="ui.notifications.SHOW_HEADER = this.checked;"'},{label:"Hide background",type:"checkbox",name:"context_hide-notification-bg",id:"context_hide-notification-bg",checked:this.HIDE_BG,event:'onchange="ui.notifications.HIDE_BG = this.checked;"'},{label:"Show timestamp",type:"checkbox",name:"context_show-notification-time",id:"context_show-notification-time",checked:this.SHOW_TIMESTAMP,event:'onchange="ui.notifications.SHOW_TIMESTAMP = this.checked;"'}]}types={newGame:"newGame",earnedAchivs:"earnedAchivs"};get SHOW_TIMESTAMP(){return Qe?.ui.notification_section?.showTimestamp??!0}set SHOW_TIMESTAMP(e){Qe.ui.notification_section||(Qe.ui.notification_section={}),this.section.querySelectorAll(".notification_timestamp").forEach((e=>e.classList.toggle("hidden",this.SHOW_TIMESTAMP))),Qe.ui.notification_section.showTimestamp=e,Qe.writeConfiguration(),this.section.classList.toggle("compact",!this.SHOW_HEADER)}get SHOW_HEADER(){return Qe?.ui.notification_section?.showHeader??!0}set SHOW_HEADER(e){Qe.ui.notification_section||(Qe.ui.notification_section={}),Qe.ui.notification_section.showHeader=e,Qe.writeConfiguration(),this.section.classList.toggle("compact",!this.SHOW_HEADER)}get HIDE_BG(){return Qe?.ui.notification_section?.hideBg??!1}set HIDE_BG(e){Qe.ui.notification_section||(Qe.ui.notification_section={}),Qe.ui.notification_section.hideBg=e,Qe.writeConfiguration(),this.section.classList.toggle("hide-bg",this.HIDE_BG)}get NOTIFICATIONS(){return this._notifications??{time:"",notifications:[]}}constructor(){super(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.HIDE_BG=this.HIDE_BG,this.SHOW_HEADER=this.SHOW_HEADER,this.updateInterval=setInterval((()=>{this.container.querySelectorAll(".notification_timestamp").forEach((e=>{e.innerText=this.getDeltaTime(e.dataset.time)}))}),6e4),ze.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#notification_section"),this.container=this.section.querySelector(".notification-container"),this.resizer=this.section.querySelector(".resizer")}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".close-icon")?this.close():V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:""})})),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section})}))}parseUserSummary(e){e.lastGames.map((e=>(e.DateEarnedHardcore=e.LastPlayed,e.type=this.types.newGame,e))),e.lastAchivs.map((e=>(e.DateEarnedHardcore=e.DateAwarded,e.type=this.types.earnedAchivs,e.BadgeURL=`Badge/${e.BadgeName}.png`,e))),[...e.lastAchivs,...e.lastGames].sort(((e,t)=>-1*Q.latest(e,t))).forEach((e=>this.pushNotification({type:e.type,elements:e,time:e.DateEarnedHardcore})))}pushNotification({type:e,elements:t,time:s}){e===this.types.earnedAchivs&&(t=t?.map((e=>tt.CHEEVOS[e])));const i=this.generatePopupTime(s);let n=[];switch(e){case this.types.newGame:n.push(this.generateNewgameElement(t));break;case this.types.earnedAchivs:n=this.generateNewachivsElements([...t]);break;default:return void console.log("notification type doesn't exist")}const a=this.generateTimeBlock(i,n);n.length>0&&this.container.prepend(a);const o=a.getBoundingClientRect().height;this.container.style.setProperty("--offset-height",`${o}px`),a.classList.add("notification_popup")}generateTimeBlock(e,t){const s=document.createElement("ul");return s.classList.add("notification_timeblock-list"),s.appendChild(e),t.forEach((e=>{s.appendChild(e)})),s}generatePopupTime(e){const t=document.createElement("li"),s=(e?(e=>{const[t,s]=e.split(", "),[i,n,a]=t.split(".").map(Number),[o,r]=s.split(":").map(Number);return new Date(a,n-1,i,o,r)})(e):new Date).getTime();return t.dataset.time=s,t.classList.add("notification_timestamp"),!this.SHOW_TIMESTAMP&&t.classList.add("hidden"),t.innerHTML=`\n       ${this.getDeltaTime(s)}\n      `,t}generateNewgameElement(e){const t=document.createElement("li");return t.classList.add("notification-game","new-game"),t.innerHTML=`\n        <div class="prev">\n          <img class="prev-img" src="https://media.retroachievements.org${e.ImageIcon}" alt=" ">\n        </div>\n        <div class="notification_details">\n          <h3 class="achiv-name">\n            <a target="_blanc" href="https://retroachievements.org/game/${e.ID??e.GameID}">\n              ${e.Title}\n            </a>\n          </h3>\n          <p class="achiv-description">${e.Genre?e.Genre+",\n":""}${e.ConsoleName}</p>\n          <div class="notification_description-icons">\n            <p class="notification_description-text" title="points">\n              <i class="notification_description-icon  points-icon"></i>\n              ${e.totalPoints??""}\n            </p>\n            <p class="notification_description-text" title="retropoints">\n              <i class="notification_description-icon  achievements-icon"></i>\n              ${e.NumAchievements??e.AchievementsTotal}\n            </p>\n            <p class="notification_description-text" title="earned by">\n              <i class="notification_description-icon  players-icon"></i>\n              ${e.NumDistinctPlayersHardcore??""}\n            </p>\n          </div>\n        </div>\n      `,t}generateNewachivsElements(e){let t=[];return e.forEach((e=>{const{AchievementID:s,prevSrc:i,Description:n,Title:a,Points:o,TrueRatio:r,ID:c,rateEarnedHardcore:l}=e,d=document.createElement("li");d.classList.add("notification-achiv","new-achiv"),d.innerHTML=`\n                <div class="prev">\n                    <img class="prev-img" src="${i}" alt=" ">\n                </div>\n                <div class="notification_details">\n                    <h3 class="achiv-name"><a target="_blanc" href="https://retroachievements.org/achievement/${s??c}">${a}</a></h3>\n                    <p class="achiv-description">${n}</p>\n                    <div class="notification_description-icons">\n                        <p class="notification_description-text" title="points">\n                        <i class="notification_description-icon  points-icon"></i>\n                        ${o}\n                        </p>\n                        \n                        <p class="notification_description-text" title="retropoints">\n                        <i class="notification_description-icon  retropoints-icon"></i>\n                        ${r??""}\n                        </p>\n                        <p class="notification_description-text" title="earned by">\n                        <i class="notification_description-icon  trending-icon"></i>\n                        ${l||""}\n                        </p>\n                    </div>\n                </div>\n            `,t.push(d)})),t}getDeltaTime(e){let t=+e,s=~~(((new Date).getTime()-t)/1e3);return s<120?"moment ago":s<600?"few minutes ago":s<3600?~~(s/60)+" minutes ago":s<43200?new Date(t).toLocaleTimeString().replace(/:[^:]*$/gi,""):new Date(t).toLocaleString().replace(/:[^:]*$/gi,"")}}class xe extends q{widgetIcon={description:"games widget",iconID:"side-panel__games",onChangeEvent:"ui.games.VISIBLE = this.checked",iconClass:"games-icon"};get platformFilterItems(){return Object.keys(Me).reduce(((e,t)=>{const s={label:t,type:"group"},i=Object.keys(Me[t]).reduce(((e,s)=>{const i={label:s,type:"checkbox",name:"filter-by-platform",checked:this.PLATFORMS_FILTER.includes(Me[t][s]),onChange:`ui.games.platformCheckboxChangeEvent(this,${Me[t][s]})`,id:`filter-by-platform-${Me[t][s]}`};return e.push(i),e}),[]);return e=[...e,s,...i]}),[])}get awardsFilterItems(){return Object.keys(this.awardTypes).reduce(((e,t)=>{const s={label:this.awardTypes[t],name:"filter-by-award",checked:this.AWARD_FILTER.includes(t),onChange:`ui.games.awardCheckboxChangeEvent(this,'${t}')`,id:`filter-by-platform-${t}`};return e.push(s),e}),[])}get genresFilterItems(){return Object.keys(a).reduce(((e,t)=>{const s={label:a[t],name:"filter-by-genre",checked:this.GENRE_FILTER.includes(t),onChange:`ui.games.genreCheckboxChangeEvent(this,'${t}')`,id:`filter-by-genre-${t}`};return e.push(s),e}),[])}set FAVOURITES(e){this._favs=e,Qe.ui.favouritesGames=e,Qe.writeConfiguration()}get FAVOURITES(){return this._favs??[]}set COOP_FILTER(e){Qe.ui.games_section.coopOnly=e,Qe.writeConfiguration(),this.updateGamesList()}get COOP_FILTER(){return Qe.ui.games_section?.coopOnly??!1}awardCheckboxChangeEvent(e,t){let s=this.AWARD_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.AWARD_FILTER=s}platformCheckboxChangeEvent(e,t){let s=this.PLATFORMS_FILTER;e.checked?s.push(t+""):s=s.filter((e=>e!=t)),this.PLATFORMS_FILTER=s}genreCheckboxChangeEvent(e,t){let s=this.GENRE_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.GENRE_FILTER=s}set PLATFORMS_FILTER(e){let t=e.filter((e=>Object.keys($).includes(e)));Qe.ui.games_section.platformsFilter=t,Qe.writeConfiguration(),this.updateGamesList()}get PLATFORMS_FILTER(){return Qe.ui?.games_section?.platformsFilter??["7"]}set GENRE_FILTER(e){let t=e.filter((e=>Object.keys(a).includes(e)));Qe.ui.games_section.genreFilter=t,Qe.writeConfiguration(),this.updateGamesList()}get GENRE_FILTER(){return Qe.ui?.games_section?.genreFilter??[]}set AWARD_FILTER(e){Qe.ui.games_section.awardFilter=e,Qe.writeConfiguration(),this.updateGamesList()}get AWARD_FILTER(){return Qe.ui?.games_section?.awardFilter??[]}set FAVOURITES_FILTER(e){Qe.ui.games_section.favouritesFilter=e,Qe.writeConfiguration(),this.updateGamesList()}get FAVOURITES_FILTER(){return Qe.ui?.games_section?.favouritesFilter??!1}get TYPES_FILTER(){return Qe.ui?.games_section?.typesFilter??["original"]}set TYPES_FILTER(e){const t=e.dataset.type??"",s=this.TYPES_FILTER;if(e.checked)s.push(t);else{const e=s.indexOf(t);-1!==e&&s.splice(e,1)}Qe.ui.games_section.typesFilter=s,Qe.writeConfiguration(),this.applyFilter()}set REVERSE_SORT(e){Qe._cfg.ui.games_section.reverse_sort=e?-1:1,Qe.writeConfiguration(),this.updateGamesList()}get REVERSE_SORT(){return Qe._cfg.ui?.games_section?.reverse_sort??-1}get SORT_METHOD(){return Q[this.SORT_NAME]}get SORT_NAME(){return Qe._cfg.ui?.games_section?.sort_name??ae}set SORT_NAME(e){e==this.SORT_NAME&&(Qe._cfg.ui.games_section.reverse_sort=-1*this.REVERSE_SORT),Qe._cfg.ui.games_section.sort_name=e,Qe.writeConfiguration(),this.updateGamesList()}titleFilter="";applyFilter(){const e=this.titleFilter.split(/\s/).map((e=>`(?=.*${e})`)).join(""),t=new RegExp(e,"gi");this.games=this.titleFilter?this.GAMES.filter((e=>`${e.FixedTitle} ${e.badges?.join(" ")} ${$[e.ConsoleID]}`.match(t))):this.GAMES,this.COOP_FILTER&&(this.games=this.games?.filter((e=>"true"==e.Coop))),this.PLATFORMS_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.PLATFORMS_FILTER)s==e.ConsoleID&&(t=!0);return t}))),this.GENRE_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.GENRE_FILTER)e?.Genres?.includes(+s)&&(t=!0);return t}))),this.FAVOURITES_FILTER&&(this.games=this.games.filter((e=>this.FAVOURITES.includes(e.ID)))),this.AWARD_FILTER.length>0&&(this.games=this.games.filter((e=>{let t=!1;for(let s of this.AWARD_FILTER)s==e.Award&&(t=!0);return t})))}applySort(){this.games=this.games.sort(((e,t)=>this.REVERSE_SORT*this.SORT_METHOD(e,t)))}platformCodes={};awardTypes={mastered:"mastered","beaten-hardcore":"beaten",completed:"completed","beaten-softcore":"beaten softcore",started:"started"};games={};gamesInfo={};constructor(){super(),this.addWidgetIcon(),this._favs=Qe.ui.favouritesGames??[],this.initializeElements(),this.setValues(),this.addEvents(),this.gamesList.innerHTML='\n      <button class="games__load-button" onclick="ui.games.loadGames()"></button>\n      ',ze.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#games_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".games_container"),this.searchbar=this.section.querySelector("#games__searchbar"),this.platformFiltersList=this.section.querySelector("#games_filter-platform-list"),this.gamesList=this.section.querySelector("#games-list"),this.resizer=this.section.querySelector(".resizer")}setValues(){this.section.querySelector("#games__favourites-filter").checked=this.FAVOURITES_FILTER,this.section.querySelector("#games__coop-filter").checked=this.COOP_FILTER}addEvents(){this.searchbar.addEventListener("input",(e=>{const t=this.searchbar.value;this.titleFilter=t,this.searchbar.classList.toggle("empty",""==t),this.updateGamesList()})),this.resizer.addEventListener("mousedown",(e=>{e.stopPropagation(),this.section.classList.add("resized"),B({event:e,section:this.section})})),this.header.addEventListener("mousedown",(e=>{e.target.matches(".close-icon")?this.close():V(this.section,e)}))}async loadWantToPlay(){const e=await et.getWantToPlayGames({});this._favs=Array.from(new Set([...this._favs,...e]))}updateGamesList(){this.applyFilter(),this.applySort(),this.gamesList.innerHTML=this.gamesListHeaderHtml(),function({list:e,items:t,callback:s}){const i=document.createElement("div");i.classList.add("lazy-load_trigger"),e.appendChild(i);let n=0;const a=20,o=i=>{for(let a=0;a<i&&n<t.length;a++)e.appendChild(s(t[n++]))};o(a);const r=(s,r)=>{s.forEach((s=>{s.isIntersecting&&(o(a),r.unobserve(i),e.appendChild(i),n<t.length&&r.observe(i))}))};new IntersectionObserver(r,{root:null,rootMargin:"0px",threshold:1}).observe(i)}({list:this.gamesList,items:this.games,callback:this.GameElement})}loadGames(){this.loadWantToPlay().then(this.getAllGames().then((()=>{this.updateGamesList()}))),this.loadGameInfo()}async loadGameInfo(){const e=await fetch("./json/games/all_info.json");this.gamesInfo=await e.json()}async getAllGames(){this.GAMES={};try{const e=await fetch("./json/games/all_ext.json"),t=await e.json(),s=await et.SAVED_COMPLETION_PROGRESS;for(let e of s.Results){let s=t.find((t=>e.ID===t.ID));s?(e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",e.MostRecentAwardedDate&&(s.MostRecentAwardedDate=e.MostRecentAwardedDate)):(s=e,s.ImageIcon=s.ImageIcon.match(/\d+/gi)[0],e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",s.Points="",t.push(s))}this.GAMES=t}catch(e){return[]}}GameElement(e){const t=document.createElement("li");var s;return t.classList.add("platform_game-item"),t.dataset.id=e.ID,t.innerHTML=`\n        <h3 class="game-description_title">\n          <button data-title="show game information" class="game-description_button"\n                onclick="ui.games.showGameInfoPopup(${e.ID})">\n                ${e.FixedTitle} \n                ${e.badges?.length?w(e.badges):""} \n                ${s=e.Coop,"true"===s?C.default("coop"):""} \n                ${e.Genres?je(e.Genres,"gameGenre"):""}\n          </button>\n        </h3>      \n        <p data-title="${e.Award||""}" class="game-description  award-type">\n          ${_(e.Award)}\n        </p>\n        <button class="favourites-button favourite_icon description-icon game-description icon-button games__icon-button ${Je.games.FAVOURITES.includes(e.ID)?"checked":""}" onclick="ui.games.addToFavourite(event,${e.ID})">\n        </button>\n        <p data-title="Rating" class="game-description  game-rating">\n          ${e.Rating||"n/a"}\n        </p>\n              <p data-title="Date" class="game-description  game-date">\n          ${e.Date||"n/a"}\n        </p>\n        <p data-title="platform" class="game-description  achievements-count">\n          ${$[e.ConsoleID].match(/[^\/]*/gi)[0]}\n        </p>\n        <p data-title="achievements count" class="game-description  achievements-count">\n            ${e.NumAwardedHardcore?e.NumAwardedHardcore+"/":""}${e.NumAchievements}\n        </p>\n        <p data-title="points count" class="game-description  points-count">\n            ${e.Points}\n        </p>\n  \n        <p class="game-description game-description__links">\n          <button data-title="load game" class=" game-description_link" onclick="watcher.updateGameData(${e.ID})"> \n                ${E}\n          </button>\n            <a data-title="google search" target="_blanc" \n              href="https://google.com/search?q='${e?.FixedTitle}' '${$[e?.ConsoleID]}' ${$e}"\n              class="game-description game-description_link">\n              ${v}\n            </a> \n            <a data-title="go to RA" target="_blanc" href="https://retroachievements.org/game/${e.ID}"\n                class="game-description game-description_link">\n                ${S}\n            </a>\n        </p>   \n        `,t}gamesListHeaderHtml=()=>`\n      <div class="platform_game-item header">\n        \x3c!--<div class="game-preview_container">\n        </div>--\x3e\n        <h3 class="header__game-description game-description_title ${"title"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'title'">Title\n        </h3>\n        <p data-title="award type" class="header__game-description ${"award"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}" onclick="ui.games.SORT_NAME = 'award'">\n          <i class="description-icon award_icon"></i>\n        </p>\n        <div class="header__game-description"><i class="description-icon favourite_icon checked"></i></div>\n        <p data-title="Rating" class="game-description header__game-description  game-rating ${"rating"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'rating'">\n            Rating\n        </p>\n        <p data-title="Date" class="game-description header__game-description  game-date ${"date"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n          onclick="ui.games.SORT_NAME = 'date'">\n            Date\n        </p>\n        <p data-title="achievements count" class=" game-description  achievements-count"\n          >\n            Platform\n        </p>\n        <p data-title="achievements count" class="header__game-description game-description  achievements-count ${"achievementsCount"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n            onclick="ui.games.SORT_NAME ='achievementsCount'">\n              Cheevos\n          </p>\n        <p data-title="points count" class="header__game-description game-description  points-count ${"points"==this.SORT_NAME?-1==this.REVERSE_SORT?"active reverse":"active":""}"\n            onclick="ui.games.SORT_NAME = 'points'">\n              Points\n          </p>\n  \n          <p data-title="" class="game-description">Links</p>\n        </div>\n    `;addToFavourite(e,t){const s=this.FAVOURITES.includes(t);this.FAVOURITES=s?this.FAVOURITES.filter((e=>e!=t)):[t,...this.FAVOURITES],e.target.closest("button").classList.toggle("checked",!s)}toggleFilterList(e,t){const s=()=>{this.section.querySelector(".games__filters-list")?.remove(),this.section.querySelectorAll(".games__filter-header .extended").forEach((e=>e.classList.remove("extended")))},i=e.target.closest("button");if(i.classList.contains("extended"))s();else{let e;switch(s(),i.classList.add("extended"),t){case"platform":e=this.generateFiltersList(this.platformFilterItems);break;case"award":e=this.generateFiltersList(this.awardsFilterItems);break;case"genre":e=this.generateFiltersList(this.genresFilterItems)}this.section.append(e),this.section.querySelector(".games__filter-container").appendChild(e)}}generateFiltersList(e){const t=Object.values(e).reduce(((e,t)=>{if("group"==t.type){const s=document.createElement("li");s.classList.add("filter-list__platform-header"),s.innerText=t.label+": ",e.appendChild(s)}else{const s=document.createElement("li");s.classList.add("checkbox-input_container"),s.innerHTML=ue(t),e.appendChild(s)}return e}),document.createElement("ul"));return t.classList.add("games__filters-list"),t}async showGameInfoPopup(e=1){document.querySelectorAll(".game-popup__section").forEach((e=>e.remove()));const t=document.createElement("section"),s=await et.getGameProgress({gameID:e});t.innerHTML=`\n            <section class="section game-popup__section">\n                <div class="game-popup__header-container header-container">\n                    <h2 class="widget-header-text"><a href="https://retroachievements.org/game/${s.ID}" target="_blank">${s.FixedTitle} ${w(s.badges)}</a></h2>\n                    <button class="header-button header-icon close-icon" onclick="this.closest('section').remove();">\n                        \n                    </button>\n                </div>\n                <div class="game-info__container">\n                    <div class="game-info__images-container">\n                        <img src="https://media.retroachievements.org${s.ImageBoxArt}" alt="" class="game__image">\n                        <img src="https://media.retroachievements.org${s.ImageIngame}" alt="" class="game__image">\n                        <img src="https://media.retroachievements.org${s.ImageTitle}" alt="" class="game__image">\n        \n                    </div>\n                    <div class="game-info__descriptions-container">\n                        <div class="game-description__property">Platform: <span>${s?.ConsoleName}</span></div>\n                        <div class="game-description__property">Developer: <span>${s?.Developer} Soft</span></div>\n                        <div class="game-description__property">Genre: <span>${s?.Genre}</span></div>\n                        <div class="game-description__property">Publisher: <span>${s?.Publisher} Soft</span></div>\n                        <div class="game-description__property">Released: <span>${s?.Released}</span></div>\n                        <div class="game-description__property">Achievements total : <span>${s?.NumAwardedToUserHardcore} / ${s?.NumAwardedToUser} / ${s?.NumAchievements}</span>\n                        </div>\n                        <div class="game-description__property">Total retropoints : <span>\n                        ${s?.earnedStats.hard.retropoints} / ${s?.TotalRetropoints}</span></div>\n                        <div class="game-description__property">Total points : <span>\n                            ${s?.earnedStats.hard.points} / ${s?.earnedStats.soft.points} / ${s?.totalPoints}</span></div>\n                        <div class="game-description__property">Total players : <span>${s?.masteredCount} / ${s?.beatenCount} / ${s?.players_total}</span></div>\n                        <div class="game-description__property">Completion : <span>${s?.masteryRate}% / ${s?.beatenRate}%</span></div>\n                        <div class="game-description__property">RetroRatio : <span>${s?.retroRatio}</span></div>\n                        \n                    </div>\n                    <div class="game-info__cheevos-container">\n        \n                    </div>\n                </div>\n            </section>\n        `,Je.app.appendChild(t)}toggleFullscreen(){this.section.classList.toggle("fullscreen")}}const Me={SEGA:{"SG-1000":"33","Master System":"11","Genesis/Mega Drive":"1","Game Gear":"15","Sega CD":"9","32X":"10",Saturn:"39",Dreamcast:"40"},Nintendo:{"NES/Famicom":"7","Game Boy":"4","SNES/Super Famicom":"3","Game Boy Color":"6","Nintendo 64":"2","Game Cube":"16","Game Boy Advance":"5","Virtual Boy":"28","Nintendo DS":"18","Nintendo DSi":"78","Pokemon Mini":"24"},NEC:{"PC Engine/TurboGrafx-16":"8","PC Engine CD/TurboGrafx-CD":"76","PC-8000/8800":"47","PC-FX":"49"},SONY:{PlayStation:"12","PlayStation 2":"21","PlayStation Portable":"41"},SNK:{"Neo Geo Pocket":"14","Neo Geo CD":"56"},Atari:{"Atari 2600":"25","Atari 7800":"51","Atari Lynx":"13","Atari Jaguar":"17","Atari Jaguar CD":"77"},Other:{"Magnavox Odyssey 2":"23",Arcade:"27","Apple II":"38","Amstrad CPC":"37",MSX:"29","3DO Interactive Multiplayer":"43",ColecoVision:"44",Intellivision:"45",Vectrex:"46",WonderSwan:"53","Fairchild Channel F":"57","Watara Supervision":"63","Mega Duck":"69",Arduboy:"71","WASM-4":"72","Arcadia 2001":"73","Interton VC 4000":"74","Elektor TV Games Computer":"75",Uzebox:"80"},Special:{Events:"101",Standalone:"102"}},$e="site:www.romhacking.net OR site:wowroms.com/en/roms OR site:cdromance.org OR site:coolrom.com.au/roms OR site:planetemu.net OR site:emulatorgames.net OR site:romsfun.com/roms OR site:emu-land.net/en";class We{get VISIBLE(){return!this.section.classList.contains("hidden")}set VISIBLE(e){ze.switchSectionVisibility({section:this.section,visible:e}),this.widgetIcon&&(this.widgetIcon.checked=e)}aotwObj;autoremove;constructor(){this.generateAotwElement().then((()=>{this.initializeElements(),this.addEvents(),Je.target.showAotwEvent({cheevo:this.aotwObj})}))}initializeElements(){this.section=document.querySelector(".aotw_section")}addEvents(){this.section.addEventListener("mouseover",(()=>this.stopAutoRemove()))}setValues(){ze.switchSectionVisibility({section:this.section,visible:!0})}stopAutoRemove(){this.autoremove&&clearTimeout(this.autoremove)}doAnim(){this.section.classList.remove("show-aotw","hide-aotw","disposed"),setTimeout((()=>this.section.classList.add("show-aotw")),100),this.autoremove=setTimeout((()=>this.section.classList.add("hide-aotw")),1e4)}addGlowEffectToCard(e){var t=e.querySelector(".marker");let s;function i(s){var i=s.offsetX,n=s.offsetY,a=e.offsetHeight,o=e.offsetWidth,r=Math.abs(Math.floor(100/o*i)-100),c=Math.abs(Math.floor(100/a*n)-100);t.style.backgroundPosition=`${r}% ${c}%`}e.addEventListener("mouseenter",(e=>{s=t.getBoundingClientRect(),t.classList.remove("hidden"),t.addEventListener("mousemove",(e=>{i(e)}))})),e.addEventListener("mouseleave",(s=>{e.style.transform="",e.style.background="",t.classList.add("hidden"),e.removeEventListener("mousemove",(e=>i(e)))}))}checkCheevo({earnedAchievementIDs:e}){e?.forEach((e=>{e==this.aotwObj.ID&&(tt.CHEEVOS[e].isEarned&&(this.section.classList.add("earned"),this.aotwObj.isEarned=!0,this.doAnim()),tt.CHEEVOS[e].isHardcoreEarned&&(this.section.classList.add("earned","hardcore"),this.aotwObj.isEarnedHardcore=!0),Qe.aotw=this.aotwObj)}))}async getAotwObject(){if(!Qe.aotw){const e=await et.getAotW();Qe.aotw=e}return this.aotwObj=Qe.aotw,this.aotwObj}showGameInfo(){Je.games.showGameInfoPopup(this.aotwObj.GameID)}async generateAotwElement(){const e=await this.getAotwObject(),t=document.createElement("section");t.classList.add("section","aotw_section","disposed","compact"),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isEarnedHardcore),t.id="aotw_section",t.innerHTML=`\n        <div class="header-container">\n            <div class="header-icon q-icon icon">\n            </div>\n  \n            <h2 class="widget-header-text">\n            <a class="" target="_blanc"\n                        href="https://retroachievements.org/achievement/${e.ID}">\n            AotW</a></h2>\n            <button class="header-button info-icon header-icon" onclick="ui.aotw.showGameInfo()">\n            </button>\n            <div class="header-button close-icon header-icon" onclick="event.target.closest('.section')?.classList.add('hide-aotw')">\n            </div>\n        </div>\n        <div class="aotw-card" data-id="4800">\n            <div class="aotw-backside aotw-side"></div>\n            <div class="aotw__container aotw-side">\n                <div class="progression_descriptions aotw_descriptions">\n                    <p class="signed-icon" title="points">\n                      <i class="progression_description-icon description-icon points-icon"></i>\n                      ${e.Points}\n                    </p>\n                    <p class="signed-icon" title="points">\n                      <i class="progression_description-icon description-icon retropoints-icon"></i>\n                      ${e.TrueRatio}\n                    </p>\n                    <p class="signed-icon" title="earned by">\n                      <i class="progression_description-icon description-icon trending-icon"></i>\n                      ${(100*e.UnlocksHardcoreCount/e.TotalPlayers).toFixed(2)}%\n                    </p>\n                    <p class="signed-icon" title="earned by"> \n                      <i class="progression_description-icon description-icon rarity-icon"></i>\n                      ${(e.TrueRatio/e.Points).toFixed(2)}\n                    </p>\n                    ${e.Type?`\n                      <div class="progression_description-icon condition ${e.Type}" title="achievement type">\n                      </div>`:""}\n                </div>\n                <div class="progression-achiv_prev-container">\n                    <img class="progression-achiv_prev-img" src="https://media.retroachievements.org/${e.BadgeURL}"\n                        alt=" ">\n                </div>\n                <h3 class="progression_achiv-name">\n                    <a class="progression_achiv-link" target="_blanc"\n                        href="https://retroachievements.org/achievement/${e.ID}">${e.Title}</a>\n                </h3>\n                <div class="progression-details">\n                ${e.Description}\n                </div>\n  \n                <div class="marker hidden"></div>\n            </div>\n          \n        </div>\n      `,Je.app.appendChild(t)}}class Ge extends q{widgetIcon={description:"status widget (v2)",iconID:"side-panel__status-v2",onChangeEvent:"ui.status.VISIBLE = this.checked",badgeLabel:"v2",iconClass:"status-icon"};get contextMenuItems(){return[{label:Je.lang.elements,elements:[{type:"checkbox",name:"context-show-rp",id:"context-show-rp",label:Je.lang.richPresence,checked:this.SHOW_RP,event:'onchange="ui.status.SHOW_RP = this.checked"'},{type:"checkbox",name:"context-show-ticker",id:"context-show-ticker",label:Je.lang.ticker,checked:this.SHOW_TICKER,event:'onchange="ui.status.SHOW_TICKER = this.checked"'},{type:"checkbox",name:"context-show-progression",id:"context-show-progression",label:Je.lang.progression,checked:this.SHOW_PROGRESSION,event:'onchange="ui.status.SHOW_PROGRESSION = this.checked"'},{type:"checkbox",name:"context-show-progressbar",id:"context-show-progressbar",label:Je.lang.progressbar,checked:this.SHOW_PROGRESSBAR,event:'onchange="ui.status.SHOW_PROGRESSBAR = this.checked"'}]},{label:Je.lang.time,elements:[{type:"radio",name:"context_game-time",id:"context_show-playTime",label:Je.lang.gameTime,checked:"playTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'playTime';\""},{type:"radio",name:"context_game-time",id:"context_show-sessionTime",label:Je.lang.sessionGameTime,checked:"sessionTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'sessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-totalTime",label:Je.lang.totalTime,checked:"totalSessionTime"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'totalSessionTime';\""},{type:"radio",name:"context_game-time",id:"context_show-timer",label:Je.lang.timer,checked:"timer"==this.SHOW_TIME,event:"onclick=\"ui.status.SHOW_TIME = 'timer';\""},{prefix:Je.lang.timer,postfix:Je.lang.min,type:"input-number",id:"context-menu_stats-timer-duration",label:Je.lang.timer,value:~~(this.TIMER_TIME/60*100)/100,event:'onchange="ui.status.TIMER_TIME = this.value;"',onChange:"ui.status.TIMER_TIME = this.value;"}]}]}get SHOW_RP(){return Qe.getUIProperty({sectionID:this.section.id,property:"showRichPresence"})??!0}set SHOW_RP(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showRichPresence",value:e}),this.setElementsProperties()}get SHOW_CHEEVOS_LIST(){return Qe.getUIProperty({sectionID:this.section.id,property:"showcheevosList"})??!0}set SHOW_CHEEVOS_LIST(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showcheevosList",value:e}),this.setElementsProperties()}get SHOW_PROGRESSBAR(){return Qe.getUIProperty({sectionID:this.section.id,property:"showProgressbar"})??!0}set SHOW_PROGRESSBAR(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showProgressbar",value:e}),this.setElementsProperties()}get SHOW_TICKER(){return Qe.getUIProperty({sectionID:this.section.id,property:"showTicker"})??!0}set SHOW_TICKER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showTicker",value:e}),this.setElementsProperties()}get SHOW_PROGRESSION(){return Qe.getUIProperty({sectionID:this.section.id,property:"showProgression"})??!0}set SHOW_PROGRESSION(e){Qe.saveUIProperty({sectionID:this.section.id,property:"showProgression",value:e}),this.setElementsProperties()}get SHOW_TIME(){return Qe.getUIProperty({sectionID:this.section.id,property:"time"})??"playTime"}set SHOW_TIME(e){Qe.saveUIProperty({sectionID:this.section.id,property:"time",value:e}),this.gameElements.time.innerText=this.getActiveTime()}get TIMER_TIME(){return Qe.getUIProperty({sectionID:this.section.id,property:"timerTime"})??2}set TIMER_TIME(e){e<=0&&(e=1),e>1440&&(e=1440),e*=60,Qe.saveUIProperty({sectionID:this.section.id,property:"timerTime",value:e})}get LIST_TYPE(){return Qe.getUIProperty({sectionID:this.section.id,property:"listType"})??"list"}set LIST_TYPE(e){Qe.saveUIProperty({sectionID:this.section.id,property:"listType",value:e}),this.cheevosList.classList.toggle("grid-list","grid"==e)}set SORT_NAME(e){Qe.saveUIProperty({sectionID:this.section.id,property:"sortBy",value:e}),this.applySort(),console.log(this.SORT_NAME,this.SORT_METHOD,e)}get SORT_NAME(){return Qe.getUIProperty({sectionID:this.section.id,property:"sortBy"})??ne}get SORT_METHOD(){return Q[this.SORT_NAME]}get REVERSE_SORT(){return Qe.getUIProperty({sectionID:this.section.id,property:"reverseSort"})??1}set REVERSE_SORT(e){Qe.saveUIProperty({sectionID:this.section.id,property:"reverseSort",value:e?-1:1}),this.applySort()}get FILTER_NAME(){return Qe.getUIProperty({sectionID:this.section.id,property:"filterBy"})??j}set FILTER_NAME(e){Qe.saveUIProperty({sectionID:this.section.id,property:"filterBy",value:e}),this.applyFilter()}get FILTER_METHOD(){return z[this.FILTER_NAME]}get REVERSE_FILTER(){return Qe.getUIProperty({sectionID:this.section.id,property:"reverseFilter"})??!1}set REVERSE_FILTER(e){Qe.saveUIProperty({sectionID:this.section.id,property:"reverseFilter",value:e}),this.applyFilter()}get HIDE_FILTERED(){return Qe.getUIProperty({sectionID:this.section.id,property:"hideFiltered"})??!1}set HIDE_FILTERED(e){Qe.saveUIProperty({sectionID:this.section.id,property:"hideFiltered",value:e}),this.applyFilter()}ACHIV_DURATION=15e3;IS_HARD_MODE=!0;getActiveTime=()=>{let e=0;switch(this.SHOW_TIME){case"totalSessionTime":e=tt.playTime.sessionTime;break;case"playTime":e=tt.playTime.totalGameTime;break;case"sessionTime":e=tt.playTime.gameTime;break;case"timer":e=this.TIMER_TIME-tt.playTime.gameTime}return o(e,!0)};constructor(){super(),this.addWidgetIcon(),this.initializeElements(),ze.applyPosition({widget:this}),this.setElementsProperties(),this.addEvents()}initializeElements(){this.section=document.querySelector(".rp__section"),this.watchButton=this.section.querySelector("#rp__watch-button"),this.indicatorElement=this.section.querySelector(".rp__indicator"),this.gameElements={icon:this.section.querySelector(".rp__game-image"),title:this.section.querySelector(".rp__game-title"),platform:this.section.querySelector(".rp__game-platform"),gameIcons:this.section.querySelector(".rp__game-icons"),time:this.section.querySelector(".rp__game-time")},this.alertElements={container:this.section.querySelector(".rp__alert-container"),preview:this.section.querySelector(".rp__alert-preview"),title:this.section.querySelector(".rp__alert-title"),description:this.section.querySelector(".rp__alert-description"),badges:this.section.querySelector(".rp__alert-badges")},this.richPresenceElement=this.section.querySelector(".rp__rich-presence"),this.progressionElements={header:this.section.querySelector(".rp__progression-target"),pointsContainer:this.section.querySelector(".rp__progression-points")},this.progressbarElements={container:this.section.querySelector(".rp__progressbar-container"),title:this.section.querySelector(".rp__progressbar-title"),lastCheevos:this.section.querySelector(".rp__last-cheevos")},this.tickerElement=this.section.querySelector(".rp__ticker"),this.ticker=be({container:this.tickerElement,textGenerator:we}),this.cheevosList=this.section.querySelector(".rp__target-cheevos")}addEvents(){this.section.addEventListener("mousedown",(e=>{e.target.matches(".resizer")?(this.section.classList.add("resized"),B({event:e,section:this.section,callback:()=>this.fitCheevosSize(this.cheevosList)})):e.target.matches(".comments-button")?(e.stopPropagation(),de(tt.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),ye().open(tt.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):V(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{Je.showContextmenu({event:e,menuItems:this.contextMenuItems})})),this.watchButton.addEventListener("click",(e=>{e.stopPropagation(),tt.isActive?tt.stop():tt.start()}))}setElementsProperties(){this.cheevosList.classList.toggle("grid-list","grid"==this.LIST_TYPE),this.section.classList.toggle("show-ticker",this.SHOW_TICKER),this.section.classList.toggle("show-cheevos-list",this.SHOW_CHEEVOS_LIST),this.section.classList.toggle("show-progression",this.SHOW_PROGRESSION),this.section.classList.toggle("show-progressbar",this.SHOW_PROGRESSBAR),this.richPresenceElement.classList.toggle("hidden",!this.SHOW_RP),this.SHOW_TICKER&&tt.GAME_DATA&&this.ticker.startScrolling()}gameChangeEvent(e=!1){e&&tt.IS_WATCHING&&this.addAlertsToQuery([{type:D.game,value:tt.GAME_DATA}]),this.fillGameData(),this.SHOW_TICKER&&this.ticker.startScrolling()}fillGameData(){(()=>{const{ImageIcon:e,FixedTitle:t,badges:s,ConsoleName:i,ID:n}=tt.GAME_DATA;this.gameElements.icon.setAttribute("src",`https://media.retroachievements.org${e}`),this.gameElements.title.innerHTML=`\n            ${t||"Some game name"}\n            ${w(s)}\n            `,this.gameElements.title.setAttribute("href",`https://retroachievements.org/game/${n}`),setTimeout((()=>this.startAutoScrollElement(this.gameElements.title,!0,1e4)),1e4),this.gameElements.platform.innerHTML=i,this.richPresenceElement.innerText="Rich presence",this.gameElements.gameIcons.innerHTML=`\n                <p class="signed-icon" data-title="cheevos count"><i class="description-icon achievements-icon"></i>\n                    ${tt.GAME_DATA.NumAchievements}\n                </p>\n\n                <p class="signed-icon" data-title="total points"><i class="description-icon points-icon"></i>\n                     ${tt.GAME_DATA.totalPoints}\n                </p>\n\n                <p class="signed-icon" data-title="true ratio">\n                    <i class="description-icon rarity-icon"></i>\n                     ${tt.GAME_DATA.retroRatio}\n                </p>\n            `;const a=this.getActiveTime();this.gameElements.time.innerHTML=a})(),(()=>{const e=e=>this.IS_HARD_MODE?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",t=Object.values(tt.CHEEVOS).filter((e=>"progression"==e.type)).sort(((e,t)=>Q.default(e,t))),s=Object.values(tt.CHEEVOS).filter((e=>"win_condition"==e.type)),i=t.reduce(((t,s)=>t+=`\n                    <div class="rp__progression-point ${e(s)}" data-achiv-id=${s.ID}></div>\n                `),""),n=s?.length>0?`\n                <div class="rp__win-points">\n                    ${s.reduce(((t,s)=>t+=`\n                            <div class="rp__progression-point win ${e(s)}" data-achiv-id=${s.ID}></div>\n                        `),"")}\n                 </div>\n                `:"";this.progressionElements.pointsContainer.innerHTML=i+n;const a=Object.values(tt.CHEEVOS).filter((e=>z.progression(e))).sort(((e,t)=>Q.default(e,t))).find((t=>!e(t)));this.progressionElements.header.innerHTML=a?a.Description:tt.GAME_DATA?.progressionAward?"You have beaten the game":"Progression is not available";const o=this.progressionElements.pointsContainer.querySelector(`[data-achiv-id="${a?.ID}"`);o?.classList.add("focus")})(),(()=>{const e=this.IS_HARD_MODE?tt.GAME_DATA?.earnedStats?.hard?.count??0:tt.GAME_DATA?.earnedStats?.soft?.count??0,t=tt.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=e==t?`You have ${tt.GAME_DATA.award} the game`:`Earned ${e}/${t} cheevos`,this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(tt.CHEEVOS).filter((e=>z.earned(e))).sort(((e,t)=>Q.latest(e,t))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo cheevo-popup" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="https://media.retroachievements.org/Badge/${t.BadgeName}.png" alt=""></li>\n            `),"")})(),this.startAutoScrollElement(this.richPresenceElement,!0,1e4)}updateProgress({earnedAchievementIDs:e}){const t=()=>{const e=this.progressionElements.pointsContainer.querySelector(".rp__progression-point:not(.earned)")?.dataset?.achivId,t=tt.CHEEVOS[e];this.progressionElements.header.innerHTML=t?t.Description:tt.GAME_DATA?.progressionAward?"You have beaten the game":"Progression is not available"},s=()=>{const e=this.IS_HARD_MODE?tt.GAME_DATA?.earnedStats?.hard?.count??0:tt.GAME_DATA?.earnedStats?.soft?.count??0,t=tt.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=e==t?`You have ${tt.GAME_DATA.award} the game`:`Earned ${e}/${t} cheevos`,this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(tt.CHEEVOS).filter((e=>z.earned(e))).sort(((e,t)=>Q.latest(e,t))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo cheevo-popup" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="https://media.retroachievements.org/Badge/${t.BadgeName}.png" alt=""></li>\n            `),"")};e?.length>0&&(this.IS_HARD_MODE=!!tt.CHEEVOS[e[0]].isHardcoreEarned),e.forEach((e=>{const i=tt.CHEEVOS[e]?.isHardcoreEarned?"hardcore":"-";this.section.querySelectorAll(`[data-achiv-id="${e}"]`).forEach((e=>e.classList.add("earned",i))),t(),s()}))}alertsQuery=[];addAlertsToQuery(e){this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts())}async startAlerts(){const e=()=>{this.alertElements.container.classList.remove("hide-alert","show-alert","new-game","new-achiv","new-award","stats","beaten","mastered","hardcore","mastered","beaten-softcore","completed")},t=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:c,beatenRate:l}=e;this.alertElements.preview.src=`https://media.retroachievements.org${i}`,this.alertElements.title.innerHTML=`${t} ${w(s)}\n            <i class="badge">${a}</i>\n            `;let u=`\n                ${b(g+r)}\n                ${b(d+n)}\n                ${b(h+o)}\n                ${b(c+"% MASTERED RATE")}\n                ${b(l+"% BEATEN RATE")}\n            `;this.alertElements.description.innerText="",this.alertElements.badges.innerHTML=u,this.alertElements.container.classList.add("new-game")},s=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:c}=e;this.alertElements.preview.src=i,this.alertElements.title.innerHTML=`\n                ${s}`,this.alertElements.description.innerText=e.Description;let l=t?`\n                    ${b(d+" +"+n)}\n                    ${b(h+" +"+a)}\n                    ${b("TOP"+r)}\n                    ${C.difficultBadge(c)}\n                `:`\n                    ${b(d+" +"+n)}\n                    ${b("TOP"+o)}\n                    ${C.difficultBadge(c)}\n                `,g=e.genres?.map((e=>b(e)))?.join("\n")??"";this.alertElements.badges.innerHTML=g+l,this.alertElements.container.classList.toggle("hardcore",e.isHardcoreEarned),this.alertElements.container.classList.add("new-achiv")},i=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:c,beatenRate:l,completedRate:u,beatenSoftRate:m,ID:p,NumAchievements:_,TimePlayed:E}=e,v="mastered"==t?c:"beaten"==t?l:"completed"==t?u:m,S=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(E);this.alertElements.preview.src=`https://media.retroachievements.org${n}`,this.alertElements.title.innerHTML=`${s} ${w(i)}\n            ${b("GAINED AWARD")}`;let A=`\n                ${b(`${t} IN ${S}`)}\n                ${b(`TOP${v}%`)}\n                ${b(`${g}${o.hard.count}/${_}`)}\n                ${b(`${d}${o.hard.points}/${a}`)}\n                ${b(`${h}${o.hard.retropoints}/${r}`)}\n            `;this.alertElements.badges.innerHTML=A,this.alertElements.description.innerText="",this.alertElements.container.classList.add(t),this.alertElements.container.classList.add("new-award")},n=e=>{this.alertElements.preview.src=Qe.userImageSrc,this.alertElements.title.innerHTML=`\n                ${Qe.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${b(`Rank: ${e.rank} ${e.deltaRank}`)}\n                ${b(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`)}\n                ${b(`${g} +${e.cheevosCount}`)}\n                ${b(`${d}${e.points} ${e.deltaPoints}`)}\n                ${b(`${h}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${b(`${d}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.alertElements.badges.innerHTML=t,this.alertElements.description.innerText="",this.alertElements.container.classList.add("stats")},a=a=>{switch(e(),a.type){case D.game:t(a.value);break;case D.cheevo:s(a.value);break;case D.award:i(a.value,a.award);break;case D.stats:n(a.value)}};for(;this.alertsQuery.length>0;){const t=this.alertsQuery[0];if(!t.value)return void this.alertsQuery.shift();const s=()=>{a(t),this.alertElements.container.classList.add("show-alert"),setTimeout((()=>{this.startAutoScrollElement(this.alertElements.title),this.startAutoScrollElement(this.alertElements.badges),this.startAutoScrollElement(this.alertElements.description)}),2e3)},i=()=>{this.alertElements.container.classList.add("hide-alert"),setTimeout((()=>e()),500),this.alertsQuery.shift(),this.stopAutoScrollElement(this.alertElements.badges,!0),this.stopAutoScrollElement(this.alertElements.description,!0),this.stopAutoScrollElement(this.alertElements.title,!0)};await L(1e3),s(),await L(this.ACHIV_DURATION),i()}}applyFilter(){ze.applyFilter({container:this.cheevosList,itemClassName:".target-achiv",filterMethod:this.FILTER_METHOD,reverse:this.REVERSE_FILTER,isHide:this.HIDE_FILTERED}),this.fitCheevosSize(this.cheevosList)}applySort(){ze.applySort({container:this.cheevosList,itemClassName:".target-achiv",sortMethod:this.SORT_METHOD,reverse:this.REVERSE_SORT})}timeWatcher(){this.watchButton.classList.toggle("active",tt.isActive),this.section.classList.toggle("watching",tt.IS_ONLINE&&tt.isActive);return{start:()=>{this.timeWatcher().stop(),this.gameTimeInterval=setInterval((()=>{"timer"===this.SHOW_TIME&&tt.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime();e&&e!==this.gameElements.time.innerHTML&&(this.gameElements.time.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval)}}}BLINK_ON_UPDATE=!0;blinkUpdate(){this.indicatorElement.classList.remove("offline","blink"),this.section.classList.toggle("offline",!tt.IS_ONLINE),this.BLINK_ON_UPDATE&&tt.IS_ONLINE?(this.indicatorElement.classList.add("blink"),setTimeout((()=>this.indicatorElement.classList.remove("blink","offline")),1e3)):tt.IS_ONLINE||this.indicatorElement.classList.add("offline")}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.id||e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};const n=e;this.autoscrollAlertInterval[i].interval=setInterval((()=>{n.clientWidth==n.scrollWidth?(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(n.scrollLeft++,n.scrollLeft+n.clientWidth>=n.scrollWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),s))):(n.scrollLeft--,0==n.scrollLeft&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0);const s=e.id||e.className;clearInterval(this.autoscrollAlertInterval[s].interval),clearTimeout(this.autoscrollAlertInterval[s].timeout)}fitCheevosSize(e){let t,s;e.style.flex="1",t=e.clientHeight-2,s=e.clientWidth-10,e.style.flex="";const i=e.querySelectorAll(".target-achiv:not(.removed)").length;if(0===i)return;let n,a,o=Math.floor(Math.sqrt(s*t/i));do{o--,n=Math.floor(t/(o+2)),a=Math.floor(s/(o+2))}while(n*a<i&&o>36);o=o<36?36:o>128?128:o,e.style.setProperty("--achiv-height",o+"px")}}class Fe{}class Ue extends q{widgetIcon={description:"game series",iconID:"side-panel__game-list",onChangeEvent:"ui.gameList.VISIBLE = this.checked",iconClass:"playlist-icon"};set VISIBLE(e){super.VISIBLE=e,tt.GAME_DATA?.ID!==this.gameSetID&&this.generateGamesSet()}get VISIBLE(){return super.VISIBLE}constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.setElementsVisibility(),this.addEvents(),ze.applyPosition({widget:this})}initializeElements(){this.section=document.getElementById("game-list"),this.content=this.section.querySelector(".widget-content__container")}gameChangeEvent(){this.VISIBLE&&this.generateGamesSet()}setElementsVisibility(){}addEvents(){super.addEvents(),this.section.querySelector(".update-icon")?.addEventListener("click",(()=>this.generateGamesSet()))}generateWidget(){const e={classes:["game-list__section","section"],id:"game-list",title:"Game List",headerElementsHtml:'\n            <div class="header-button header-icon update-icon" title="force reload"></div>\n        '},t=this.generateWidgetElement(e);Je.app.appendChild(t)}generateWidgetContent(){this.content.innerHTML=""}async generateGamesSet(){const e=this.gameSetID=tt.GAME_DATA?.ID,t=await Ve(e),s=(await et.SAVED_COMPLETION_PROGRESS)?.Results,i=this.section.querySelector(".widget-header-text"),n=this.section.querySelector(".widget-content__container");t.value=(await Promise.all(t?.value?.map((async e=>{const t=await Be(e.ID);return e.Date=t?.Date,e.Award=s.find((t=>e.ID===t.GameID))?.HighestAwardKind??"",e}))))?.sort(((e,t)=>Q.date(e,t)));const a=t?.value.reduce(((t,s)=>t+=`\n                <li class="game-info__set-item main-column-item right-bg-icon award-type ${s.Award} ${e==s.ID?"focus":""}">\n                    <img class="awards__game-preview" src="https://media.retroachievements.org/Images/${s.ImageIcon}.png" alt=" ">\n                    <h3 class="game-title">\n                        <a target="_blank" data-title="go to RA game-page" href="https://retroachievements.org/game/${s.ID}">\n                    ${s.Title} ${w(s?.badges)}</a></h3>\n                    <p class="awards__game-description">${s.Console}</p>\n                    <p class="awards__game-description">${s.Date??"Date unavailable"}</p>\n                </li>\n            `),"");i.innerHTML=`${t.name} Series`,n.innerHTML=`<ul class="flex-main-list">${a}<ul>`,n.querySelector(".focus")?.scrollIntoView()}}const Ve=async(e=1)=>{if(!tt.gamesSets){const e=await fetch("./json/games/gamesSets.json");tt.gamesSets=await e.json()}const t=Object.keys(tt.gamesSets);for(let s=0;s<t.length;s++){const i=t[s];if(tt.gamesSets[i].find((t=>t.ID===e)))return{name:i,value:tt.gamesSets[i]}}},Be=async e=>{if(!Je.gamesExtInfo){const e=await fetch("./json/games/all_ext.json");Je.gamesExtInfo=await e.json()}return e?Je.gamesExtInfo.find((t=>t.ID==e)):void 0};class qe extends q{widgetIcon={description:"links widget",iconID:"side-panel__links",onChangeEvent:"ui.links.VISIBLE = this.checked",iconClass:"link-icon"};links=[{name:"RetroAchievements",url:"https://retroachievements.org"},{name:"RA API docs",url:"https://api-docs.retroachievements.org"},{name:"ROM Patcher",url:"https://www.marcrobledo.com/RomPatcher.js/"},{name:"WoWRoMs",url:"https://wowroms.com/en/"},{name:"Emu-Land",url:"https://www.emu-land.net/en/"},{name:"GitHub [Project]",url:"https://github.com/taras240/retro-api"},{name:"Discord [Project]",url:"https://discord.gg/apzc6kCAbH"}];constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.addEvents(),this.generateWidgetContent(),ze.applyPosition({widget:this})}generateWidget(){const e=this.generateWidgetElement({classes:["links_section","section"],id:"links_section",title:"Links",contentClasses:["links-container","content-container","flex-main-list"]});Je.app.appendChild(e)}initializeElements(){this.section=document.querySelector("#links_section")}addEvents(){super.addEvents()}generateWidgetContent(){const e=this.section.querySelector(".links-container"),t=this.links.map((({name:e,url:t,iconUrl:s})=>`<li class="links__link-item">\n                <a class="signed-icon links__link-container" href="${t}" target="_blank">\n                    ${s?`<img class="links__link-image" src="${s}" alt="${e}">`:" "}\n                    <span class="links__link-title">${e}</span>\n                </a>\n            </li> `)).join("");e.innerHTML=`<ul class="flex-main-list links-list">${t}</ul>`}}class ze{VERSION="0.736";CURRENT_LEVEL;AUTOCLOSE_CONTEXTMENU=!1;STICK_MARGIN=1;STICK_TOLERANCE=7;twitchClient=new Fe;gamePopup=()=>ye();constructor(){this.initUI()}async initUI(){await async function(){if("/test.html"===window.location.pathname)try{for(const e in n){const t=n[e],s=await fetch(t);if(!s.ok)throw new Error(`Failed to fetch section: ${t}`);const i=await s.text(),a=document.createElement("div");a.innerHTML=i,document.querySelector(".wrapper").appendChild(a)}}catch(e){console.error("Error loading sections:",e)}}();const e=Qe.ui?.local??"en",t=await fetch(`./json/lang/${e}.json`);this.lang=await t.json(),this.initializeElements(),this.addEvents(),ze.updateColors(),document.querySelector("#background-animation").style.display=Qe.bgVisibility?"block":"none",Qe.identConfirmed&&!this.isTest&&(Qe.startOnLoad?tt.start():tt.updateGameData(),setTimeout((()=>{et.getUserSummary({}).then((e=>{this.userInfo?.update({userSummary:e}),this.stats?.initialSetStats({userSummary:e}),this.statusPanel?.updateStatistics({userSummary:e})}))}),3e3)),setTimeout((()=>document.querySelector(".loading-section").classList.add("hidden")),500)}initializeElements(){this.app=document.querySelector(".wrapper"),this.statusPanel=new Ie,this.status=new Ge,this.achievementsBlock=[new ce],this.createAchievementsTemplate(),this.target=new fe,this.gameCard=new Le,this.stats=new Ne,this.gameList=new Ue,this.progression=new He,this.note=new Re,this.awards=new De,this.notifications=new ke,this.games=new xe,this.settings=new Oe,this.links=new qe,this.buttons=new Ce,this.aotw=new We}static applyPosition({widget:e}){if(!e)return;const t=e.section.id,s=()=>{e.section.classList.add("hidden","disposed")};if(Qe.ui[t]){const{x:i,y:n,width:a,height:o,hidden:r}=Qe.ui[t];i&&(e.section.style.left=i<0?0:i),n&&(e.section.style.top=n<0?0:n),a&&(e.section.style.width=a),o&&(e.section.style.height=o);(r??!0)&&s()}else!e.VISIBLE&&s();e.widgetIcon?.element&&(e.widgetIcon.element.checked=!1===Qe.ui?.[e.section?.id]?.hidden??!e.VISIBLE)}addEvents(){const e=e=>{e.stopPropagation();const t=e.target.closest("[data-title]")?.dataset.title,s=e.target.closest("[data-achiv-id]")?.dataset?.achivId,i=tt.CHEEVOS[s];!async function(){document.querySelectorAll(".popup").forEach((e=>e.remove()))}();const n=t?function(e){let t=document.createElement("div");return t.classList.add("popup","hint"),t.innerHTML=`\n      <p>${e}</p>\n      `,t}(t):i?function(e){const t=e.level?.toString()?.split(".")[1],s=e.zone?t?`${e.zone} [${t}]`:e.zone:e.level?.toString()?.replace(".","-");let i=document.createElement("div");return i.className="achiv-details-block popup",i.innerHTML=`\n        <h3 class="achievement__header">${e.Title}</h3>\n        <p>${e.Description}</p>\n        <div class="points">\n            ${T(e.Points)}\n            ${f(e.TrueRatio)}\n            ${I(e.retroRatio)}\n            ${p(e.type)}\n        </div>\n        <div class="icons-row-list">\n            ${s?C.gold("LVL: "+s):""}\n            ${e.genres.length>0?e.genres?.map((e=>C.gold(e.trim()))).join(""):""}\n            ${C.difficultBadge(e.difficulty)}\n        </div>\n        ${e.DateEarnedHardcore?`<p>Unlock date: ${e.DateEarnedHardcore}</p>`:""}\n        ${e.DateEarned&&e.DateEarnedHardcore!=e.DateEarned?`<p>Unlock(casual) date: ${e.DateEarned}</p>`:""}\n\n        <p>Unlocked by ${e.NumAwardedHardcore} (${e.NumAwarded}) of ${e.totalPlayers} players</p>\n        <p>Unlock rate: ${e.rateEarnedHardcore} (${e.rateEarned})</p>\n\n        <p>Created: ${c(e.DateCreated)} (${c(e.DateModified)})</p>\n        <p>Created by: ${e.Author}</p>\n    `,i}(i):void 0;n&&(this.app.appendChild(n),function(e,t){const s=t.x,i=t.y;e.style.left=s+50+"px",e.style.top=i+"px";let{left:n,right:a,top:o,bottom:r}=e.getBoundingClientRect();n<0&&e.classList.remove("left-side"),a>window.innerWidth&&e.classList.add("left-side"),o<0?e.classList.remove("top-side"):r>window.innerHeight&&e.classList.add("top-side")}(n,e),setTimeout((()=>n.classList.add("visible")),333));e.clientX<20&&(this.buttons.section.classList.add("expanded"),this.buttons.section.addEventListener("mouseleave",(e=>{setTimeout((()=>Je.buttons.section.classList.remove("expanded")),200)})))};this.app.addEventListener("mousemove",e),this.app.addEventListener("mouseleave",(()=>document.querySelectorAll(".popup").forEach((e=>e.remove())))),this.app.addEventListener("click",(()=>{document.querySelectorAll(".context-menu").forEach((e=>e.remove()))})),this.app.addEventListener("contextmenu",(e=>{this.showContextmenu({event:e,menuItems:this.settings.contextMenuItems})})),this.app.addEventListener("mousedown",(t=>{this.app.removeEventListener("mousemove",e)})),this.app.addEventListener("mouseup",(t=>{this.app.addEventListener("mousemove",e)}))}updateWidgets({earnedAchievementsIDs:e}){try{this.aotw?.checkCheevo({earnedAchievementIDs:e})}catch(e){console.log(e)}this.notifications.pushNotification({type:this.notifications.types.earnedAchivs,elements:e}),this.achievementsBlock.forEach((t=>t.updateEarnedAchieves({earnedAchievementIDs:e}))),this.target.updateEarnedAchieves({earnedAchievementIDs:e}),this.target.delayedRemove(),this.awards.VISIBLE&&this.awards.updateAwards(),this.statusPanel.updateProgress({earnedAchievementIDs:e}),this.status.updateProgress({earnedAchievementIDs:e}),this.progression.update({earnedAchievementIDs:e}),this.userInfoTimeout&&clearTimeout(this.userInfoTimeout),(this.stats?.VISIBLE||this.statusPanel?.SHOW_STATISTICS_ALERT)&&(this.userInfoTimeout=setTimeout((async()=>{const e=await et.getUserSummary({gamesCount:0,achievesCount:0});Je.stats.updateStats({currentUserSummary:e}),Je.statusPanel?.updateStatistics({userSummary:e})}),16e3*e.length))}showAwardsAlerts(e=[]){H(e),e.forEach((e=>{this.settings.DISCORD_NEW_AWARD&&M(e)})),this.statusPanel.addAlertsToQuery(e),this.status.addAlertsToQuery(e),this.gameCard.section.dataset.award=tt.GAME_DATA?.award??"-",this.gameCard.section.dataset.progressionAward=tt.GAME_DATA?.progressionAward??"-",e.length&&setTimeout((()=>Je.stats.updateChart()),4e3)}showCheevoAlerts(e=[]){let t=e.map((e=>({type:D.cheevo,value:tt.CHEEVOS[e]})));t.forEach((e=>{const t=e.value,{DISCORD_MIN_POINTS_ALERT:s,DISCORD_MIN_RETROPOINTS_ALERT:i,DISCORD_HARD_ONLY_ALERT:n,DISCORD_NEW_CHEEVO:a}=Je.settings,o=t.Points>=s||t.TrueRatio>=i,r=!n||t.isHardcoreEarned;a&&o&&r&&M(e)})),H(t),this.statusPanel.addAlertsToQuery(t),this.status.addAlertsToQuery(t)}updateWidgetsRichPresence(e="Rich presence"){this.statusPanel.frontSide.richPresence.innerText=e,this.status.richPresenceElement.innerText=e;const t=Ye(e);this.CURRENT_LEVEL=t,t&&(this.target.highlightCurrentLevel(t),this.achievementsBlock.forEach((e=>e.highlightCurrentLevel(t))))}showContextmenu({event:e,menuItems:t,sectionCode:s=""}){e.preventDefault(),e.stopPropagation(),document.querySelector(".context-menu")?.remove(),this.contextMenu=O({menuItems:t,sectionCode:s}),this.app.appendChild(this.contextMenu),(()=>{this.contextMenu.style.left=e.x+"px",this.contextMenu.style.top=e.y+"px",window.innerWidth-e.x<3*this.contextMenu.offsetWidth&&this.contextMenu.classList.add("to-left"),window.innerHeight-e.y<2*this.contextMenu.offsetHeight&&this.contextMenu.classList.add("to-top")})(),this.contextMenu.classList.remove("hidden")}createAchievementsTemplate(){2===this.achievementsBlock.length?ze.switchSectionVisibility(this.achievementsBlock[1]):(this.achievementsBlock.push(new ce(!0)),tt.GAME_DATA&&this.achievementsBlock.at(-1).parseGameAchievements(tt.GAME_DATA))}stopWatching(){Je.IS_WATCHING=!1,this.statusPanel.frontSide.watchButton.classList.remove("active"),clearInterval(Je.apiTrackerInterval)}static updateColors(e){const{style:t}=document.body,{mainColor:s,secondaryColor:i,accentColor:n,fontColor:a,selectionColor:o}=Qe.getColors(e||Qe.colorsPreset);t.setProperty("--main-color",s),t.setProperty("--secondary-color",i),t.setProperty("--accent-color",n),t.setProperty("--font-color",a),t.setProperty("--selection-color",o)}static addDraggingEventForElements(e,t){}static switchSectionVisibility({section:e,visible:t=!1}){e.classList.contains("hidden")||t?(e.classList.remove("disposed"),setTimeout((()=>e.classList.remove("hidden")),100),Qe.setNewPosition({id:e.id,hidden:!1})):(e.classList.add("hidden"),setTimeout((()=>e.classList.add("disposed")),300),Qe.setNewPosition({id:e.id,hidden:!0}))}exportCompletionDataToXlsx=()=>G.completion();exportWantToPlayToCSV=()=>G.wantToPlay();exportSettingsToJson=()=>F();importSettingsFromJson(){const e=document.createElement("input");e.type="file",e.accept=".json",e.addEventListener("change",(function(e){const t=e.target.files[0];if(t){const e=new FileReader;e.onload=function(e){try{const t=JSON.parse(e.target.result);console.log("Imported Settings:",t),Je.applySettings(t)}catch(e){console.error("Error parsing JSON:",e)}},e.onerror=function(){console.error("Error reading file:",e.error)},e.readAsText(t)}else console.log("No file selected")})),e.click()}applySettings(e){e.version>=.65?(Qe._cfg=e,Qe.writeConfiguration(),setTimeout((()=>location.reload()),1e3)):console.log("Unsupported file")}}function je(e,t="gameTitle"){return w(e.map((e=>a[e])),t)}const Ye=e=>{let t;const s=["level","levels","stage","area","world","mission","chapter","section","part","zone","phase","realm","domain","episode","act","sequence","tier","floor","dimension","region","floor","scene","🚩","in"].join("|");return t=((e,t)=>{const i=new RegExp(`(${s})(\\s|-\\s*|:\\s*)((\\d+-\\d+)|(\\d+))`,"gi"),n=new RegExp(`\\b${t?.join("\\b|\\b")}\\b`,"gi"),a=e.match(n),o=a?tt.GAME_DATA.zones?.indexOf(a[0]):void 0,r=e.matchAll(i);let c;for(const e of r)c=e[3]?.replace("-",".");return o>=0&&(c=`${o+1}${c?.includes(".")?"."+c:""}`),Number(c)})((e=>{const t={first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9,tenth:10,"1st":1,"2nd":2,"3rd":3,"4th":4,"5th":5,"6th":6,"7th":7,"8th":8,"9th":9,"10th":10},s=new RegExp(Object.keys(t).join("|"),"gi");return e.replace(s,(e=>t[e.toLowerCase()]))})(e),tt.GAME_DATA.zones),!!Number.isFinite(t)&&t},Ke={1:167,2:83,3:79,4:26,5:24,6:43,7:49,8:null,9:119,10:117,11:74,12:27,13:46,14:null,15:77,17:112,18:9,21:15,23:null,24:null,25:23,27:12,28:null,29:null,33:null,37:null,38:41,39:107,40:106,41:17,43:111,44:null,45:null,46:null,47:null,49:null,51:28,53:null,56:null,57:null,63:null,69:null,71:null,72:null,73:null,74:null,75:null,76:null,77:null,78:13,80:null,101:null,102:null};class Xe{get _savedCompletionProgress(){return Qe._cfg?.apiWorker?.completionProgress??{}}get SAVED_COMPLETION_PROGRESS(){let e=this._savedCompletionProgress;if(e?.Total&&Qe._cfg.apiWorker.targetUser===Qe.targetUser){return new Date-this._savedCompletionProgress.Date<6e4?this._savedCompletionProgress:this.updateCompletionProgress({batchSize:10,savedArray:e.Results}).then((()=>this._savedCompletionProgress))}return this.updateCompletionProgress({batchSize:500}).then((()=>this._savedCompletionProgress))}set SAVED_COMPLETION_PROGRESS(e){e.Results=e.Results.map((e=>(delete e.ConsoleName,delete e.NumLeaderboards,e))),Qe._cfg.apiWorker||(Qe._cfg.apiWorker={}),Qe._cfg.apiWorker.targetUser=Qe.targetUser,Qe._cfg.apiWorker.completionProgress=e,Qe.writeConfiguration()}baseUrl="https://retroachievements.org/API/";endpoints={userProfile:"API_GetUserProfile.php",gameProgress:"API_GetGameInfoAndUserProgress.php",recentAchieves:"API_GetUserRecentAchievements.php",gameInfo:"API_GetGame.php",extendedGameInfo:"API_GetGameExtended.php",recentlyPlayedGames:"API_GetUserRecentlyPlayedGames.php",userAwards:"API_GetUserAwards.php",userGameRankAndScore:"API_GetUserGameRankAndScore.php",completionProgress:"API_GetUserCompletionProgress.php",gameList:"API_GetGameList.php",userSummary:"API_GetUserSummary.php",achievementOfTheWeek:"API_GetAchievementOfTheWeek.php",comments:"API_GetComments.php",wantToPlay:"API_GetUserWantToPlayList.php"};getUrl({endpoint:e,targetUser:t,gameID:s,minutes:i,apiKey:n,userName:a,achievesCount:o,count:r,offset:c,type:l}){let d=new URL(e,this.baseUrl),h={y:n||Qe.API_KEY,z:a||Qe.USER_NAME,u:t||Qe.targetUser,g:s??Qe.gameID,m:i||2e3,i:s||Qe.gameID,f:1,h:1,a:o||5,c:r||20,o:c||0,t:l};return e===this.endpoints.userProfile&&delete h.i,d.search=new URLSearchParams(h),d}getAotW(){let e=this.getUrl({endpoint:this.endpoints.achievementOfTheWeek});return fetch(e).then((e=>e.json())).then((e=>{const t=e.Unlocks.find((e=>e.User.toLowerCase()===Qe.targetUser?.toLowerCase()?.trim()));return{...e.Achievement,ConsoleName:e.Console.Title,ForumTopic:e.ForumTopic.ID,GameID:e.Game.ID,GameTitle:e.Game.Title,StartAt:e.StartAt,TotalPlayers:e.TotalPlayers,UnlocksHardcoreCount:e.UnlocksHardcoreCount,isEarned:!!t,isEarnedHardcore:!!t&&!!t.HardcoreMode}}))}getUserGameRank({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:this.endpoints.userRankAndScore});return fetch(s).then((e=>e.json()))}getProfileInfo({targetUser:e}){let t=this.getUrl({targetUser:e,endpoint:this.endpoints.userProfile});return fetch(t).then((e=>e.json()))}getUserCompelitionProgress({targetUser:e,count:t,offset:s}){let i=this.getUrl({targetUser:e||Qe.targetUser,count:t||100,offset:s||0,endpoint:this.endpoints.completionProgress});return fetch(i).then((e=>e.json())).then((e=>(e.Results=e.Results.map((e=>(e.ID=e.GameID,e.NumAchievements=e.MaxPossible,delete e.MaxPossible,delete e.NumLeaderboards,e))),e)))}getUserAwards({targetUser:e}){let t=this.getUrl({targetUser:e||Qe.targetUser,endpoint:this.endpoints.userAwards});return fetch(t).then((e=>e.json())).then((e=>(e.VisibleUserAwards=e.VisibleUserAwards.map((e=>({...e,DateEarnedHardcore:e.AwardedAt,timeString:r(e.AwardedAt),award:"Events"==e.ConsoleName?"event":"Game Beaten"==e.AwardType?"1"==e.AwardDataExtra?"beaten":"beaten_softcore":"1"==e.AwardDataExtra?"mastered":"completed"}))),e)))}getGameProgress({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:this.endpoints.gameProgress,targetUser:e||Qe.targetUser,gameID:t||Qe.gameID});return fetch(s).then((e=>e.json())).then((e=>{e={...e,...this.parseBadges(e),TotalRealPlayers:0,TotalRetropoints:0,totalPoints:0,progressionRetroRatio:0,beatenCount:1/0,masteredCount:1/0,beatenSoftCount:1/0,completedCount:1/0,earnedStats:{soft:{count:0,points:0,retropoints:0,progressionCount:0},hard:{count:0,points:0,retropoints:0,progressionCount:0}}};const t={Count:0,WinCount:0,WinAwardedCount:0,WinAwardedSoftCount:0,WinEarnedCount:0},s={isBeaten:!0,isBeatenSoftcore:!0,isWinEarned:!1,isWinEarnedSoftcore:!1};for(let i of Object.values(e.Achievements))e.TotalRetropoints+=i.TrueRatio,e.totalPoints+=i.Points,e.TotalRealPlayers<i.NumAwarded&&(e.TotalRealPlayers=i.NumAwarded),i.DateEarned&&(e.earnedStats.soft.count+=1,e.earnedStats.soft.points+=i.Points,e.earnedStats.soft.retropoints+=i.TrueRatio,"progression"!==i.type&&"win_condition"!==i.type||e.earnedStats.soft.progressionCount++),i.DateEarnedHardcore&&(e.earnedStats.hard.count+=1,e.earnedStats.hard.points+=i.Points,e.earnedStats.hard.retropoints+=i.TrueRatio,"progression"!==i.type&&"win_condition"!==i.type||e.earnedStats.hard.progressionCount++),"progression"===i.type?(t.Count++,!i.DateEarned&&(s.isBeatenSoftcore=!1),!i.DateEarnedHardcore&&(s.isBeaten=!1),e.beatenCount=Math.min(i.NumAwardedHardcore,e.beatenCount),e.beatenSoftCount=Math.min(i.NumAwarded,e.beatenSoftCount)):"win_condition"===i.type&&(t.WinCount++,t.WinAwardedCount=Math.max(i.NumAwardedHardcore,t.WinAwardedCount),t.WinAwardedSoftCount=Math.max(i.NumAwarded,t.WinAwardedSoftCount),i.DateEarnedHardcore&&t.WinEarnedCount++,s.isWinEarned=!!i.DateEarnedHardcore,s.isWinEarnedSoftcore=!!i.DateEarned),e.masteredCount=Math.min(i.NumAwardedHardcore,e.masteredCount),e.completedCount=Math.min(i.NumAwarded,e.completedCount);(e={...e,winVariantCount:t.WinCount,winEarnedCount:t.WinEarnedCount,progressionSteps:t.WinCount>0?t.Count+1:t.Count}).award=e.NumAchievements===e.NumAwardedToUserHardcore?"mastered":e.NumAchievements===e.NumAwardedToUser?"completed":e.award,e.progressionSteps&&(e.progressionAward=s.isBeaten&&e.earnedStats.hard.progressionCount>=e.progressionSteps?"beaten":s.isBeatenSoftcore&&e.earnedStats.soft.progressionCount>=e.progressionSteps?"beaten-softcore":e.progressionAward),t.WinCount>0&&(e.beatenCount=t.WinAwardedCount,e.beatenSoftCount=t.WinAwardedSoftCount),e.beatenCount!=1/0&&(e.beatenRate=~~(1e4*e.beatenCount/e.TotalRealPlayers)/100),e.beatenSoftCount!=1/0&&(e.beatenSoftRate=~~(1e4*e.beatenSoftCount/e.TotalRealPlayers)/100),e.masteredCount!=1/0&&(e.masteryRate=~~(1e4*e.masteredCount/e.TotalRealPlayers)/100),e.completedCount!=1/0&&(e.completedRate=~~(1e4*e.completedCount/e.TotalRealPlayers)/100);const i=~~(e.TotalRetropoints/e.totalPoints*100)/100;return e.retroRatio=i,e.gameDifficulty=i>9?"s":i>7?"a":i>5?"b":i>3?"c":"d",this.gameData=JSON.parse(JSON.stringify(e)),this.parseCheevoLevels(e),this.parseCheevosGenres(e),Object.values(e.Achievements).map((t=>this.fixAchievement(t,e))),e={...e,TimePlayed:0,...Qe.gamesDB[e?.ID]}}))}getRecentAchieves({targetUser:e,minutes:t}){let s=this.getUrl({endpoint:this.endpoints.recentAchieves,targetUser:e,minutes:t});return fetch(s).then((e=>e.json())).then((e=>e.map((e=>(e.Date=r(e.Date),e)))))}getGameInfo({gameID:e,extended:t}){let s=this.getUrl({endpoint:this.endpoints[t?"extendedGameInfo":"gameInfo"],gameID:e});return fetch(s).then((e=>e.json()))}getWantToPlayGamesList({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:this.endpoints.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>e.Results||[]))}getWantToPlayGames({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:this.endpoints.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>(e.Results||[]).map((e=>e.ID))))}getRecentlyPlayedGames({targetUser:e,count:t}){let s=this.getUrl({endpoint:this.endpoints.recentlyPlayedGames,targetUser:e,count:t||50});return fetch(s).then((e=>e.json())).then((e=>e.map(((e,t)=>({...e,...this.parseBadges(e),ID:e.GameID,Points:e.ScoreAchievedHardcore+"/"+e.PossibleScore,NumAchievements:e.NumAchievedHardcore+"/"+e.AchievementsTotal,DateEarnedHardcore:e.LastPlayed})))))}getUserProfile({userName:e}){let t=this.getUrl({targetUser:e,userName:e,endpoint:this.endpoints.userProfile});return fetch(t).then((e=>e.json()))}getUserSummary({targetUser:e,gamesCount:t,achievesCount:s}){let i=this.getUrl({targetUser:e,gameID:t??3,achievesCount:s,endpoint:this.endpoints.userSummary});return fetch(i).then((e=>e.json())).then((e=>(e.RecentlyPlayed=e.RecentlyPlayed.map((t=>(t.LastPlayed=r(t.LastPlayed),e.Awarded[t.GameID]&&(t={...t,...e.Awarded[t.GameID]}),t))),e.RecentAchievements=Object.values(e.RecentAchievements).flatMap((e=>Object.values(e))).map((e=>(e.DateAwarded=r(e.DateAwarded),e))),e.RecentlyPlayed.length&&(e.isInGame=new Date-new Date(e.RecentlyPlayed[0].LastPlayed)<3e5),e)))}getComments({targetUser:e,id:t,offset:s=0,count:i=200,type:n=2}){let a=this.getUrl({targetUser:e,gameID:t,type:n,offset:s,count:i,endpoint:this.endpoints.comments});return fetch(a).then((e=>e.json())).then((e=>e.Results?.filter((e=>"Server"!==e.User)).reverse()||[]))}verifyUserIdent({userName:e,apiKey:t}){let s=this.getUrl({targetUser:e,userName:e,apiKey:t,endpoint:this.endpoints.userProfile});return fetch(s).then((e=>e.json()))}getGameList({userName:e,apiKey:t,systemID:s}){let i=this.getUrl({userName:e,apiKey:t,gameID:s,endpoint:this.endpoints.gameList});return fetch(i).then((e=>e.json()))}doTestEndpoint({endpoint:e}){let t=this.getUrl({endpoint:e});return fetch(t).then((e=>e.json())).then((e=>console.log(e)))}async updateCompletionProgress({savedArray:e=[],completionProgress:t=[],batchSize:s=500}){let i=await this.getUserCompelitionProgress({count:s,offset:t.length}),n=(t=[...t,...i.Results]).at(-1);if(e.findIndex((e=>e.hasOwnProperty("GameID")&&e.GameID===n.GameID&&e.MostRecentAwardedDate===n.MostRecentAwardedDate))>=0||t.length===i.Total){const s=t.map((e=>e.GameID));e=e.filter((e=>!s.includes(e.GameID))),e=[...t,...e],this.SAVED_COMPLETION_PROGRESS={Date:new Date,Total:e.length,Results:e}}else setTimeout((()=>this.updateCompletionProgress({savedArray:e,completionProgress:t,batchSize:s})),100)}fixAchievement(e,t){const{BadgeName:s,DateEarned:i,DateEarnedHardcore:n,NumAwardedHardcore:a,NumAwarded:o,TrueRatio:c,ID:l,Points:d}=e,{NumDistinctPlayers:h,NumAwardedToUserHardcore:g,TotalRealPlayers:u}=t,m=100*(a-.5*g)/(.5*(h+u)-.5*g),p=100*a/h;t.Achievements[l]={...e,totalPlayers:h,isEarned:!!i,isHardcoreEarned:!!n,DateEarned:i&&r(i),DateEarnedHardcore:n&&r(n),prevSrc:`https://media.retroachievements.org/Badge/${s}.png`,rateEarned:~~(100*o/h)+"%",rateEarnedHardcore:a<20?a:p<10?`${p.toFixed(1)}%`:`${p.toFixed(0)}%`,trend:m,retroRatio:(c/d).toFixed(2),difficulty:m<1.5&&c>300||c>=500?"sss":m<=3&&c>100||c>=300?"s":m<8&&c>24?"a":m<13&&c>10?"b":m<20&&c>5||c>10?"c":"d",...Qe.cheevosDB[l]}}parseBadges(e){let t=e.Title;const s=[/\[SUBSET[^\[]*\]/gi,/~[^~]*~/g,".HACK//"].reduce(((s,i)=>{const n=new RegExp(i,"gi"),a=e.Title.match(n);return a&&a.forEach((e=>{t=t.replace(e,"");let i=e;s.push(i.replace(/[~\.\[\]]|subset -|\/\//gi,""))})),s}),[]);return e.badges=s,e.FixedTitle=t.trim(),{badges:s,FixedTitle:t.trim()}}parseCheevoLevels(e){const t=Object.values(e.Achievements).sort(((e,t)=>0!=e.DisplayOrder?e.DisplayOrder-t.DisplayOrder:e.ID-t.ID)),s=t.reduce(((e,t)=>{const s=(e=>{const t=["Stage","Area","World","Mission","Chapter","Section","Zone","Scene"],s=["Win","Perfect","Clear","Complete","Finish","Beat","Start","Enter","Reach","Select","Bonus","No","Any","Mario","The"],i=function(e){const i="\\b"+[...t,...t.map((e=>e.toLowerCase()))].join("\\b|\\b")+"\\b",n="\\b"+s.join("\\b|\\b")+"\\b",a="\\b[A-Z]\\w*\\b",o=new RegExp(`((?:${i})\\s(?!${n})((${a}\\s*){1,2}))|((?!${n}\\s*)((${a}\\s*){1,2})(?:${i}(?!\\s*\\d)))`,"gm").exec(e),r=o&&(o[2]||o[5]);return r?.trim()}(e.Description);return i})(t);s&&(e.zoneCount++,!e.zoneNames.includes(s)&&e.zoneNames.push(s));const i=(e=>{const t=["level","levels","stage\\b","stages","area","world","mission","chapter","section","zone","phase","realm","domain","episode","act","acts","tier","floor","floors","dimension","region","scene","screen","round\\b","course","board"],s={one:"1",first:"1",two:"2",second:"2",three:"3",third:"3",four:"4",fourth:"4",five:"5",fifth:"5",six:"6",sixth:"6",seven:"7",seventh:"7",eight:"8",eighth:"8",nine:"9",ninth:"9",ten:"10",tenth:"10",eleven:"11",eleventh:"11",twelve:"12",twelfth:"12",thirteen:"13",thirteenth:"13",fourteen:"14",fourteenth:"14",fifteen:"15",fifteenth:"15",sixteen:"16",sixteenth:"16",seventeen:"17",seventeenth:"17",eighteen:"18",eighteenth:"18",nineteen:"19",nineteenth:"19",twenty:"20",twentieth:"20"},i=function(e){const s=t.join("|"),i="(?!\\d{4,}|\\d+%)(\\d{1,3}(?:-\\d{1,3}\\b){0,1})",n=new RegExp(`(?:(${s})\\s(?<level1>${i}))|(?<level2>${i})\\s(?:(${s}))|(?<level3>\\b\\d{1,3}-\\d{1,2}\\b)`,"gi").exec(e);if(n){const e=n.groups.level1||n.groups.level2||n.groups.level3;return parseFloat(e?.replace("-","."))}return null}(function(e){e=e.replaceAll(/(\d)(st|nd|rd|th)/gi,((e,t)=>t));const t=new RegExp(Object.keys(s).map((e=>`\\b${e}\\b`)).join("|"),"gi");return e.replace(t,(e=>s[e.toLowerCase().trim()]))}(e.Description));return i})(t);return i&&(e.levelCount++,e.levelNums.add(i)),e.data.push({ID:t.ID,zone:s,level:i}),e}),{zoneCount:0,levelCount:0,levelNums:new Set,data:[],zoneNames:[]});s?.zoneNames?.forEach(((t,i)=>{Object.values(e.Achievements).forEach((e=>{const i=new RegExp(`\\b${t}\\b`,"gi");(i.test(e.Description)||i.test(e.Title))&&(s.zoneCount++,s.data.push({ID:e.ID,zone:t}))}))})),s.zoneNames.length>3&&s.zoneCount>4&&s.zoneNames.length>=s.levelNums.size?(s.zoneNames=((e,t)=>e.reduce(((e,s)=>(t.forEach((t=>{const i=new RegExp(`\\b${t}\\b`,"g");!e.includes(t)&&(i.test(s.Title)||i.test(s.Description))&&e.push(t)})),e)),[]))(t,s.zoneNames),e.zones=s.zoneNames,s.data.forEach((t=>{t.zone&&(e.Achievements[t.ID].zone=t.zone,e.Achievements[t.ID].level=+`${e.zones.indexOf(t.zone)+1}${t.level?"."+t.level:""}`)}))):(s.levelCount,s.levelNums.size>3?s.data.forEach((t=>{delete e.Achievements[t.ID].zone,e.Achievements[t.ID].level=t.level})):s.data.forEach((t=>{delete e.Achievements[t.ID].zone,delete e.Achievements[t.ID].level})))}parseCheevosGenres(e){Object.values(e.Achievements).forEach((e=>{e.genres=[],(e=>{["first","second","third","fourth","fifth","sixth","seventh","eighth"].join("\\b|\\b");const t="\\b"+["Defeat","defeat","(K|k)ill"].join("\\b|\\b")+"\\b",s="\\b"+["(?:T|t)he\\b","(?:M|m)rs{0,1}\\b[.]*","(?:D|d)r\\b[.]*"].join("|\\b"),i="\\b"+["All"].join("\\b|\\b")+"\\b";return new RegExp(`((${t})\\s*(${s})*\\s*(?!${i})(?:(['"]*[A-Z]\\w*\\b)|((all)*[\\s\\w]*boss(es)*)))`,"g").exec(e.Description)})(e)&&e.genres.push("bossfight"),(e=>{const t="\\b"+["(?:C|c)ollect","by collecting","(?:O|o)btain","(?:S|s)till","(?:P|p)ick\\sup"].join("\\b|\\b")+"\\b",s=["(?:P|p)oints","(?:S|s)core"].join("|");return new RegExp(`(?:${t})(?![^.]*(?:${s}))[^.]+(?:.|w$)`,"g").exec(e.Description)})(e)&&e.genres.push("collector"),(e=>new RegExp("(((W|w)ithout|no)\\b[\\s\\w]*((D|d)amage|(H|h)armed)|(\\b(with)|at)\\b\\sfull\\s(\\b(health)|(life)))","gi").exec(e.Description))(e)&&e.genres.push("no-damage"),(e=>{const t=["without\\sdying","(without|\\bno(t)*)\\slosing\\s(a)*\\slife","\\bno(t)*\\s(dying|death)"].join("|");return new RegExp(`${t},"gi"`).exec(e.Description)})(e)&&e.genres.push("no-death"),(e=>{const t=["\\b(?:M|m)inute","\\b(?:S|s)econds","\\b(?:H|h)our"].join("|");return new RegExp(`((?:\\bin\\b|\\bless|\\bunder|\\bfor|\\within)[\\s\\w\\d:]*(?:${t}))|(.*\\d{0,2}:\\d{2})`,"g").exec(e.Description)})(e)&&e.genres.push("timetrial"),(e=>{const t="\\b"+["(?:S|s)core(?:d|s){0,1}","(?:(P|p)oints{0,1})","(?:PTS|pts|Pts)","(?:E|e)arn"].join("\\b|\\b")+"\\b",s="\\d{1,3}[.,]{0,1}(?:\\d{3,}[.,]{0,1})+";return new RegExp(`(?:(?:${t})[^.]+)${s}|(?:${s}[^.]+(?:${t}))`,"g").exec([e.Title,e.Description].join(". "))})(e)&&e.genres.push("score")}))}async rawgSearchGame({gameTitle:e,platformID:t}){e=e.split("|")[0];const s=Ke[t];if(!s)return!1;let i=new URL("games","https://api.rawg.io/api/"),n={search:e,platforms:s,key:"179353905bcb491d975b1fc03b3c8bd6"};i.search=new URLSearchParams(n);try{const s=await fetch(i);if(!s.ok)return console.log(`HTTP error! status: ${s.status}`),!1;const n=await s.json(),a=n.results?n.results[0]:null,o=e.replace(/[^a-z0-9]/gi," ").trim(),r=a?.name.replace(/[^a-z0-9]/gi," ").trim()??"";if(!a||o!==r)return console.log(`Game not found for title: ${e} on platform: ${t}`),!1;const c=["name","playtime","released","background_image","rating","ratings","added","metacritic","score","community_rating","genres"];return Object.fromEntries(Object.entries(a).filter((([e])=>c.includes(e))))}catch(e){return console.log(`Fetch error: ${e.message}`),!1}}}class Ze{RP_DATA={text:"",lastChange:""};IS_ONLINE=!0;IS_HARD_MODE=!0;IS_WATCHING=!1;RECENT_ACHIVES_RANGE_MINUTES=Math.max(5*Qe.updateDelay/60,5);CHECK_FOR_ONLINE_DELAY_MS=6e4;CHECK_FOR_ONLINE_AFTER_SILENCE_MS=18e4;watcherInterval;playTime={totalGameTime:0,gameTime:0,sessionTime:0,timer:60};points={hard:0,soft:0};get CHEEVOS(){return this.GAME_DATA?.Achievements??{}}get GAME_DATA(){return this._gameData}set GAME_DATA(e){this.savePlayTime();const t=this.GAME_DATA&&e.ID!=this.GAME_DATA?.ID;this._gameData=e,this.initPlayTime(),(t=>{Je.statusPanel.gameChangeEvent(t),Je.status?.gameChangeEvent(t),Je.gameList?.gameChangeEvent(),Je.achievementsBlock.forEach((e=>e?.parseGameAchievements(this.GAME_DATA))),Je.gameCard?.updateGameCardInfo(this.GAME_DATA),Je.target.gameChangeEvent(),Je.note?.updateGame(),t&&Je.notifications?.pushNotification({type:Je.notifications.types.newGame,elements:e}),Je.progression?.generateProgression()})(t)}constructor(){this.isActive=!1}initPlayTime=()=>{const e=this.GAME_DATA?.ID??0,t=this.GAME_DATA?.TimePlayed;this.playTime={...this.playTime,gameID:e,totalGameTime:t,gameTime:0,timer:60}};gameChangeEvent(){}async checkForOnline(){console.log("Checking for online...");const e=(e=>{!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");return new Date(e)})((await et.getRecentlyPlayedGames({count:1}))[0].LastPlayed);if(!Je.settings.PAUSE_ON_OFFLINE||new Date-e<3e5)this.RP_DATA.lastChange=new Date,!this.IS_ONLINE&&(this.IS_ONLINE=!0,this.checkApiUpdates()),this.IS_ONLINE=!0;else{if(this.IS_ONLINE=!1,!this.IS_WATCHING)return;setTimeout((()=>this.checkForOnline()),this.CHECK_FOR_ONLINE_DELAY_MS)}}apiTrackerInterval;async checkApiUpdates(e=!1){const t=e=>{this.points.hard=e.TotalPoints,this.points.soft=e.TotalSoftcorePoints};if(!(e||Je.settings.PAUSE_ON_OFFLINE&&this.IS_ONLINE))return;const s=await et.getProfileInfo({});(s.LastGameID!=this.GAME_DATA?.ID||e)&&(Qe.gameID=s.LastGameID,e&&t(s),await this.updateGameData(s.LastGameID),(Je.settings.DISCORD_NEW_GAME||e&&Je.settings.DISCORD_START_SESSION)&&M({type:D.game})),(e=>e.TotalPoints!=this.points.hard||e.TotalSoftcorePoints!=this.points.soft)(s)&&(t(s),this.updateCheevos(),this.RP_DATA.lastChange=new Date);const i=s.RichPresenceMsg;Je.updateWidgetsRichPresence(i),i!==this.RP_DATA.text?(this.RP_DATA.lastChange=new Date,this.RP_DATA.text=s.RichPresenceMsg,this.IS_ONLINE=!0):!e&&this.RP_DATA.lastChange&&new Date-this.RP_DATA.lastChange>this.CHECK_FOR_ONLINE_AFTER_SILENCE_MS&&await this.checkForOnline()}async updateGameData(e){e||(e=await(async()=>{const e=Object.values(await et.getRecentlyPlayedGames({count:1}))[0]?.ID;return Qe.gameID=e,e})());try{const t=await et.getGameProgress({gameID:e});this.GAME_DATA=t}catch(e){this.stop,console.error(e)}}async updateCheevos(){const e=e=>{let t=[];e.forEach((e=>{const s=this.CHEEVOS[e.AchievementID];if(s){const i=1===e.HardcoreMode&&!s?.isHardcoreEarned;(!s.isEarned||i)&&t.push(e)}})),(e=>{e.forEach((e=>{const{HardcoreMode:t,Date:s}=e,i=this.CHEEVOS[e.AchievementID],n=1==t;this.IS_HARD_MODE=n,n&&(i.isHardcoreEarned=!0,i.DateEarnedHardcore=s,this.GAME_DATA.earnedStats.hard.count++,this.GAME_DATA.earnedStats.hard.points+=i.Points,this.GAME_DATA.earnedStats.hard.retropoints+=i.TrueRatio,"progression"!=i.type&&"win_condition"!=i.type||this.GAME_DATA.earnedStats.hard.progressionCount++),this.GAME_DATA.earnedStats.soft.count++,this.GAME_DATA.earnedStats.soft.points+=i.Points,"progression"!=i.type&&"win_condition"!=i.type||this.GAME_DATA.earnedStats.soft.progressionCount++,i.isEarned=!0,i.DateEarned=i.DateEarned??s,this.CHEEVOS[e.AchievementID]=i}))})(t);const s=t?.map((e=>e.AchievementID));return s},t=()=>{let e=[];return"mastered"!==this.GAME_DATA.award&&this.GAME_DATA.earnedStats.hard.count===this.GAME_DATA.NumAchievements?(this.GAME_DATA.award="mastered",e.push({type:D.award,award:"mastered",value:this.GAME_DATA})):this.GAME_DATA.award||this.GAME_DATA.earnedStats.soft.count!==this.GAME_DATA.NumAchievements||(this.GAME_DATA.award="completed",e.push({type:D.award,award:"completed",value:this.GAME_DATA})),this.GAME_DATA.progressionSteps>0&&"beaten"!==this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.hard.progressionCount>=this.GAME_DATA.progressionSteps?(this.GAME_DATA.progressionAward="beaten",e.push({type:D.award,award:"beaten",value:this.GAME_DATA})):this.GAME_DATA.progressionSteps>0&&!this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.soft.progressionCount>=this.GAME_DATA.progressionSteps&&(this.GAME_DATA.progressionAward="beaten-softcore",e.push({type:D.award,award:"beaten-softcore",value:this.GAME_DATA})),e};try{const s=e(await et.getRecentAchieves({minutes:this.RECENT_ACHIVES_RANGE_MINUTES})),i=t();Je.showCheevoAlerts(s),Je.showAwardsAlerts(i),Je.updateWidgets({earnedAchievementsIDs:s})}catch(e){console.error(e)}}start(){const e=()=>{this.IS_ONLINE&&(this.playTime.totalGameTime++,this.playTime.gameTime++,this.playTime.sessionTime++,this.playTime.timer--)},t=()=>{Je.statusPanel.blinkUpdate(),Je.status.blinkUpdate()};this.stop(),(()=>{this.checkApiUpdates(!0),this.IS_WATCHING=!0,this.apiTrackerInterval=setInterval((()=>{t(),this.checkApiUpdates()}),Qe.updateDelayInMiliSecs)})(),(()=>{this.isActive=!0,this.initPlayTime()})(),Je.statusPanel.timeWatcher().start(),Je.status.timeWatcher().start(),this.watcherInterval=setInterval((()=>{e(),this.playTime.gameTime%60==0&&this.savePlayTime()}),1e3)}stop(){clearInterval(this.apiTrackerInterval),this.IS_WATCHING=!1,this.isActive=!1,this.playTime.totalGameTime&&this.savePlayTime(),this.watcherInterval&&clearInterval(this.watcherInterval),this.playTime.sessionTime=0,Je.statusPanel.timeWatcher().stop(),Je.status.timeWatcher().stop()}reset(){this._gameData={...this._gameData,...Qe.gamesDB[this._gameData.ID]},this.initPlayTime(),(()=>{const e=!1;Je.statusPanel.gameChangeEvent(e),Je.status?.gameChangeEvent(e),Je.gameList?.gameChangeEvent(),Je.gameCard?.updateGameCardInfo(this.GAME_DATA)})()}resetCheevo(e){Je.target?.refreshCheevo(e)}savePlayTime(){const e=this.playTime.totalGameTime;e>5&&(this.GAME_DATA.TimePlayed=e,Qe.gamesDB[this.GAME_DATA.ID]||(Qe.gamesDB[this.GAME_DATA.ID]={}),Qe.gamesDB[this.GAME_DATA.ID].TimePlayed=e,Qe.writeConfiguration())}}let Qe,Je,et,tt;const st=navigator.userAgent||navigator.vendor||window.opera;/android/i.test(st)||/iPhone/.test(st)&&!window.MSStream?window.location.href="./mobile/index.html":(Qe=new s,Je=new ze,et=new Xe,tt=new Ze,window.ui=Je,window.config=Qe,window.apiWorker=et,window.watcher=tt),Qe.identConfirmed||(console.log("redirect to login"),window.location.href="./login"),document.addEventListener("keydown",(function(e){const t=["ArrowUp","ArrowUp","ArrowDown","ArrowDown","ArrowLeft","ArrowRight","ArrowLeft","ArrowRight","KeyB","KeyA"],s=e.code;s===t[it.length]?(it.push(s),it.length===t.length&&(nt=1===nt?2:1,function(){at&&clearTimeout(at),document.querySelector("#secret")?.remove();let e=document.createElement("audio");10!==it.length&&(e=null),it=[],e.id="secret",e.innerHTML=`\n    <source src="./assets/s/ss-${nt}.m4a" type="audio/mpeg">\n  `,Je.app.appendChild(e),e.play();const t=document.querySelector("#background-animation");t.style.opacity=0,setTimeout((()=>{t.style.opacity=1,t.classList.add("secret"),document.querySelector("#background-animation").style.display="block"}),2e3);at=setTimeout((()=>{t.classList.remove("secret"),document.querySelector("#background-animation").style.display=Qe.bgVisibility?"block":"none"}),1e3*(2===nt?240:66))}())):it=[]}));let it=[],nt=0,at=0})();